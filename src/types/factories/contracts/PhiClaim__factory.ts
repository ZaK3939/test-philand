/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PhiClaim, PhiClaimInterface } from "../../contracts/PhiClaim";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "adminSigner",
        type: "address",
      },
      {
        internalType: "contract IPhiObject",
        name: "phiObject",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "AllreadyClaimedObject",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "digest",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
        ],
        internalType: "struct PhiClaim.Coupon",
        name: "coupon",
        type: "tuple",
      },
    ],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenid",
        type: "uint256",
      },
    ],
    name: "LogClaimObject",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "verifierAddress",
        type: "address",
      },
    ],
    name: "SetAdminSigner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "condition",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenid",
        type: "uint256",
      },
    ],
    name: "SetCoupon",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "condition",
        type: "string",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
        ],
        internalType: "struct PhiClaim.Coupon",
        name: "coupon",
        type: "tuple",
      },
    ],
    name: "claimPhiObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "condition",
        type: "string",
      },
    ],
    name: "getCouponType",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetAddress",
        type: "address",
      },
    ],
    name: "owner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "phiClaimedLists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
    ],
    name: "removeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "verifierAdderss",
        type: "address",
      },
    ],
    name: "setAdminSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "condition",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "setCouponType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610a64380380610a6483398101604081905261002f91610093565b3360009081526020819052604090208054600160ff199091168117909155600280546001600160a01b03199081166001600160a01b0395861617909155815416919092161790556100cd565b6001600160a01b038116811461009057600080fd5b50565b600080604083850312156100a657600080fd5b82516100b18161007b565b60208401519092506100c28161007b565b809150509250929050565b610988806100dc6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063666e1b391161005b578063666e1b391461010b5780638492dde11461013757806392ca31801461014a578063cb568fd41461016b57600080fd5b806313af40351461008d578063173825d9146100a2578063183bbe80146100b557806334d0d7b4146100c8575b600080fd5b6100a061009b366004610683565b61017e565b005b6100a06100b0366004610683565b6101fb565b6100a06100c3366004610683565b610275565b6100f66100d63660046106a5565b600360209081526000928352604080842090915290825290205460ff1681565b60405190151581526020015b60405180910390f35b6100f6610119366004610683565b6001600160a01b031660009081526020819052604090205460ff1690565b6100a061014536600461070e565b610307565b61015d610158366004610862565b6104c0565b604051908152602001610102565b6100a061017936600461089f565b6104e8565b3360009081526020819052604090205460ff166101ae576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260208190526040808220805460ff191660011790555133917f619792ba07bec101df538ab277befa333e4cf1c0274f11de7be2a9507b9c9a0691a350565b3360009081526020819052604090205460ff1661022b576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260208190526040808220805460ff191690555133917fc191551a88c5609788f3532bd94c06479b61b0040eec65f9cd985428ffea643091a350565b3360009081526020819052604090205460ff166102a5576040516349e27cff60e01b815260040160405180910390fd5b600280547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081179091556040517fe962aa622975becd620ca7b16db507022a2b43cc5657b30c4b907a7ecfb8042590600090a250565b336000908152600360209081526040808320878452909152902054849060ff16151560010361035757604051636ed7bf2b60e11b8152336004820152602481018290526044015b60405180910390fd5b60006004858560405161036b9291906108e4565b908152604080519182900360209081018320549083015233908201526060016040516020818303038152906040528051906020012090506103ac8184610578565b6103f85760405162461bcd60e51b815260206004820152600e60248201527f496e76616c696420636f75706f6e000000000000000000000000000000000000604482015260640161034e565b3360008181526003602090815260408083208a845290915290819020805460ff1916600190811790915554905163330343c160e11b81526004810192909252602482018890526001600160a01b031690636606878290604401600060405180830381600087803b15801561046b57600080fd5b505af115801561047f573d6000803e3d6000fd5b50506040518881523392507fa7257a8b02d81b3fb6715b360a5b4f02dcdc4a4b36e79108b7738ee77706d8cb915060200160405180910390a2505050505050565b60006004826040516104d29190610924565b9081526020016040518091039020549050919050565b3360009081526020819052604090205460ff16610518576040516349e27cff60e01b815260040160405180910390fd5b806004836040516105299190610924565b9081526020016040518091039020819055507fd48ea628c05cf728666ea64aa7f8a243f1b39c14c572c1bfffb231d92cba27f1828260405161056c929190610940565b60405180910390a15050565b600080600184846040015185600001518660200151604051600081526020016040526040516105c3949392919093845260ff9290921660208401526040830152606082015260800190565b6020604051602081039080840390855afa1580156105e5573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661064f576040805163d1c36d9d60e01b81523360048201526001600160a01b03831660248201526044810186905284516064820152602085015160848201529084015160ff1660a482015260c40161034e565b6002546001600160a01b039081169116149392505050565b80356001600160a01b038116811461067e57600080fd5b919050565b60006020828403121561069557600080fd5b61069e82610667565b9392505050565b600080604083850312156106b857600080fd5b6106c183610667565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715610708576107086106cf565b60405290565b60008060008084860360a081121561072557600080fd5b85359450602086013567ffffffffffffffff8082111561074457600080fd5b818801915088601f83011261075857600080fd5b81358181111561076757600080fd5b89602082850101111561077957600080fd5b6020929092019550909350506060603f198201121561079757600080fd5b506107a06106e5565b6040860135815260608601356020820152608086013560ff811681146107c557600080fd5b6040820152939692955090935050565b600082601f8301126107e657600080fd5b813567ffffffffffffffff80821115610801576108016106cf565b604051601f8301601f19908116603f01168101908282118183101715610829576108296106cf565b8160405283815286602085880101111561084257600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561087457600080fd5b813567ffffffffffffffff81111561088b57600080fd5b610897848285016107d5565b949350505050565b600080604083850312156108b257600080fd5b823567ffffffffffffffff8111156108c957600080fd5b6108d5858286016107d5565b95602094909401359450505050565b8183823760009101908152919050565b60005b8381101561090f5781810151838201526020016108f7565b8381111561091e576000848401525b50505050565b600082516109368184602087016108f4565b9190910192915050565b604081526000835180604084015261095f8160608501602088016108f4565b602083019390935250601f91909101601f19160160600191905056fea164736f6c634300080d000a";

type PhiClaimConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PhiClaimConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PhiClaim__factory extends ContractFactory {
  constructor(...args: PhiClaimConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    adminSigner: string,
    phiObject: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PhiClaim> {
    return super.deploy(
      adminSigner,
      phiObject,
      overrides || {}
    ) as Promise<PhiClaim>;
  }
  override getDeployTransaction(
    adminSigner: string,
    phiObject: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(adminSigner, phiObject, overrides || {});
  }
  override attach(address: string): PhiClaim {
    return super.attach(address) as PhiClaim;
  }
  override connect(signer: Signer): PhiClaim__factory {
    return super.connect(signer) as PhiClaim__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PhiClaimInterface {
    return new utils.Interface(_abi) as PhiClaimInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PhiClaim {
    return new Contract(address, _abi, signerOrProvider) as PhiClaim;
  }
}
