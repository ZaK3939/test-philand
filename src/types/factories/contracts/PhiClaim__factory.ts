/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PhiClaim, PhiClaimInterface } from "../../contracts/PhiClaim";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "adminSigner",
        type: "address",
      },
      {
        internalType: "contract IPhiObject",
        name: "object",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "AllreadyClaimedObject",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenid",
        type: "uint256",
      },
    ],
    name: "LogClaimObject",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "condition",
        type: "string",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
        ],
        internalType: "struct PhiClaim.Coupon",
        name: "coupon",
        type: "tuple",
      },
    ],
    name: "claimObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "claimedLists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "couponType",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "condition",
        type: "string",
      },
    ],
    name: "getCouponType",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetAddress",
        type: "address",
      },
    ],
    name: "owner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
    ],
    name: "removeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "condition",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "tokenid",
        type: "uint256",
      },
    ],
    name: "setCouponType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161097538038061097583398101604081905261002f91610093565b336000908152602081905260409020805460ff1916600190811790915580546001600160a01b039384166001600160a01b031991821617909155600280549290931691161790556100cd565b6001600160a01b038116811461009057600080fd5b50565b600080604083850312156100a657600080fd5b82516100b18161007b565b60208401519092506100c28161007b565b809150509250929050565b610899806100dc6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063666e1b391161005b578063666e1b391461010657806392ca318014610142578063cb568fd414610155578063f69014bf1461016857600080fd5b806303cadb6e1461008d57806313af4035146100a2578063173825d9146100b5578063523da16f146100c8575b600080fd5b6100a061009b366004610621565b610196565b005b6100a06100b03660046106f1565b610360565b6100a06100c33660046106f1565b6103dd565b6100f36100d6366004610713565b805160208183018101805160048252928201919093012091525481565b6040519081526020015b60405180910390f35b6101326101143660046106f1565b6001600160a01b031660009081526020819052604090205460ff1690565b60405190151581526020016100fd565b6100f36101503660046107c4565b610457565b6100a0610163366004610806565b610482565b610132610176366004610852565b600360209081526000928352604080842090915290825290205460ff1681565b6000600484846040516101aa92919061087c565b908152604080519182900360209081018320549083015233908201526060016040516020818303038152906040528051906020012090506101eb81836104da565b61023c5760405162461bcd60e51b815260206004820152600e60248201527f496e76616c696420636f75706f6e00000000000000000000000000000000000060448201526064015b60405180910390fd5b33600090815260036020908152604080832088845290915290205460ff16151560010361028557604051636ed7bf2b60e11b815233600482015260248101869052604401610233565b336000818152600360209081526040808320898452825291829020805460ff19166001179055815192835282018790527fa7257a8b02d81b3fb6715b360a5b4f02dcdc4a4b36e79108b7738ee77706d8cb910160405180910390a1600254604051636cc07a5760e11b8152336004820152602481018790526001604482015260806064820152600060848201526001600160a01b039091169063d980f4ae9060a401600060405180830381600087803b15801561034157600080fd5b505af1158015610355573d6000803e3d6000fd5b505050505050505050565b3360009081526020819052604090205460ff16610390576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260208190526040808220805460ff191660011790555133917f619792ba07bec101df538ab277befa333e4cf1c0274f11de7be2a9507b9c9a0691a350565b3360009081526020819052604090205460ff1661040d576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260208190526040808220805460ff191690555133917fc191551a88c5609788f3532bd94c06479b61b0040eec65f9cd985428ffea643091a350565b60006004838360405161046b92919061087c565b908152602001604051809103902054905092915050565b3360009081526020819052604090205460ff166104b2576040516349e27cff60e01b815260040160405180910390fd5b80600484846040516104c592919061087c565b90815260405190819003602001902055505050565b60008060018484604001518560000151866020015160405160008152602001604052604051610525949392919093845260ff9290921660208401526040830152606082015260800190565b6020604051602081039080840390855afa158015610547573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166105aa5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610233565b6001546001600160a01b039081169116149392505050565b60008083601f8401126105d457600080fd5b50813567ffffffffffffffff8111156105ec57600080fd5b60208301915083602082850101111561060457600080fd5b9250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008084860360a081121561063857600080fd5b85359450602086013567ffffffffffffffff8082111561065757600080fd5b61066389838a016105c2565b90965094508491506060603f198401121561067d57600080fd5b6040519250606083019150828210818311171561069c5761069c61060b565b506040908152860135815260608601356020820152608086013560ff811681146106c557600080fd5b6040820152939692955090935050565b80356001600160a01b03811681146106ec57600080fd5b919050565b60006020828403121561070357600080fd5b61070c826106d5565b9392505050565b60006020828403121561072557600080fd5b813567ffffffffffffffff8082111561073d57600080fd5b818401915084601f83011261075157600080fd5b8135818111156107635761076361060b565b604051601f8201601f19908116603f0116810190838211818310171561078b5761078b61060b565b816040528281528760208487010111156107a457600080fd5b826020860160208301376000928101602001929092525095945050505050565b600080602083850312156107d757600080fd5b823567ffffffffffffffff8111156107ee57600080fd5b6107fa858286016105c2565b90969095509350505050565b60008060006040848603121561081b57600080fd5b833567ffffffffffffffff81111561083257600080fd5b61083e868287016105c2565b909790965060209590950135949350505050565b6000806040838503121561086557600080fd5b61086e836106d5565b946020939093013593505050565b818382376000910190815291905056fea164736f6c634300080d000a";

type PhiClaimConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PhiClaimConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PhiClaim__factory extends ContractFactory {
  constructor(...args: PhiClaimConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    adminSigner: string,
    object: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PhiClaim> {
    return super.deploy(
      adminSigner,
      object,
      overrides || {}
    ) as Promise<PhiClaim>;
  }
  override getDeployTransaction(
    adminSigner: string,
    object: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(adminSigner, object, overrides || {});
  }
  override attach(address: string): PhiClaim {
    return super.attach(address) as PhiClaim;
  }
  override connect(signer: Signer): PhiClaim__factory {
    return super.connect(signer) as PhiClaim__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PhiClaimInterface {
    return new utils.Interface(_abi) as PhiClaimInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PhiClaim {
    return new Contract(address, _abi, signerOrProvider) as PhiClaim;
  }
}
