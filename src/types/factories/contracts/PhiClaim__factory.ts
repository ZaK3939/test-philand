/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PhiClaim, PhiClaimInterface } from "../../contracts/PhiClaim";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "AllreadyClaimedObject",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "digest",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
        ],
        internalType: "struct PhiClaim.Coupon",
        name: "coupon",
        type: "tuple",
      },
    ],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "NotAdminCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Hello",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenid",
        type: "uint256",
      },
    ],
    name: "LogClaimObject",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "verifierAddress",
        type: "address",
      },
    ],
    name: "SetAdminSigner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "condition",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenid",
        type: "uint256",
      },
    ],
    name: "SetCoupon",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "checkClaimedStatus",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "condition",
        type: "string",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
        ],
        internalType: "struct PhiClaim.Coupon",
        name: "coupon",
        type: "tuple",
      },
    ],
    name: "claimPhiObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAdminSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "condition",
        type: "string",
      },
    ],
    name: "getCouponType",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
      {
        internalType: "address",
        name: "adminSigner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "phiClaimedLists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "verifierAdderss",
        type: "address",
      },
    ],
    name: "setAdminSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "condition",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "setCouponType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50600062000020600162000087565b9050801562000039576000805461ff0019166101001790555b801562000080576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50620001a8565b60008054610100900460ff161562000120578160ff166001148015620000c05750620000be306200019960201b6200080d1760201c565b155b620001185760405162461bcd60e51b815260206004820152602e6024820152600080516020620014e783398151915260448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b506000919050565b60005460ff8084169116106200017f5760405162461bcd60e51b815260206004820152602e6024820152600080516020620014e783398151915260448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016200010f565b506000805460ff191660ff92909216919091179055600190565b6001600160a01b03163b151590565b61132f80620001b86000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806392ca318011610097578063b6e9201011610066578063b6e9201014610223578063cb568fd414610257578063d547741f1461026a578063e05a3de41461027d57600080fd5b806392ca3180146101da578063a217fddf146101ed578063a4cfd20a146101f5578063a8bc401d1461021057600080fd5b80632f2ff15d116100d35780632f2ff15d1461016857806336568abe1461017b578063485cc9551461018e57806391d14854146101a157600080fd5b806301ffc9a7146100fa578063183bbe8014610122578063248a9ca314610137575b600080fd5b61010d610108366004610e11565b6102b9565b60405190151581526020015b60405180910390f35b610135610130366004610e52565b6102f0565b005b61015a610145366004610e6d565b60009081526065602052604090206001015490565b604051908152602001610119565b610135610176366004610e86565b61039d565b610135610189366004610e86565b6103c7565b61013561019c366004610eb2565b610453565b61010d6101af366004610e86565b60009182526065602090815260408084206001600160a01b0393909316845291905290205460ff1690565b61015a6101e8366004610fa8565b610525565b61015a600081565b6097546040516001600160a01b039091168152602001610119565b61013561021e366004610fe5565b61054d565b61010d6102313660046110bf565b609860209081526000938452604080852082529284528284209052825290205460ff1681565b6101356102653660046110fb565b610737565b610135610278366004610e86565b6107e8565b61010d61028b366004611140565b3360009081526098602090815260408083206001600160a01b03959095168352938152928120918152915290565b60006001600160e01b03198216637965db0b60e01b14806102ea57506301ffc9a760e01b6001600160e01b03198316145b92915050565b3360009081527fffdfc1249c027f9191656349feb0761381bb32c9f557e01f419fd08754bf5a1b602052604090205460ff1661034657604051631a35241360e31b81523360048201526024015b60405180910390fd5b6097805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517fe962aa622975becd620ca7b16db507022a2b43cc5657b30c4b907a7ecfb8042590600090a250565b6000828152606560205260409020600101546103b88161081c565b6103c28383610829565b505050565b6001600160a01b03811633146104455760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c660000000000000000000000000000000000606482015260840161033d565b61044f82826108cb565b5050565b600061045f600161094e565b90508015610477576000805461ff0019166101001790555b6097805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0384161790556104a7610a69565b6104b2600084610ae8565b6040517fbcdfe0d5b27dd186282e187525415c57ea3077c34efb39148111e4d342e7ab0e90600090a180156103c2576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b6000609982604051610537919061119a565b9081526020016040518091039020549050919050565b3360009081526098602090815260408083206001600160a01b038916845282528083208784529091529020548590859060ff1615156001036105ab57604051636ed7bf2b60e11b81523360048201526024810182905260440161033d565b6000879050600088609988886040516105c59291906111b6565b908152604080519182900360209081018320546001600160a01b03909416908301528101919091523360608201526080016040516020818303038152906040528051906020012090506106188186610af2565b6106645760405162461bcd60e51b815260206004820152600e60248201527f496e76616c696420636f75706f6e000000000000000000000000000000000000604482015260640161033d565b3360008181526098602090815260408083206001600160a01b038e811685529083528184208d855290925291829020805460ff19166001179055905163330343c160e11b81526004810192909252602482018a9052831690636606878290604401600060405180830381600087803b1580156106df57600080fd5b505af11580156106f3573d6000803e3d6000fd5b50506040518a81523392507fa7257a8b02d81b3fb6715b360a5b4f02dcdc4a4b36e79108b7738ee77706d8cb915060200160405180910390a2505050505050505050565b3360009081527fffdfc1249c027f9191656349feb0761381bb32c9f557e01f419fd08754bf5a1b602052604090205460ff1661078857604051631a35241360e31b815233600482015260240161033d565b80609983604051610799919061119a565b9081526020016040518091039020819055507fd48ea628c05cf728666ea64aa7f8a243f1b39c14c572c1bfffb231d92cba27f182826040516107dc9291906111f2565b60405180910390a15050565b6000828152606560205260409020600101546108038161081c565b6103c283836108cb565b6001600160a01b03163b151590565b6108268133610be1565b50565b60008281526065602090815260408083206001600160a01b038516845290915290205460ff1661044f5760008281526065602090815260408083206001600160a01b03851684529091529020805460ff191660011790556108873390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60008281526065602090815260408083206001600160a01b038516845290915290205460ff161561044f5760008281526065602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60008054610100900460ff16156109dc578160ff1660011480156109715750303b155b6109d45760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161033d565b506000919050565b60005460ff808416911610610a4a5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161033d565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff16610ae65760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e67000000000000000000000000000000000000000000606482015260840161033d565b565b61044f8282610829565b60008060018484604001518560000151866020015160405160008152602001604052604051610b3d949392919093845260ff9290921660208401526040830152606082015260800190565b6020604051602081039080840390855afa158015610b5f573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610bc9576040805163d1c36d9d60e01b81523360048201526001600160a01b03831660248201526044810186905284516064820152602085015160848201529084015160ff1660a482015260c40161033d565b6097546001600160a01b039081169116149392505050565b60008281526065602090815260408083206001600160a01b038516845290915290205460ff1661044f57610c1f816001600160a01b03166014610c61565b610c2a836020610c61565b604051602001610c3b929190611214565b60408051601f198184030181529082905262461bcd60e51b825261033d91600401611295565b60606000610c708360026112be565b610c7b9060026112dd565b67ffffffffffffffff811115610c9357610c93610edc565b6040519080825280601f01601f191660200182016040528015610cbd576020820181803683370190505b509050600360fc1b81600081518110610cd857610cd86112f5565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610d0757610d076112f5565b60200101906001600160f81b031916908160001a9053506000610d2b8460026112be565b610d369060016112dd565b90505b6001811115610dbb577f303132333435363738396162636465660000000000000000000000000000000085600f1660108110610d7757610d776112f5565b1a60f81b828281518110610d8d57610d8d6112f5565b60200101906001600160f81b031916908160001a90535060049490941c93610db48161130b565b9050610d39565b508315610e0a5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161033d565b9392505050565b600060208284031215610e2357600080fd5b81356001600160e01b031981168114610e0a57600080fd5b80356001600160a01b0381168114610a6457600080fd5b600060208284031215610e6457600080fd5b610e0a82610e3b565b600060208284031215610e7f57600080fd5b5035919050565b60008060408385031215610e9957600080fd5b82359150610ea960208401610e3b565b90509250929050565b60008060408385031215610ec557600080fd5b610ece83610e3b565b9150610ea960208401610e3b565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715610f1557610f15610edc565b60405290565b600082601f830112610f2c57600080fd5b813567ffffffffffffffff80821115610f4757610f47610edc565b604051601f8301601f19908116603f01168101908282118183101715610f6f57610f6f610edc565b81604052838152866020858801011115610f8857600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215610fba57600080fd5b813567ffffffffffffffff811115610fd157600080fd5b610fdd84828501610f1b565b949350505050565b600080600080600085870360c0811215610ffe57600080fd5b61100787610e3b565b955060208701359450604087013567ffffffffffffffff8082111561102b57600080fd5b818901915089601f83011261103f57600080fd5b81358181111561104e57600080fd5b8a602082850101111561106057600080fd5b6020929092019550909350506060605f198201121561107e57600080fd5b50611087610ef2565b606087013581526080870135602082015260a087013560ff811681146110ac57600080fd5b6040820152949793965091945092919050565b6000806000606084860312156110d457600080fd5b6110dd84610e3b565b92506110eb60208501610e3b565b9150604084013590509250925092565b6000806040838503121561110e57600080fd5b823567ffffffffffffffff81111561112557600080fd5b61113185828601610f1b565b95602094909401359450505050565b6000806040838503121561115357600080fd5b61115c83610e3b565b946020939093013593505050565b60005b8381101561118557818101518382015260200161116d565b83811115611194576000848401525b50505050565b600082516111ac81846020870161116a565b9190910192915050565b8183823760009101908152919050565b600081518084526111de81602086016020860161116a565b601f01601f19169290920160200192915050565b60408152600061120560408301856111c6565b90508260208301529392505050565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161124c81601785016020880161116a565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000601791840191820152835161128981602884016020880161116a565b01602801949350505050565b602081526000610e0a60208301846111c6565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156112d8576112d86112a8565b500290565b600082198211156112f0576112f06112a8565b500190565b634e487b7160e01b600052603260045260246000fd5b60008161131a5761131a6112a8565b50600019019056fea164736f6c634300080d000a496e697469616c697a61626c653a20636f6e747261637420697320616c726561";

type PhiClaimConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PhiClaimConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PhiClaim__factory extends ContractFactory {
  constructor(...args: PhiClaimConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PhiClaim> {
    return super.deploy(overrides || {}) as Promise<PhiClaim>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PhiClaim {
    return super.attach(address) as PhiClaim;
  }
  override connect(signer: Signer): PhiClaim__factory {
    return super.connect(signer) as PhiClaim__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PhiClaimInterface {
    return new utils.Interface(_abi) as PhiClaimInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PhiClaim {
    return new Contract(address, _abi, signerOrProvider) as PhiClaim;
  }
}
