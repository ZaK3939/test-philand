/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  PhiRegistry,
  PhiRegistryInterface,
} from "../../contracts/PhiRegistry";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IENS",
        name: "ens",
        type: "address",
      },
      {
        internalType: "address",
        name: "adminSigner",
        type: "address",
      },
      {
        internalType: "contract IPhiMap",
        name: "map",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "AllreadyClaimedPhiland",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "label",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "InvalidENS",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "NotReadyPhiland",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "LogChangePhilandOwner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenid",
        type: "uint256",
      },
    ],
    name: "LogClaimObject",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "LogCreatePhiland",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "changePhilandOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "condition",
        type: "string",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
        ],
        internalType: "struct PhiRegistry.Coupon",
        name: "coupon",
        type: "tuple",
      },
    ],
    name: "claimObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "couponType",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "createPhiland",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "condition",
        type: "string",
      },
    ],
    name: "getCouponType",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "greeting",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "label",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetAddress",
        type: "address",
      },
    ],
    name: "owner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "ownerLists",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "ownerOfPhiland",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
    ],
    name: "removeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "condition",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "tokenid",
        type: "uint256",
      },
    ],
    name: "setCouponType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_basenode",
        type: "bytes32",
      },
    ],
    name: "setEnsBaseNode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040527f93cdeb708b7545dc668eb9280176169d1c33cfd8ed6f04690a0bcc88a93fc4ae60065560006009553480156200003a57600080fd5b5060405162001954380380620019548339810160408190526200005d91620000d4565b336000908152602081905260409020805460ff1916600190811790915580546001600160a01b039485166001600160a01b03199182161790915560038054938516938216939093179092556002805491909316911617905562000128565b6001600160a01b0381168114620000d157600080fd5b50565b600080600060608486031215620000ea57600080fd5b8351620000f781620000bb565b60208501519093506200010a81620000bb565b60408501519092506200011d81620000bb565b809150509250925092565b61181c80620001386000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80639068f12d11610097578063cb4774c411610066578063cb4774c41461025a578063cb568fd414610263578063e834a83414610276578063ef690cc01461027f57600080fd5b80639068f12d146101ed57806392ca3180146102005780639452f04d14610213578063c8c28b791461022657600080fd5b806351cfbbd9116100d357806351cfbbd914610152578063523da16f14610165578063624346ea1461019e578063666e1b39146101b157600080fd5b806305c81566146100fa57806313af40351461012a578063173825d91461013f575b600080fd5b61010d610108366004611216565b610294565b6040516001600160a01b0390911681526020015b60405180910390f35b61013d6101383660046112df565b610305565b005b61013d61014d3660046112df565b610382565b61013d610160366004611303565b6103fc565b610190610173366004611216565b805160208183018101805160088252928201919093012091525481565b604051908152602001610121565b61013d6101ac366004611365565b610431565b6101dd6101bf3660046112df565b6001600160a01b031660009081526020819052604090205460ff1690565b6040519015158152602001610121565b61013d6101fb36600461142b565b6105a0565b61019061020e36600461142b565b610755565b61013d61022136600461142b565b610781565b61010d610234366004611216565b80516020818301810180516007825292820191909301209152546001600160a01b031681565b61019060055481565b61013d61027136600461146d565b610975565b61019060095481565b6102876109cd565b60405161012191906114e9565b6000806001600160a01b03166007836040516102b0919061151c565b908152604051908190036020019020546001600160a01b0316146102fd576007826040516102de919061151c565b908152604051908190036020019020546001600160a01b031692915050565b506000919050565b3360009081526020819052604090205460ff16610335576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260208190526040808220805460ff191660011790555133917f619792ba07bec101df538ab277befa333e4cf1c0274f11de7be2a9507b9c9a0691a350565b3360009081526020819052604090205460ff166103b2576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260208190526040808220805460ff191690555133917fc191551a88c5609788f3532bd94c06479b61b0040eec65f9cd985428ffea643091a350565b3360009081526020819052604090205460ff1661042c576040516349e27cff60e01b815260040160405180910390fd5b600655565b600060088484604051610445929190611538565b908152604080519182900360209081018320549083015233908201526060016040516020818303038152906040528051906020012090506104868183610a5b565b6104d75760405162461bcd60e51b815260206004820152600e60248201527f496e76616c696420636f75706f6e00000000000000000000000000000000000060448201526064015b60405180910390fd5b60006001600160a01b0316600788886040516104f4929190611538565b908152604051908190036020019020546001600160a01b03160361055c573360078888604051610525929190611538565b908152604051908190036020018120546325c38edf60e11b82526104ce92916001600160a01b03909116908a908a90600401611571565b7f9a0909ccecedddaf668c0a566fdd9f48d18d2c01717767fe7050ac6a6387406387878760405161058f939291906115a8565b60405180910390a150505050505050565b6105aa8282610b43565b60058190556001546040516302571be360e01b815260048101929092526001600160a01b0316906302571be390602401602060405180830381865afa1580156105f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061b91906115cc565b6001600160a01b0316336001600160a01b0316146106c8576005546001546040516302571be360e01b8152600481018390523392859285926001600160a01b03909116906302571be3906024015b602060405180830381865afa158015610686573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106aa91906115cc565b604051631506b0c360e11b81526004016104ce9594939291906115e9565b33600783836040516106db929190611538565b90815260405190819003602001812080546001600160a01b039390931673ffffffffffffffffffffffffffffffffffffffff199093169290921790915533907fbb24c9ef8c34dc16b2f4623e6e8b415fe38c43a9a6b435cd3330e92146f1a51b906107499085908590611627565b60405180910390a25050565b600060088383604051610769929190611538565b90815260200160405180910390205490505b92915050565b61078b8282610b43565b60058190556001546040516302571be360e01b815260048101929092526001600160a01b0316906302571be390602401602060405180830381865afa1580156107d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107fc91906115cc565b6001600160a01b0316336001600160a01b03161461084e576005546001546040516302571be360e01b8152600481018390523392859285926001600160a01b03909116906302571be390602401610669565b60006001600160a01b03166007838360405161086b929190611538565b908152604051908190036020019020546001600160a01b0316146108d357336007838360405161089c929190611538565b90815260405190819003602001812054632c064ce160e01b82526104ce92916001600160a01b039091169085908590600401611571565b33600783836040516108e6929190611538565b90815260405190819003602001812080546001600160a01b039390931673ffffffffffffffffffffffffffffffffffffffff199093169290921790915533907f55da0857a5df23f43c9be98b1707bc6a2d42d5ec8ee76089999c188f8afcf861906109549085908590611627565b60405180910390a26009805490600061096c83611651565b91905055505050565b3360009081526020819052604090205460ff166109a5576040516349e27cff60e01b815260040160405180910390fd5b80600884846040516109b8929190611538565b90815260405190819003602001902055505050565b600480546109da9061166a565b80601f0160208091040260200160405190810160405280929190818152602001828054610a069061166a565b8015610a535780601f10610a2857610100808354040283529160200191610a53565b820191906000526020600020905b815481529060010190602001808311610a3657829003601f168201915b505050505081565b60008060018484604001518560000151866020015160405160008152602001604052604051610aa6949392919093845260ff9290921660208401526040830152606082015260800190565b6020604051602081039080840390855afa158015610ac8573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610b2b5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016104ce565b6003546001600160a01b039081169116149392505050565b600080610b8584848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610e3a92505050565b60408051808201825260018152601760f91b602080830191825283518085018552600080825290820181905284518086019095529251845283015291925090610bce8383610e67565b610bd99060016116a4565b67ffffffffffffffff811115610bf157610bf16111d7565b604051908082528060200260200182016040528015610c2457816020015b6060815260200190600190039081610c0f5790505b50905060005b8151811015610c7557610c45610c408585610f08565b610f27565b828281518110610c5757610c576116bc565b60200260200101819052508080610c6d90611651565b915050610c2a565b508051600103610cd1576006548686604051610c92929190611538565b604051908190038120610cb19291602001918252602082015260400190565b60408051601f198184030181529190528051602090910120600555610e2d565b600060018251610ce191906116d2565b90505b8015610e2b5760018251610cf891906116d2565b8103610d5c57600654828281518110610d1357610d136116bc565b602002602001015180519060200120604051602001610d3c929190918252602082015260400190565b60408051601f198184030181529190528051602090910120600555610db6565b600554828281518110610d7157610d716116bc565b602002602001015180519060200120604051602001610d9a929190918252602082015260400190565b60408051601f1981840301815291905280516020909101206005555b80600103610e195760055482600081518110610dd457610dd46116bc565b602002602001015180519060200120604051602001610dfd929190918252602082015260400190565b60408051601f1981840301815291905280516020909101206005555b80610e23816116e9565b915050610ce4565b505b5050600554949350505050565b60408051808201825260008082526020918201528151808301909252825182529182019181019190915290565b6000808260000151610e8b8560000151866020015186600001518760200151610f90565b610e9591906116a4565b90505b83516020850151610ea991906116a4565b8111610f015781610eb981611651565b9250508260000151610ef0856020015183610ed491906116d2565b8651610ee091906116d2565b8386600001518760200151610f90565b610efa91906116a4565b9050610e98565b5092915050565b6040805180820190915260008082526020820152610f018383836110b2565b60606000826000015167ffffffffffffffff811115610f4857610f486111d7565b6040519080825280601f01601f191660200182016040528015610f72576020820181803683370190505b5090506000602082019050610f01818560200151866000015161115d565b6000838186851161109b576020851161104a5760008515610fdc576001610fb88760206116d2565b610fc3906008611700565b610fce906002611803565b610fd891906116d2565b1990505b84518116600087610fed8b8b6116a4565b610ff791906116d2565b855190915083165b82811461103c57818610611024576110178b8b6116a4565b96505050505050506110aa565b8561102e81611651565b965050838651169050610fff565b8596505050505050506110aa565b508383206000905b61105c86896116d2565b82116110995785832080820361107857839450505050506110aa565b6110836001856116a4565b935050818061109190611651565b925050611052565b505b6110a587876116a4565b925050505b949350505050565b604080518082019091526000808252602082015260006110e48560000151866020015186600001518760200151610f90565b60208087018051918601919091525190915061110090826116d2565b83528451602086015161111391906116a4565b81036111225760008552611154565b8351835161113091906116a4565b8551869061113f9083906116d2565b905250835161114e90826116a4565b60208601525b50909392505050565b6020811061119557815183526111746020846116a4565b92506111816020836116a4565b915061118e6020826116d2565b905061115d565b60001981156111c45760016111ab8360206116d2565b6111b790610100611803565b6111c191906116d2565b90505b9151835183169219169190911790915250565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715611210576112106111d7565b60405290565b60006020828403121561122857600080fd5b813567ffffffffffffffff8082111561124057600080fd5b818401915084601f83011261125457600080fd5b813581811115611266576112666111d7565b604051601f8201601f19908116603f0116810190838211818310171561128e5761128e6111d7565b816040528281528760208487010111156112a757600080fd5b826020860160208301376000928101602001929092525095945050505050565b6001600160a01b03811681146112dc57600080fd5b50565b6000602082840312156112f157600080fd5b81356112fc816112c7565b9392505050565b60006020828403121561131557600080fd5b5035919050565b60008083601f84011261132e57600080fd5b50813567ffffffffffffffff81111561134657600080fd5b60208301915083602082850101111561135e57600080fd5b9250929050565b60008060008060008086880360c081121561137f57600080fd5b873567ffffffffffffffff8082111561139757600080fd5b6113a38b838c0161131c565b909950975060208a0135965060408a01359150808211156113c357600080fd5b506113d08a828b0161131c565b9095509350506060605f19820112156113e857600080fd5b506113f16111ed565b606088013581526080880135602082015260a088013560ff8116811461141657600080fd5b80604083015250809150509295509295509295565b6000806020838503121561143e57600080fd5b823567ffffffffffffffff81111561145557600080fd5b6114618582860161131c565b90969095509350505050565b60008060006040848603121561148257600080fd5b833567ffffffffffffffff81111561149957600080fd5b6114a58682870161131c565b909790965060209590950135949350505050565b60005b838110156114d45781810151838201526020016114bc565b838111156114e3576000848401525b50505050565b60208152600082518060208401526115088160408501602087016114b9565b601f01601f19169190910160400192915050565b6000825161152e8184602087016114b9565b9190910192915050565b8183823760009101908152919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60006001600160a01b0380871683528086166020840152506060604083015261159e606083018486611548565b9695505050505050565b6040815260006115bc604083018587611548565b9050826020830152949350505050565b6000602082840312156115de57600080fd5b81516112fc816112c7565b60006001600160a01b0380881683526080602084015261160d608084018789611548565b604084019590955292909216606090910152509392505050565b6020815260006110aa602083018486611548565b634e487b7160e01b600052601160045260246000fd5b6000600182016116635761166361163b565b5060010190565b600181811c9082168061167e57607f821691505b60208210810361169e57634e487b7160e01b600052602260045260246000fd5b50919050565b600082198211156116b7576116b761163b565b500190565b634e487b7160e01b600052603260045260246000fd5b6000828210156116e4576116e461163b565b500390565b6000816116f8576116f861163b565b506000190190565b600081600019048311821515161561171a5761171a61163b565b500290565b600181815b8085111561175a5781600019048211156117405761174061163b565b8085161561174d57918102915b93841c9390800290611724565b509250929050565b6000826117715750600161077b565b8161177e5750600061077b565b8160018114611794576002811461179e576117ba565b600191505061077b565b60ff8411156117af576117af61163b565b50506001821b61077b565b5060208310610133831016604e8410600b84101617156117dd575081810a61077b565b6117e7838361171f565b80600019048211156117fb576117fb61163b565b029392505050565b60006112fc838361176256fea164736f6c634300080d000a";

type PhiRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PhiRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PhiRegistry__factory extends ContractFactory {
  constructor(...args: PhiRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    ens: string,
    adminSigner: string,
    map: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PhiRegistry> {
    return super.deploy(
      ens,
      adminSigner,
      map,
      overrides || {}
    ) as Promise<PhiRegistry>;
  }
  override getDeployTransaction(
    ens: string,
    adminSigner: string,
    map: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(ens, adminSigner, map, overrides || {});
  }
  override attach(address: string): PhiRegistry {
    return super.attach(address) as PhiRegistry;
  }
  override connect(signer: Signer): PhiRegistry__factory {
    return super.connect(signer) as PhiRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PhiRegistryInterface {
    return new utils.Interface(_abi) as PhiRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PhiRegistry {
    return new Contract(address, _abi, signerOrProvider) as PhiRegistry;
  }
}
