/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  PhiRegistry,
  PhiRegistryInterface,
} from "../../contracts/PhiRegistry";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IENS",
        name: "ens",
        type: "address",
      },
      {
        internalType: "contract IPhiMap",
        name: "map",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "AllreadyClaimedPhiland",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "label",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "InvalidENS",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "NotReadyPhiland",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Hello",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "LogChangePhilandOwner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "LogCreatePhiland",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "basenode",
        type: "bytes32",
      },
    ],
    name: "SetBaseNode",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "changePhilandOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "createPhiland",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetAddress",
        type: "address",
      },
    ],
    name: "owner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "ownerLists",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
    ],
    name: "removeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_basenode",
        type: "bytes32",
      },
    ],
    name: "setBaseNode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260006003557f93cdeb708b7545dc668eb9280176169d1c33cfd8ed6f04690a0bcc88a93fc4ae60045534801561003957600080fd5b50604051611326380380611326833981016040819052610058916100e8565b33600090815260208190526040808220805460ff1916600190811790915580546001600160a01b038681166001600160a01b0319928316179092556002805492861692909116919091179055517fbcdfe0d5b27dd186282e187525415c57ea3077c34efb39148111e4d342e7ab0e9190a15050610122565b6001600160a01b03811681146100e557600080fd5b50565b600080604083850312156100fb57600080fd5b8251610106816100d0565b6020840151909250610117816100d0565b809150509250929050565b6111f5806101316000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80639068f12d1161005b5780639068f12d146101095780639452f04d1461011c578063c8c28b791461012f578063e834a8341461017b57600080fd5b806313af40351461008d57806313e9eaab146100a2578063173825d9146100b5578063666e1b39146100c8575b600080fd5b6100a061009b366004610e04565b610192565b005b6100a06100b0366004610e28565b61020f565b6100a06100c3366004610e04565b61027a565b6100f46100d6366004610e04565b6001600160a01b031660009081526020819052604090205460ff1690565b60405190151581526020015b60405180910390f35b6100a0610117366004610e57565b6102f4565b6100a061012a366004610e57565b610585565b61016361013d366004610e57565b80516020818301810180516005825292820191909301209152546001600160a01b031681565b6040516001600160a01b039091168152602001610100565b61018460035481565b604051908152602001610100565b3360009081526020819052604090205460ff166101c2576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260208190526040808220805460ff191660011790555133917f619792ba07bec101df538ab277befa333e4cf1c0274f11de7be2a9507b9c9a0691a350565b3360009081526020819052604090205460ff1661023f576040516349e27cff60e01b815260040160405180910390fd5b60048190556040518181527fed065924cb720d2ab3ca7676485ce3a88b2bbee023cd6b3af8b010acad4a05ec9060200160405180910390a150565b3360009081526020819052604090205460ff166102aa576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260208190526040808220805460ff191690555133917fc191551a88c5609788f3532bd94c06479b61b0040eec65f9cd985428ffea643091a350565b806000610300826107b1565b6001546040516302571be360e01b8152600481018390529192506001600160a01b0316906302571be390602401602060405180830381865afa15801561034a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036e9190610f08565b6001600160a01b0316336001600160a01b03161461041e576001546040516302571be360e01b8152600481018390523391849184916001600160a01b0316906302571be3906024015b602060405180830381865afa1580156103d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f89190610f08565b604051631506b0c360e11b81526004016104159493929190610f81565b60405180910390fd5b60006001600160a01b03166005846040516104399190610fbd565b908152604051908190036020019020546001600160a01b03160361049d57336005846040516104689190610fbd565b908152604051908190036020018120546325c38edf60e11b825261041592916001600160a01b03909116908690600401610fd9565b336005846040516104ae9190610fbd565b90815260405190819003602001812080546001600160a01b0393841673ffffffffffffffffffffffffffffffffffffffff199091161790556002546348d740a560e01b8252909116906348d740a59061050d908690339060040161100e565b600060405180830381600087803b15801561052757600080fd5b505af115801561053b573d6000803e3d6000fd5b50505050336001600160a01b03167fbb24c9ef8c34dc16b2f4623e6e8b415fe38c43a9a6b435cd3330e92146f1a51b846040516105789190611039565b60405180910390a2505050565b806000610591826107b1565b6001546040516302571be360e01b8152600481018390529192506001600160a01b0316906302571be390602401602060405180830381865afa1580156105db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ff9190610f08565b6001600160a01b0316336001600160a01b03161461064c576001546040516302571be360e01b8152600481018390523391849184916001600160a01b0316906302571be3906024016103b7565b60006001600160a01b03166005846040516106679190610fbd565b908152604051908190036020019020546001600160a01b0316146106cb57336005846040516106969190610fbd565b90815260405190819003602001812054632c064ce160e01b825261041592916001600160a01b03909116908690600401610fd9565b60038054600101905560405133906005906106e7908690610fbd565b90815260405190819003602001812080546001600160a01b0393841673ffffffffffffffffffffffffffffffffffffffff199091161790556002546384b47b0f60e01b8252909116906384b47b0f90610746908690339060040161100e565b600060405180830381600087803b15801561076057600080fd5b505af1158015610774573d6000803e3d6000fd5b50505050336001600160a01b03167f55da0857a5df23f43c9be98b1707bc6a2d42d5ec8ee76089999c188f8afcf861846040516105789190611039565b60008060006107e78460408051808201825260008082526020918201528151808301909252825182529182019181019190915290565b60408051808201825260018152601760f91b6020808301918252835180850185526000808252908201819052845180860190955292518452830152919250906108308383610a7c565b61083b906001611062565b67ffffffffffffffff81111561085357610853610e41565b60405190808252806020026020018201604052801561088657816020015b60608152602001906001900390816108715790505b50905060005b81518110156108d7576108a76108a28585610b1d565b610b3c565b8282815181106108b9576108b961107a565b602002602001018190525080806108cf90611090565b91505061088c565b508051600103610923576004548680519060200120604051602001610906929190918252602082015260400190565b604051602081830303815290604052805190602001209350610a72565b60006001825161093391906110a9565b90505b8015610a70576001825161094a91906110a9565b81036109ab576004548282815181106109655761096561107a565b60200260200101518051906020012060405160200161098e929190918252602082015260400190565b604051602081830303815290604052805190602001209450610a00565b848282815181106109be576109be61107a565b6020026020010151805190602001206040516020016109e7929190918252602082015260400190565b6040516020818303038152906040528051906020012094505b80600103610a5e578482600081518110610a1c57610a1c61107a565b602002602001015180519060200120604051602001610a45929190918252602082015260400190565b6040516020818303038152906040528051906020012094505b80610a68816110c0565b915050610936565b505b5091949350505050565b6000808260000151610aa08560000151866020015186600001518760200151610ba5565b610aaa9190611062565b90505b83516020850151610abe9190611062565b8111610b165781610ace81611090565b9250508260000151610b05856020015183610ae991906110a9565b8651610af591906110a9565b8386600001518760200151610ba5565b610b0f9190611062565b9050610aad565b5092915050565b6040805180820190915260008082526020820152610b16838383610cc7565b60606000826000015167ffffffffffffffff811115610b5d57610b5d610e41565b6040519080825280601f01601f191660200182016040528015610b87576020820181803683370190505b5090506000602082019050610b168185602001518660000151610d72565b60008381868511610cb05760208511610c5f5760008515610bf1576001610bcd8760206110a9565b610bd89060086110d7565b610be39060026111dc565b610bed91906110a9565b1990505b84518116600087610c028b8b611062565b610c0c91906110a9565b855190915083165b828114610c5157818610610c3957610c2c8b8b611062565b9650505050505050610cbf565b85610c4381611090565b965050838651169050610c14565b859650505050505050610cbf565b508383206000905b610c7186896110a9565b8211610cae57858320808203610c8d5783945050505050610cbf565b610c98600185611062565b9350508180610ca690611090565b925050610c67565b505b610cba8787611062565b925050505b949350505050565b60408051808201909152600080825260208201526000610cf98560000151866020015186600001518760200151610ba5565b602080870180519186019190915251909150610d1590826110a9565b835284516020860151610d289190611062565b8103610d375760008552610d69565b83518351610d459190611062565b85518690610d549083906110a9565b9052508351610d639082611062565b60208601525b50909392505050565b60208110610daa5781518352610d89602084611062565b9250610d96602083611062565b9150610da36020826110a9565b9050610d72565b6000198115610dd9576001610dc08360206110a9565b610dcc906101006111dc565b610dd691906110a9565b90505b9151835183169219169190911790915250565b6001600160a01b0381168114610e0157600080fd5b50565b600060208284031215610e1657600080fd5b8135610e2181610dec565b9392505050565b600060208284031215610e3a57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600060208284031215610e6957600080fd5b813567ffffffffffffffff80821115610e8157600080fd5b818401915084601f830112610e9557600080fd5b813581811115610ea757610ea7610e41565b604051601f8201601f19908116603f01168101908382118183101715610ecf57610ecf610e41565b81604052828152876020848701011115610ee857600080fd5b826020860160208301376000928101602001929092525095945050505050565b600060208284031215610f1a57600080fd5b8151610e2181610dec565b60005b83811015610f40578181015183820152602001610f28565b83811115610f4f576000848401525b50505050565b60008151808452610f6d816020860160208601610f25565b601f01601f19169290920160200192915050565b60006001600160a01b03808716835260806020840152610fa46080840187610f55565b6040840195909552929092166060909101525092915050565b60008251610fcf818460208701610f25565b9190910192915050565b60006001600160a01b038086168352808516602084015250606060408301526110056060830184610f55565b95945050505050565b6040815260006110216040830185610f55565b90506001600160a01b03831660208301529392505050565b602081526000610e216020830184610f55565b634e487b7160e01b600052601160045260246000fd5b600082198211156110755761107561104c565b500190565b634e487b7160e01b600052603260045260246000fd5b6000600182016110a2576110a261104c565b5060010190565b6000828210156110bb576110bb61104c565b500390565b6000816110cf576110cf61104c565b506000190190565b60008160001904831182151516156110f1576110f161104c565b500290565b600181815b808511156111315781600019048211156111175761111761104c565b8085161561112457918102915b93841c93908002906110fb565b509250929050565b600082611148575060016111d6565b81611155575060006111d6565b816001811461116b576002811461117557611191565b60019150506111d6565b60ff8411156111865761118661104c565b50506001821b6111d6565b5060208310610133831016604e8410600b84101617156111b4575081810a6111d6565b6111be83836110f6565b80600019048211156111d2576111d261104c565b0290505b92915050565b6000610e21838361113956fea164736f6c634300080d000a";

type PhiRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PhiRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PhiRegistry__factory extends ContractFactory {
  constructor(...args: PhiRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    ens: string,
    map: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PhiRegistry> {
    return super.deploy(ens, map, overrides || {}) as Promise<PhiRegistry>;
  }
  override getDeployTransaction(
    ens: string,
    map: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(ens, map, overrides || {});
  }
  override attach(address: string): PhiRegistry {
    return super.attach(address) as PhiRegistry;
  }
  override connect(signer: Signer): PhiRegistry__factory {
    return super.connect(signer) as PhiRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PhiRegistryInterface {
    return new utils.Interface(_abi) as PhiRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PhiRegistry {
    return new Contract(address, _abi, signerOrProvider) as PhiRegistry;
  }
}
