/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  PhiRegistry,
  PhiRegistryInterface,
} from "../../contracts/PhiRegistry";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IENS",
        name: "ens",
        type: "address",
      },
      {
        internalType: "address",
        name: "adminSigner",
        type: "address",
      },
      {
        internalType: "contract IPhiMap",
        name: "map",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "AllreadyClaimedPhiland",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "label",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "InvalidENS",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "NotReadyPhiland",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "LogChangePhilandOwner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenid",
        type: "uint256",
      },
    ],
    name: "LogClaimObject",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "LogCreatePhiland",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "changePhilandOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "condition",
        type: "string",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
        ],
        internalType: "struct PhiRegistry.Coupon",
        name: "coupon",
        type: "tuple",
      },
    ],
    name: "claimObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "couponType",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "createPhiland",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "condition",
        type: "string",
      },
    ],
    name: "getCouponType",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "label",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetAddress",
        type: "address",
      },
    ],
    name: "owner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "ownerLists",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
    ],
    name: "removeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "condition",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "tokenid",
        type: "uint256",
      },
    ],
    name: "setCouponType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_basenode",
        type: "bytes32",
      },
    ],
    name: "setEnsBaseNode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040527f93cdeb708b7545dc668eb9280176169d1c33cfd8ed6f04690a0bcc88a93fc4ae60055560006008553480156200003a57600080fd5b50604051620017ff380380620017ff8339810160408190526200005d91620000d4565b336000908152602081905260409020805460ff1916600190811790915580546001600160a01b039485166001600160a01b03199182161790915560038054938516938216939093179092556002805491909316911617905562000128565b6001600160a01b0381168114620000d157600080fd5b50565b600080600060608486031215620000ea57600080fd5b8351620000f781620000bb565b60208501519093506200010a81620000bb565b60408501519092506200011d81620000bb565b809150509250925092565b6116c780620001386000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c80639068f12d1161008c578063c8c28b7911610066578063c8c28b79146101e5578063cb4774c414610231578063cb568fd41461023a578063e834a8341461024d57600080fd5b80639068f12d146101ac57806392ca3180146101bf5780639452f04d146101d257600080fd5b8063523da16f116100bd578063523da16f1461011f578063624346ea1461015d578063666e1b391461017057600080fd5b806313af4035146100e4578063173825d9146100f957806351cfbbd91461010c575b600080fd5b6100f76100f2366004611126565b610256565b005b6100f7610107366004611126565b6102d3565b6100f761011a36600461114a565b61034d565b61014a61012d3660046111a2565b805160208183018101805160078252928201919093012091525481565b6040519081526020015b60405180910390f35b6100f761016b36600461129c565b610382565b61019c61017e366004611126565b6001600160a01b031660009081526020819052604090205460ff1690565b6040519015158152602001610154565b6100f76101ba366004611362565b6104f1565b61014a6101cd366004611362565b6106ad565b6100f76101e0366004611362565b6106d9565b6102196101f33660046111a2565b80516020818301810180516006825292820191909301209152546001600160a01b031681565b6040516001600160a01b039091168152602001610154565b61014a60045481565b6100f76102483660046113a4565b61093a565b61014a60085481565b3360009081526020819052604090205460ff16610286576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260208190526040808220805460ff191660011790555133917f619792ba07bec101df538ab277befa333e4cf1c0274f11de7be2a9507b9c9a0691a350565b3360009081526020819052604090205460ff16610303576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260208190526040808220805460ff191690555133917fc191551a88c5609788f3532bd94c06479b61b0040eec65f9cd985428ffea643091a350565b3360009081526020819052604090205460ff1661037d576040516349e27cff60e01b815260040160405180910390fd5b600555565b6000600784846040516103969291906113f0565b908152604080519182900360209081018320549083015233908201526060016040516020818303038152906040528051906020012090506103d78183610992565b6104285760405162461bcd60e51b815260206004820152600e60248201527f496e76616c696420636f75706f6e00000000000000000000000000000000000060448201526064015b60405180910390fd5b60006001600160a01b0316600688886040516104459291906113f0565b908152604051908190036020019020546001600160a01b0316036104ad5733600688886040516104769291906113f0565b908152604051908190036020018120546325c38edf60e11b825261041f92916001600160a01b03909116908a908a90600401611429565b7f9a0909ccecedddaf668c0a566fdd9f48d18d2c01717767fe7050ac6a638740638787876040516104e093929190611460565b60405180910390a150505050505050565b6104fb8282610a7a565b60048181556001546040516302571be360e01b81526001600160a01b03909116926302571be392610530920190815260200190565b602060405180830381865afa15801561054d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105719190611484565b6001600160a01b0316336001600160a01b03161461062057600480546001546040516302571be360e01b815292830182905233928592859290916001600160a01b03909116906302571be3906024015b602060405180830381865afa1580156105de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106029190611484565b604051631506b0c360e11b815260040161041f9594939291906114a1565b33600683836040516106339291906113f0565b90815260405190819003602001812080546001600160a01b039390931673ffffffffffffffffffffffffffffffffffffffff199093169290921790915533907fbb24c9ef8c34dc16b2f4623e6e8b415fe38c43a9a6b435cd3330e92146f1a51b906106a190859085906114df565b60405180910390a25050565b6000600783836040516106c19291906113f0565b90815260200160405180910390205490505b92915050565b6106e38282610a7a565b60048181556001546040516302571be360e01b81526001600160a01b03909116926302571be392610718920190815260200190565b602060405180830381865afa158015610735573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107599190611484565b6001600160a01b0316336001600160a01b0316146107ad57600480546001546040516302571be360e01b815292830182905233928592859290916001600160a01b03909116906302571be3906024016105c1565b60006001600160a01b0316600683836040516107ca9291906113f0565b908152604051908190036020019020546001600160a01b0316146108325733600683836040516107fb9291906113f0565b90815260405190819003602001812054632c064ce160e01b825261041f92916001600160a01b039091169085908590600401611429565b33600683836040516108459291906113f0565b90815260405190819003602001812080546001600160a01b039390931673ffffffffffffffffffffffffffffffffffffffff199093169290921790915533907f55da0857a5df23f43c9be98b1707bc6a2d42d5ec8ee76089999c188f8afcf861906108b390859085906114df565b60405180910390a2600880549060006108cb83611509565b90915550506002546040516384b47b0f60e01b81526001600160a01b03909116906384b47b0f9061090490859085903390600401611522565b600060405180830381600087803b15801561091e57600080fd5b505af1158015610932573d6000803e3d6000fd5b505050505050565b3360009081526020819052604090205460ff1661096a576040516349e27cff60e01b815260040160405180910390fd5b806007848460405161097d9291906113f0565b90815260405190819003602001902055505050565b600080600184846040015185600001518660200151604051600081526020016040526040516109dd949392919093845260ff9290921660208401526040830152606082015260800190565b6020604051602081039080840390855afa1580156109ff573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610a625760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161041f565b6003546001600160a01b039081169116149392505050565b600080610abc84848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610d7192505050565b60408051808201825260018152601760f91b602080830191825283518085018552600080825290820181905284518086019095529251845283015291925090610b058383610d9e565b610b1090600161154f565b67ffffffffffffffff811115610b2857610b28611163565b604051908082528060200260200182016040528015610b5b57816020015b6060815260200190600190039081610b465790505b50905060005b8151811015610bac57610b7c610b778585610e3f565b610e5e565b828281518110610b8e57610b8e611567565b60200260200101819052508080610ba490611509565b915050610b61565b508051600103610c08576005548686604051610bc99291906113f0565b604051908190038120610be89291602001918252602082015260400190565b60408051601f198184030181529190528051602090910120600455610d64565b600060018251610c18919061157d565b90505b8015610d625760018251610c2f919061157d565b8103610c9357600554828281518110610c4a57610c4a611567565b602002602001015180519060200120604051602001610c73929190918252602082015260400190565b60408051601f198184030181529190528051602090910120600455610ced565b600454828281518110610ca857610ca8611567565b602002602001015180519060200120604051602001610cd1929190918252602082015260400190565b60408051601f1981840301815291905280516020909101206004555b80600103610d505760045482600081518110610d0b57610d0b611567565b602002602001015180519060200120604051602001610d34929190918252602082015260400190565b60408051601f1981840301815291905280516020909101206004555b80610d5a81611594565b915050610c1b565b505b5050600454949350505050565b60408051808201825260008082526020918201528151808301909252825182529182019181019190915290565b6000808260000151610dc28560000151866020015186600001518760200151610ec7565b610dcc919061154f565b90505b83516020850151610de0919061154f565b8111610e385781610df081611509565b9250508260000151610e27856020015183610e0b919061157d565b8651610e17919061157d565b8386600001518760200151610ec7565b610e31919061154f565b9050610dcf565b5092915050565b6040805180820190915260008082526020820152610e38838383610fe9565b60606000826000015167ffffffffffffffff811115610e7f57610e7f611163565b6040519080825280601f01601f191660200182016040528015610ea9576020820181803683370190505b5090506000602082019050610e388185602001518660000151611094565b60008381868511610fd25760208511610f815760008515610f13576001610eef87602061157d565b610efa9060086115ab565b610f059060026116ae565b610f0f919061157d565b1990505b84518116600087610f248b8b61154f565b610f2e919061157d565b855190915083165b828114610f7357818610610f5b57610f4e8b8b61154f565b9650505050505050610fe1565b85610f6581611509565b965050838651169050610f36565b859650505050505050610fe1565b508383206000905b610f93868961157d565b8211610fd057858320808203610faf5783945050505050610fe1565b610fba60018561154f565b9350508180610fc890611509565b925050610f89565b505b610fdc878761154f565b925050505b949350505050565b6040805180820190915260008082526020820152600061101b8560000151866020015186600001518760200151610ec7565b602080870180519186019190915251909150611037908261157d565b83528451602086015161104a919061154f565b8103611059576000855261108b565b83518351611067919061154f565b8551869061107690839061157d565b9052508351611085908261154f565b60208601525b50909392505050565b602081106110cc57815183526110ab60208461154f565b92506110b860208361154f565b91506110c560208261157d565b9050611094565b60001981156110fb5760016110e283602061157d565b6110ee906101006116ae565b6110f8919061157d565b90505b9151835183169219169190911790915250565b6001600160a01b038116811461112357600080fd5b50565b60006020828403121561113857600080fd5b81356111438161110e565b9392505050565b60006020828403121561115c57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff8111828210171561119c5761119c611163565b60405290565b6000602082840312156111b457600080fd5b813567ffffffffffffffff808211156111cc57600080fd5b818401915084601f8301126111e057600080fd5b8135818111156111f2576111f2611163565b604051601f8201601f19908116603f0116810190838211818310171561121a5761121a611163565b8160405282815287602084870101111561123357600080fd5b826020860160208301376000928101602001929092525095945050505050565b60008083601f84011261126557600080fd5b50813567ffffffffffffffff81111561127d57600080fd5b60208301915083602082850101111561129557600080fd5b9250929050565b60008060008060008086880360c08112156112b657600080fd5b873567ffffffffffffffff808211156112ce57600080fd5b6112da8b838c01611253565b909950975060208a0135965060408a01359150808211156112fa57600080fd5b506113078a828b01611253565b9095509350506060605f198201121561131f57600080fd5b50611328611179565b606088013581526080880135602082015260a088013560ff8116811461134d57600080fd5b80604083015250809150509295509295509295565b6000806020838503121561137557600080fd5b823567ffffffffffffffff81111561138c57600080fd5b61139885828601611253565b90969095509350505050565b6000806000604084860312156113b957600080fd5b833567ffffffffffffffff8111156113d057600080fd5b6113dc86828701611253565b909790965060209590950135949350505050565b8183823760009101908152919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60006001600160a01b03808716835280861660208401525060606040830152611456606083018486611400565b9695505050505050565b604081526000611474604083018587611400565b9050826020830152949350505050565b60006020828403121561149657600080fd5b81516111438161110e565b60006001600160a01b038088168352608060208401526114c5608084018789611400565b604084019590955292909216606090910152509392505050565b602081526000610fe1602083018486611400565b634e487b7160e01b600052601160045260246000fd5b60006001820161151b5761151b6114f3565b5060010190565b604081526000611536604083018587611400565b90506001600160a01b0383166020830152949350505050565b60008219821115611562576115626114f3565b500190565b634e487b7160e01b600052603260045260246000fd5b60008282101561158f5761158f6114f3565b500390565b6000816115a3576115a36114f3565b506000190190565b60008160001904831182151516156115c5576115c56114f3565b500290565b600181815b808511156116055781600019048211156115eb576115eb6114f3565b808516156115f857918102915b93841c93908002906115cf565b509250929050565b60008261161c575060016106d3565b81611629575060006106d3565b816001811461163f576002811461164957611665565b60019150506106d3565b60ff84111561165a5761165a6114f3565b50506001821b6106d3565b5060208310610133831016604e8410600b8410161715611688575081810a6106d3565b61169283836115ca565b80600019048211156116a6576116a66114f3565b029392505050565b6000611143838361160d56fea164736f6c634300080d000a";

type PhiRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PhiRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PhiRegistry__factory extends ContractFactory {
  constructor(...args: PhiRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    ens: string,
    adminSigner: string,
    map: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PhiRegistry> {
    return super.deploy(
      ens,
      adminSigner,
      map,
      overrides || {}
    ) as Promise<PhiRegistry>;
  }
  override getDeployTransaction(
    ens: string,
    adminSigner: string,
    map: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(ens, adminSigner, map, overrides || {});
  }
  override attach(address: string): PhiRegistry {
    return super.attach(address) as PhiRegistry;
  }
  override connect(signer: Signer): PhiRegistry__factory {
    return super.connect(signer) as PhiRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PhiRegistryInterface {
    return new utils.Interface(_abi) as PhiRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PhiRegistry {
    return new Contract(address, _abi, signerOrProvider) as PhiRegistry;
  }
}
