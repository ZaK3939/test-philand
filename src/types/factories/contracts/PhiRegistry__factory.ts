/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  PhiRegistry,
  PhiRegistryInterface,
} from "../../contracts/PhiRegistry";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IENS",
        name: "ens",
        type: "address",
      },
      {
        internalType: "contract IPhiMap",
        name: "map",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "AllreadyClaimedPhiland",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "label",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "InvalidENS",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "NotReadyPhiland",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Hello",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "LogChangePhilandOwner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "LogCreatePhiland",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "basenode",
        type: "bytes32",
      },
    ],
    name: "SetENS",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "changePhilandOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "createPhiland",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "label",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetAddress",
        type: "address",
      },
    ],
    name: "owner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "ownerLists",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
    ],
    name: "removeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_basenode",
        type: "bytes32",
      },
    ],
    name: "setEnsBaseNode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260006003557f93cdeb708b7545dc668eb9280176169d1c33cfd8ed6f04690a0bcc88a93fc4ae60045534801561003957600080fd5b50604051611365380380611365833981016040819052610058916100e8565b33600090815260208190526040808220805460ff1916600190811790915580546001600160a01b038681166001600160a01b0319928316179092556002805492861692909116919091179055517fbcdfe0d5b27dd186282e187525415c57ea3077c34efb39148111e4d342e7ab0e9190a15050610122565b6001600160a01b03811681146100e557600080fd5b50565b600080604083850312156100fb57600080fd5b8251610106816100d0565b6020840151909250610117816100d0565b809150509250929050565b611234806101316000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c80639068f12d11610076578063c8c28b791161005b578063c8c28b791461014a578063cb4774c414610196578063e834a834146101ad57600080fd5b80639068f12d146101245780639452f04d1461013757600080fd5b806313af4035146100a8578063173825d9146100bd57806351cfbbd9146100d0578063666e1b39146100e3575b600080fd5b6100bb6100b6366004610e43565b6101b6565b005b6100bb6100cb366004610e43565b610233565b6100bb6100de366004610e67565b6102ad565b61010f6100f1366004610e43565b6001600160a01b031660009081526020819052604090205460ff1690565b60405190151581526020015b60405180910390f35b6100bb610132366004610e96565b610318565b6100bb610145366004610e96565b6105ae565b61017e610158366004610e96565b80516020818301810180516006825292820191909301209152546001600160a01b031681565b6040516001600160a01b03909116815260200161011b565b61019f60055481565b60405190815260200161011b565b61019f60035481565b3360009081526020819052604090205460ff166101e6576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260208190526040808220805460ff191660011790555133917f619792ba07bec101df538ab277befa333e4cf1c0274f11de7be2a9507b9c9a0691a350565b3360009081526020819052604090205460ff16610263576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260208190526040808220805460ff191690555133917fc191551a88c5609788f3532bd94c06479b61b0040eec65f9cd985428ffea643091a350565b3360009081526020819052604090205460ff166102dd576040516349e27cff60e01b815260040160405180910390fd5b60048190556040518181527fa75ba4945943e407f2672a04baec637754a4176c06cce3634ab1b2861c7a28019060200160405180910390a150565b80610322816107e0565b60058190556001546040516302571be360e01b815260048101929092526001600160a01b0316906302571be390602401602060405180830381865afa15801561036f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103939190610f47565b6001600160a01b0316336001600160a01b031614610448576005546001546040516302571be360e01b8152600481018390523392849290916001600160a01b03909116906302571be3906024015b602060405180830381865afa1580156103fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104229190610f47565b604051631506b0c360e11b815260040161043f9493929190610fc0565b60405180910390fd5b60006001600160a01b03166006836040516104639190610ffc565b908152604051908190036020019020546001600160a01b0316146104c757336006836040516104929190610ffc565b908152604051908190036020018120546325c38edf60e11b825261043f92916001600160a01b03909116908590600401611018565b336006836040516104d89190610ffc565b90815260405190819003602001812080546001600160a01b0393841673ffffffffffffffffffffffffffffffffffffffff199091161790556002546348d740a560e01b8252909116906348d740a590610537908590339060040161104d565b600060405180830381600087803b15801561055157600080fd5b505af1158015610565573d6000803e3d6000fd5b50505050336001600160a01b03167fbb24c9ef8c34dc16b2f4623e6e8b415fe38c43a9a6b435cd3330e92146f1a51b836040516105a29190611078565b60405180910390a25050565b806105b8816107e0565b60058190556001546040516302571be360e01b815260048101929092526001600160a01b0316906302571be390602401602060405180830381865afa158015610605573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106299190610f47565b6001600160a01b0316336001600160a01b03161461067b576005546001546040516302571be360e01b8152600481018390523392849290916001600160a01b03909116906302571be3906024016103e1565b60006001600160a01b03166006836040516106969190610ffc565b908152604051908190036020019020546001600160a01b0316146106fa57336006836040516106c59190610ffc565b90815260405190819003602001812054632c064ce160e01b825261043f92916001600160a01b03909116908590600401611018565b6003805460010190556040513390600690610716908590610ffc565b90815260405190819003602001812080546001600160a01b0393841673ffffffffffffffffffffffffffffffffffffffff199091161790556002546384b47b0f60e01b8252909116906384b47b0f90610775908590339060040161104d565b600060405180830381600087803b15801561078f57600080fd5b505af11580156107a3573d6000803e3d6000fd5b50505050336001600160a01b03167f55da0857a5df23f43c9be98b1707bc6a2d42d5ec8ee76089999c188f8afcf861836040516105a29190611078565b6000806108148360408051808201825260008082526020918201528151808301909252825182529182019181019190915290565b60408051808201825260018152601760f91b60208083019182528351808501855260008082529082018190528451808601909552925184528301529192509061085d8383610abb565b6108689060016110a1565b67ffffffffffffffff81111561088057610880610e80565b6040519080825280602002602001820160405280156108b357816020015b606081526020019060019003908161089e5790505b50905060005b8151811015610904576108d46108cf8585610b5c565b610b7b565b8282815181106108e6576108e66110b9565b602002602001018190525080806108fc906110cf565b9150506108b9565b508051600103610953576004548580519060200120604051602001610933929190918252602082015260400190565b60408051601f198184030181529190528051602090910120600555610aaf565b60006001825161096391906110e8565b90505b8015610aad576001825161097a91906110e8565b81036109de57600454828281518110610995576109956110b9565b6020026020010151805190602001206040516020016109be929190918252602082015260400190565b60408051601f198184030181529190528051602090910120600555610a38565b6005548282815181106109f3576109f36110b9565b602002602001015180519060200120604051602001610a1c929190918252602082015260400190565b60408051601f1981840301815291905280516020909101206005555b80600103610a9b5760055482600081518110610a5657610a566110b9565b602002602001015180519060200120604051602001610a7f929190918252602082015260400190565b60408051601f1981840301815291905280516020909101206005555b80610aa5816110ff565b915050610966565b505b50506005549392505050565b6000808260000151610adf8560000151866020015186600001518760200151610be4565b610ae991906110a1565b90505b83516020850151610afd91906110a1565b8111610b555781610b0d816110cf565b9250508260000151610b44856020015183610b2891906110e8565b8651610b3491906110e8565b8386600001518760200151610be4565b610b4e91906110a1565b9050610aec565b5092915050565b6040805180820190915260008082526020820152610b55838383610d06565b60606000826000015167ffffffffffffffff811115610b9c57610b9c610e80565b6040519080825280601f01601f191660200182016040528015610bc6576020820181803683370190505b5090506000602082019050610b558185602001518660000151610db1565b60008381868511610cef5760208511610c9e5760008515610c30576001610c0c8760206110e8565b610c17906008611116565b610c2290600261121b565b610c2c91906110e8565b1990505b84518116600087610c418b8b6110a1565b610c4b91906110e8565b855190915083165b828114610c9057818610610c7857610c6b8b8b6110a1565b9650505050505050610cfe565b85610c82816110cf565b965050838651169050610c53565b859650505050505050610cfe565b508383206000905b610cb086896110e8565b8211610ced57858320808203610ccc5783945050505050610cfe565b610cd76001856110a1565b9350508180610ce5906110cf565b925050610ca6565b505b610cf987876110a1565b925050505b949350505050565b60408051808201909152600080825260208201526000610d388560000151866020015186600001518760200151610be4565b602080870180519186019190915251909150610d5490826110e8565b835284516020860151610d6791906110a1565b8103610d765760008552610da8565b83518351610d8491906110a1565b85518690610d939083906110e8565b9052508351610da290826110a1565b60208601525b50909392505050565b60208110610de95781518352610dc86020846110a1565b9250610dd56020836110a1565b9150610de26020826110e8565b9050610db1565b6000198115610e18576001610dff8360206110e8565b610e0b9061010061121b565b610e1591906110e8565b90505b9151835183169219169190911790915250565b6001600160a01b0381168114610e4057600080fd5b50565b600060208284031215610e5557600080fd5b8135610e6081610e2b565b9392505050565b600060208284031215610e7957600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600060208284031215610ea857600080fd5b813567ffffffffffffffff80821115610ec057600080fd5b818401915084601f830112610ed457600080fd5b813581811115610ee657610ee6610e80565b604051601f8201601f19908116603f01168101908382118183101715610f0e57610f0e610e80565b81604052828152876020848701011115610f2757600080fd5b826020860160208301376000928101602001929092525095945050505050565b600060208284031215610f5957600080fd5b8151610e6081610e2b565b60005b83811015610f7f578181015183820152602001610f67565b83811115610f8e576000848401525b50505050565b60008151808452610fac816020860160208601610f64565b601f01601f19169290920160200192915050565b60006001600160a01b03808716835260806020840152610fe36080840187610f94565b6040840195909552929092166060909101525092915050565b6000825161100e818460208701610f64565b9190910192915050565b60006001600160a01b038086168352808516602084015250606060408301526110446060830184610f94565b95945050505050565b6040815260006110606040830185610f94565b90506001600160a01b03831660208301529392505050565b602081526000610e606020830184610f94565b634e487b7160e01b600052601160045260246000fd5b600082198211156110b4576110b461108b565b500190565b634e487b7160e01b600052603260045260246000fd5b6000600182016110e1576110e161108b565b5060010190565b6000828210156110fa576110fa61108b565b500390565b60008161110e5761110e61108b565b506000190190565b60008160001904831182151516156111305761113061108b565b500290565b600181815b808511156111705781600019048211156111565761115661108b565b8085161561116357918102915b93841c939080029061113a565b509250929050565b60008261118757506001611215565b8161119457506000611215565b81600181146111aa57600281146111b4576111d0565b6001915050611215565b60ff8411156111c5576111c561108b565b50506001821b611215565b5060208310610133831016604e8410600b84101617156111f3575081810a611215565b6111fd8383611135565b80600019048211156112115761121161108b565b0290505b92915050565b6000610e60838361117856fea164736f6c634300080d000a";

type PhiRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PhiRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PhiRegistry__factory extends ContractFactory {
  constructor(...args: PhiRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    ens: string,
    map: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PhiRegistry> {
    return super.deploy(ens, map, overrides || {}) as Promise<PhiRegistry>;
  }
  override getDeployTransaction(
    ens: string,
    map: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(ens, map, overrides || {});
  }
  override attach(address: string): PhiRegistry {
    return super.attach(address) as PhiRegistry;
  }
  override connect(signer: Signer): PhiRegistry__factory {
    return super.connect(signer) as PhiRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PhiRegistryInterface {
    return new utils.Interface(_abi) as PhiRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PhiRegistry {
    return new Contract(address, _abi, signerOrProvider) as PhiRegistry;
  }
}
