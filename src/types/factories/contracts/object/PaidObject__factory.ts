/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  PaidObject,
  PaidObjectInterface,
} from "../../../contracts/object/PaidObject";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ExistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSetTokenSize",
    type: "error",
  },
  {
    inputs: [],
    name: "NonExistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allObjects",
    outputs: [
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct PaidObject.Size",
        name: "size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxClaimed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "forSale",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseMetadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "buyObject",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newPrice",
        type: "uint256",
      },
    ],
    name: "changeTokenPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct PaidObject.Size",
        name: "_size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxClaimed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "createObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseMetadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getCreator",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getMaxClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getSize",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct PaidObject.Size",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetAddress",
        type: "address",
      },
    ],
    name: "owner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
    ],
    name: "removeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
    ],
    name: "setCreator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newMaxClaimed",
        type: "uint256",
      },
    ],
    name: "setMaxClaimed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct PaidObject.Size",
        name: "_size",
        type: "tuple",
      },
    ],
    name: "setSize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "setTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "baseuri",
        type: "string",
      },
    ],
    name: "setbaseMetadataURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040805160208101909152600081526200002c81620000a7565b5033600090815260046020908152604091829020805460ff19166001179055815180830190925260188083527f68747470733a2f2f7777772e617277656176652e6e65742f0000000000000000929091019182526200008e91600591620000c0565b50600680546001600160a01b03191633179055620001a2565b8051620000bc906002906020840190620000c0565b5050565b828054620000ce9062000166565b90600052602060002090601f016020900481019282620000f257600085556200013d565b82601f106200010d57805160ff19168380011785556200013d565b828001600101855582156200013d579182015b828111156200013d57825182559160200191906001019062000120565b506200014b9291506200014f565b5090565b5b808211156200014b576000815560010162000150565b600181811c908216806200017b57607f821691505b6020821081036200019c57634e487b7160e01b600052602260045260246000fd5b50919050565b61278780620001b26000396000f3fe6080604052600436106101b65760003560e01c8063604c7f80116100ec578063b6ed6da91161008a578063d48e638a11610064578063d48e638a14610546578063e985e9c51461057e578063ea2fe3cb146105c7578063f242432a146105dc57600080fd5b8063b6ed6da9146104c7578063bd85b039146104e7578063cbdac7101461051457600080fd5b806380b5c1f4116100c657806380b5c1f41461044457806391686f53146104575780639733faa514610477578063a22cb465146104a757600080fd5b8063604c7f80146103cb57806362e8e8ac146103eb578063666e1b391461040b57600080fd5b8063173825d9116101595780633bb3a24d116101335780633bb3a24d1461033a5780634e1273f41461035a5780634f558e79146103875780635b2bd79e146103b657600080fd5b8063173825d9146102da5780632df918a1146102fa5780632eb2c2d61461031a57600080fd5b80630d09308e116101955780630d09308e1461024b5780630e89341c1461026d57806313af40351461029a578063162094c4146102ba57600080fd5b8062fdd58e146101bb57806301ffc9a7146101ee578063023c23db1461021e575b600080fd5b3480156101c757600080fd5b506101db6101d6366004611d00565b6105fc565b6040519081526020015b60405180910390f35b3480156101fa57600080fd5b5061020e610209366004611d42565b6106a8565b60405190151581526020016101e5565b34801561022a57600080fd5b5061023e610239366004611d66565b6106f8565b6040516101e59190611d7f565b34801561025757600080fd5b5061026b610266366004611dad565b610792565b005b34801561027957600080fd5b5061028d610288366004611d66565b6107d7565b6040516101e59190611e27565b3480156102a657600080fd5b5061026b6102b5366004611e3a565b61080b565b3480156102c657600080fd5b5061026b6102d5366004611f0e565b610888565b3480156102e657600080fd5b5061026b6102f5366004611e3a565b6108dc565b34801561030657600080fd5b5061026b610315366004611f6d565b610956565b34801561032657600080fd5b5061026b610335366004612080565b610a5a565b34801561034657600080fd5b5061028d610355366004611d66565b610afc565b34801561036657600080fd5b5061037a61037536600461212e565b610b9e565b6040516101e5919061222c565b34801561039357600080fd5b5061020e6103a2366004611d66565b600090815260036020526040902054151590565b3480156103c257600080fd5b5061028d610cdc565b3480156103d757600080fd5b5061026b6103e636600461223f565b610d6a565b3480156103f757600080fd5b5061026b610406366004611dad565b610dbd565b34801561041757600080fd5b5061020e610426366004611e3a565b6001600160a01b031660009081526004602052604090205460ff1690565b61026b610452366004611d66565b610e08565b34801561046357600080fd5b5061026b61047236600461226c565b610f09565b34801561048357600080fd5b506101db610492366004611d66565b60009081526007602052604090206003015490565b3480156104b357600080fd5b5061026b6104c236600461229c565b610f77565b3480156104d357600080fd5b5061026b6104e23660046122cf565b610f82565b3480156104f357600080fd5b506101db610502366004611d66565b60009081526003602052604090205490565b34801561052057600080fd5b5061053461052f366004611d66565b610fc5565b6040516101e59695949392919061230c565b34801561055257600080fd5b50610566610561366004611d66565b6110bc565b6040516001600160a01b0390911681526020016101e5565b34801561058a57600080fd5b5061020e61059936600461237e565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b3480156105d357600080fd5b5061028d611107565b3480156105e857600080fd5b5061026b6105f73660046123ac565b611199565b60006001600160a01b03831661067f5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b14806106d957506001600160e01b031982166303a24d0760e21b145b806106a257506301ffc9a760e01b6001600160e01b03198316146106a2565b604080516060810182526000808252602082018190529181019190915260008281526007602052604081206001015460ff1690036107495760405163a8e3a97360e01b815260040160405180910390fd5b50600090815260076020908152604091829020825160608101845260019091015460ff808216835261010082048116938301939093526201000090049091169181019190915290565b3360009081526004602052604090205460ff166107c2576040516349e27cff60e01b815260040160405180910390fd5b60009182526007602052604090912060030155565b606060056107e483610afc565b6040516020016107f5929190612465565b6040516020818303038152906040529050919050565b3360009081526004602052604090205460ff1661083b576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260046020526040808220805460ff191660011790555133917f619792ba07bec101df538ab277befa333e4cf1c0274f11de7be2a9507b9c9a0691a350565b3360009081526004602052604090205460ff166108b8576040516349e27cff60e01b815260040160405180910390fd5b600082815260076020908152604090912082516108d792840190611c4f565b505050565b3360009081526004602052604090205460ff1661090c576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260046020526040808220805460ff191690555133917fc191551a88c5609788f3532bd94c06479b61b0040eec65f9cd985428ffea643091a350565b3360009081526004602052604090205460ff16610986576040516349e27cff60e01b815260040160405180910390fd5b3361099057600080fd5b600086815260036020526040902054156109bd576040516387cf36d160e01b815260040160405180910390fd5b60008681526007602090815260409091206003810184905586516109e392880190611c4f565b5060008681526007602052604090208490600101610a01828261251e565b505060009586526007602052604090952060028101805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0394909416939093179092555060048101939093555050600501805460ff19169055565b6001600160a01b038516331480610a765750610a768533610599565b610ae85760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f76656400000000000000000000000000006064820152608401610676565b610af58585858585611234565b5050505050565b6000818152600760205260409020805460609190610b1990612415565b80601f0160208091040260200160405190810160405280929190818152602001828054610b4590612415565b8015610b925780601f10610b6757610100808354040283529160200191610b92565b820191906000526020600020905b815481529060010190602001808311610b7557829003601f168201915b50505050509050919050565b60608151835114610c175760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d6174636800000000000000000000000000000000000000000000006064820152608401610676565b6000835167ffffffffffffffff811115610c3357610c33611e57565b604051908082528060200260200182016040528015610c5c578160200160208202803683370190505b50905060005b8451811015610cd457610ca7858281518110610c8057610c8061257d565b6020026020010151858381518110610c9a57610c9a61257d565b60200260200101516105fc565b828281518110610cb957610cb961257d565b6020908102919091010152610ccd816125a9565b9050610c62565b509392505050565b60058054610ce990612415565b80601f0160208091040260200160405190810160405280929190818152602001828054610d1590612415565b8015610d625780601f10610d3757610100808354040283529160200191610d62565b820191906000526020600020905b815481529060010190602001808311610d4557829003601f168201915b505050505081565b3360009081526004602052604090205460ff16610d9a576040516349e27cff60e01b815260040160405180910390fd5b60008281526007602052604090208190600101610db7828261251e565b50505050565b33610dc757600080fd5b600082815260036020526040902054610df357604051634a1850bf60e11b815260040160405180910390fd5b60009182526007602052604090912060040155565b33610e1257600080fd5b600081815260036020526040902054610e3e57604051634a1850bf60e11b815260040160405180910390fd5b600081815260076020526040902060040154341015610e5c57600080fd5b60008181526007602052604090206005015460ff16610e7a57600080fd5b60008181526007602090815260408083206003908101549252909120541115610ea257600080fd5b6006546040516001600160a01b039091169081903480156108fc02916000818181858888f19350505050158015610edd573d6000803e3d6000fd5b50610f053383600160405180604001604052806002815260200161060f60f31b8152506114b5565b5050565b3360009081526004602052604090205460ff16610f39576040516349e27cff60e01b815260040160405180910390fd5b600091825260076020526040909120600201805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03909216919091179055565b610f053383836115c5565b3360009081526004602052604090205460ff16610fb2576040516349e27cff60e01b815260040160405180910390fd5b8051610f05906005906020840190611c4f565b600760205260009081526040902080548190610fe090612415565b80601f016020809104026020016040519081016040528092919081815260200182805461100c90612415565b80156110595780601f1061102e57610100808354040283529160200191611059565b820191906000526020600020905b81548152906001019060200180831161103c57829003601f168201915b505060408051606081018252600187015460ff808216835261010082048116602084015262010000909104811692820192909252600287015460038801546004890154600590990154979892976001600160a01b03909216965094509092501686565b6000818152600360205260408120546110e857604051634a1850bf60e11b815260040160405180910390fd5b506000908152600760205260409020600201546001600160a01b031690565b60606005805461111690612415565b80601f016020809104026020016040519081016040528092919081815260200182805461114290612415565b801561118f5780601f106111645761010080835404028352916020019161118f565b820191906000526020600020905b81548152906001019060200180831161117257829003601f168201915b5050505050905090565b6001600160a01b0385163314806111b557506111b58533610599565b6112275760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f76656400000000000000000000000000000000000000000000006064820152608401610676565b610af585858585856116b9565b81518351146112ab5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d617463680000000000000000000000000000000000000000000000006064820152608401610676565b6001600160a01b03841661130f5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610676565b3361131e818787878787611857565b60005b845181101561144757600085828151811061133e5761133e61257d565b60200260200101519050600085838151811061135c5761135c61257d565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156113ef5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610676565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b1682528120805484929061142c9084906125c2565b9250508190555050505080611440906125a9565b9050611321565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516114979291906125da565b60405180910390a46114ad818787878787611963565b505050505050565b6001600160a01b0384166115155760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610676565b336115358160008761152688611b08565b61152f88611b08565b87611857565b6000848152602081815260408083206001600160a01b0389168452909152812080548592906115659084906125c2565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610af581600087878787611b53565b816001600160a01b0316836001600160a01b03160361164c5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c6600000000000000000000000000000000000000000000006064820152608401610676565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b03841661171d5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610676565b3361172d81878761152688611b08565b6000848152602081815260408083206001600160a01b038a168452909152902054838110156117b15760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610676565b6000858152602081815260408083206001600160a01b038b81168552925280832087850390559088168252812080548692906117ee9084906125c2565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461184e828888888888611b53565b50505050505050565b6001600160a01b0385166118de5760005b83518110156118dc578281815181106118835761188361257d565b6020026020010151600360008684815181106118a1576118a161257d565b6020026020010151815260200190815260200160002060008282546118c691906125c2565b909155506118d59050816125a9565b9050611868565b505b6001600160a01b0384166114ad5760005b835181101561184e5782818151811061190a5761190a61257d565b6020026020010151600360008684815181106119285761192861257d565b60200260200101518152602001908152602001600020600082825461194d91906125ff565b9091555061195c9050816125a9565b90506118ef565b6001600160a01b0384163b156114ad5760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906119a79089908990889088908890600401612616565b6020604051808303816000875af19250505080156119e2575060408051601f3d908101601f191682019092526119df91810190612674565b60015b611a97576119ee612691565b806308c379a003611a275750611a026126ad565b80611a0d5750611a29565b8060405162461bcd60e51b81526004016106769190611e27565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e7465720000000000000000000000006064820152608401610676565b6001600160e01b0319811663bc197c8160e01b1461184e5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610676565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110611b4257611b4261257d565b602090810291909101015292915050565b6001600160a01b0384163b156114ad5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190611b979089908990889088908890600401612737565b6020604051808303816000875af1925050508015611bd2575060408051601f3d908101601f19168201909252611bcf91810190612674565b60015b611bde576119ee612691565b6001600160e01b0319811663f23a6e6160e01b1461184e5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610676565b828054611c5b90612415565b90600052602060002090601f016020900481019282611c7d5760008555611cc3565b82601f10611c9657805160ff1916838001178555611cc3565b82800160010185558215611cc3579182015b82811115611cc3578251825591602001919060010190611ca8565b50611ccf929150611cd3565b5090565b5b80821115611ccf5760008155600101611cd4565b6001600160a01b0381168114611cfd57600080fd5b50565b60008060408385031215611d1357600080fd5b8235611d1e81611ce8565b946020939093013593505050565b6001600160e01b031981168114611cfd57600080fd5b600060208284031215611d5457600080fd5b8135611d5f81611d2c565b9392505050565b600060208284031215611d7857600080fd5b5035919050565b606081016106a2828460ff815116825260ff602082015116602083015260ff60408201511660408301525050565b60008060408385031215611dc057600080fd5b50508035926020909101359150565b60005b83811015611dea578181015183820152602001611dd2565b83811115610db75750506000910152565b60008151808452611e13816020860160208601611dcf565b601f01601f19169290920160200192915050565b602081526000611d5f6020830184611dfb565b600060208284031215611e4c57600080fd5b8135611d5f81611ce8565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715611e9357611e93611e57565b6040525050565b600082601f830112611eab57600080fd5b813567ffffffffffffffff811115611ec557611ec5611e57565b604051611edc601f8301601f191660200182611e6d565b818152846020838601011115611ef157600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215611f2157600080fd5b82359150602083013567ffffffffffffffff811115611f3f57600080fd5b611f4b85828601611e9a565b9150509250929050565b600060608284031215611f6757600080fd5b50919050565b6000806000806000806101008789031215611f8757600080fd5b86359550602087013567ffffffffffffffff811115611fa557600080fd5b611fb189828a01611e9a565b955050611fc18860408901611f55565b935060a0870135611fd181611ce8565b9598949750929560c08101359460e0909101359350915050565b600067ffffffffffffffff82111561200557612005611e57565b5060051b60200190565b600082601f83011261202057600080fd5b8135602061202d82611feb565b60405161203a8282611e6d565b83815260059390931b850182019282810191508684111561205a57600080fd5b8286015b84811015612075578035835291830191830161205e565b509695505050505050565b600080600080600060a0868803121561209857600080fd5b85356120a381611ce8565b945060208601356120b381611ce8565b9350604086013567ffffffffffffffff808211156120d057600080fd5b6120dc89838a0161200f565b945060608801359150808211156120f257600080fd5b6120fe89838a0161200f565b9350608088013591508082111561211457600080fd5b5061212188828901611e9a565b9150509295509295909350565b6000806040838503121561214157600080fd5b823567ffffffffffffffff8082111561215957600080fd5b818501915085601f83011261216d57600080fd5b8135602061217a82611feb565b6040516121878282611e6d565b83815260059390931b85018201928281019150898411156121a757600080fd5b948201945b838610156121ce5785356121bf81611ce8565b825294820194908201906121ac565b965050860135925050808211156121e457600080fd5b50611f4b8582860161200f565b600081518084526020808501945080840160005b8381101561222157815187529582019590820190600101612205565b509495945050505050565b602081526000611d5f60208301846121f1565b6000806080838503121561225257600080fd5b823591506122638460208501611f55565b90509250929050565b6000806040838503121561227f57600080fd5b82359150602083013561229181611ce8565b809150509250929050565b600080604083850312156122af57600080fd5b82356122ba81611ce8565b91506020830135801515811461229157600080fd5b6000602082840312156122e157600080fd5b813567ffffffffffffffff8111156122f857600080fd5b61230484828501611e9a565b949350505050565b60006101008083526123208184018a611dfb565b915050612350602083018860ff815116825260ff602082015116602083015260ff60408201511660408301525050565b6001600160a01b03861660808301528460a08301528360c083015282151560e0830152979650505050505050565b6000806040838503121561239157600080fd5b823561239c81611ce8565b9150602083013561229181611ce8565b600080600080600060a086880312156123c457600080fd5b85356123cf81611ce8565b945060208601356123df81611ce8565b93506040860135925060608601359150608086013567ffffffffffffffff81111561240957600080fd5b61212188828901611e9a565b600181811c9082168061242957607f821691505b602082108103611f6757634e487b7160e01b600052602260045260246000fd5b6000815161245b818560208601611dcf565b9290920192915050565b600080845481600182811c91508083168061248157607f831692505b602080841082036124a057634e487b7160e01b86526022600452602486fd5b8180156124b457600181146124c5576124f2565b60ff198616895284890196506124f2565b60008b81526020902060005b868110156124ea5781548b8201529085019083016124d1565b505084890196505b5050505050506125028185612449565b95945050505050565b6000813560ff811681146106a257600080fd5b60ff6125298361250b565b1681548160ff19821617835561ff006125446020860161250b565b60081b16808361ffff1984161717845562ff00006125646040870161250b565b60101b168362ffffff1984161782171784555050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016125bb576125bb612593565b5060010190565b600082198211156125d5576125d5612593565b500190565b6040815260006125ed60408301856121f1565b828103602084015261250281856121f1565b60008282101561261157612611612593565b500390565b60006001600160a01b03808816835280871660208401525060a0604083015261264260a08301866121f1565b828103606084015261265481866121f1565b905082810360808401526126688185611dfb565b98975050505050505050565b60006020828403121561268657600080fd5b8151611d5f81611d2c565b600060033d11156126aa5760046000803e5060005160e01c5b90565b600060443d10156126bb5790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156126eb57505050505090565b82850191508151818111156127035750505050505090565b843d870101602082850101111561271d5750505050505090565b61272c60208286010187611e6d565b509095945050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261276f60a0830184611dfb565b97965050505050505056fea164736f6c634300080d000a";

type PaidObjectConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PaidObjectConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PaidObject__factory extends ContractFactory {
  constructor(...args: PaidObjectConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PaidObject> {
    return super.deploy(overrides || {}) as Promise<PaidObject>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PaidObject {
    return super.attach(address) as PaidObject;
  }
  override connect(signer: Signer): PaidObject__factory {
    return super.connect(signer) as PaidObject__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PaidObjectInterface {
    return new utils.Interface(_abi) as PaidObjectInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PaidObject {
    return new Contract(address, _abi, signerOrProvider) as PaidObject;
  }
}
