/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  PaidObject,
  PaidObjectInterface,
} from "../../../contracts/object/PaidObject";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_treasuryAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_royalityFee",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ExistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTokenID",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSetTokenSize",
    type: "error",
  },
  {
    inputs: [],
    name: "NonExistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Sale",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allObjects",
    outputs: [
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct PaidObject.Size",
        name: "size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxClaimed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "forSale",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseMetadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "buyObject",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newPrice",
        type: "uint256",
      },
    ],
    name: "changeTokenPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct PaidObject.Size",
        name: "_size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxClaimed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "createObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "created",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseMetadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getCreator",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getMaxClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getSize",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct PaidObject.Size",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct PaidObject.Size",
        name: "_size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxClaimed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "initObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetAddress",
        type: "address",
      },
    ],
    name: "owner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
    ],
    name: "removeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "royalityFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
    ],
    name: "setCreator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newMaxClaimed",
        type: "uint256",
      },
    ],
    name: "setMaxClaimed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_royalityFee",
        type: "uint256",
      },
    ],
    name: "setRoyalityFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct PaidObject.Size",
        name: "_size",
        type: "tuple",
      },
    ],
    name: "setSize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "setTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_treasuryAddress",
        type: "address",
      },
    ],
    name: "setTreasuryAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "baseuri",
        type: "string",
      },
    ],
    name: "setbaseMetadataURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002ee438038062002ee48339810160408190526200003491620001fc565b6040805160208101909152600081526200004e816200013d565b5033600090815260046020908152604091829020805460ff191660011790558151808301909252600b8083526a506169644f626a6563747360a81b929091019182526200009e9160059162000156565b5060408051808201909152600380825262504f5360e81b6020909201918252620000cb9160069162000156565b506040805180820190915260188082527f68747470733a2f2f7777772e617277656176652e6e65742f00000000000000006020909201918252620001129160079162000156565b50600980546001600160a01b0319166001600160a01b03939093169290921790915560085562000274565b80516200015290600290602084019062000156565b5050565b828054620001649062000238565b90600052602060002090601f016020900481019282620001885760008555620001d3565b82601f10620001a357805160ff1916838001178555620001d3565b82800160010185558215620001d3579182015b82811115620001d3578251825591602001919060010190620001b6565b50620001e1929150620001e5565b5090565b5b80821115620001e15760008155600101620001e6565b600080604083850312156200021057600080fd5b82516001600160a01b03811681146200022857600080fd5b6020939093015192949293505050565b600181811c908216806200024d57607f821691505b6020821081036200026e57634e487b7160e01b600052602260045260246000fd5b50919050565b612c6080620002846000396000f3fe6080604052600436106102335760003560e01c8063604c7f801161013857806398f24682116100b0578063cbdac7101161007f578063e985e9c511610064578063e985e9c5146106e4578063ea2fe3cb1461072d578063f242432a1461074257600080fd5b8063cbdac71014610661578063d48e638a1461069357600080fd5b806398f24682146105d4578063a22cb465146105f4578063b6ed6da914610614578063bd85b0391461063457600080fd5b806380b5c1f41161010757806391686f53116100ec57806391686f531461056f57806395d89b411461058f5780639733faa5146105a457600080fd5b806380b5c1f41461052c57806382cb6b721461053f57600080fd5b8063604c7f801461049357806362e8e8ac146104b35780636605bfda146104d3578063666e1b39146104f357600080fd5b8063162094c4116101cb578063326bb4ad1161019a5780634e1273f41161017f5780634e1273f4146104225780634f558e791461044f5780635b2bd79e1461047e57600080fd5b8063326bb4ad146103ec5780633bb3a24d1461040257600080fd5b8063162094c41461036c578063173825d91461038c5780632df918a1146103ac5780632eb2c2d6146103cc57600080fd5b80630c68a790116102075780630c68a790146102ea5780630d09308e1461030c5780630e89341c1461032c57806313af40351461034c57600080fd5b8062fdd58e1461023857806301ffc9a71461026b578063023c23db1461029b57806306fdde03146102c8575b600080fd5b34801561024457600080fd5b50610258610253366004612198565b610762565b6040519081526020015b60405180910390f35b34801561027757600080fd5b5061028b6102863660046121da565b61080e565b6040519015158152602001610262565b3480156102a757600080fd5b506102bb6102b63660046121fe565b61085e565b6040516102629190612217565b3480156102d457600080fd5b506102dd6108f8565b604051610262919061229d565b3480156102f657600080fd5b5061030a61030536600461237f565b610986565b005b34801561031857600080fd5b5061030a6103273660046123fd565b610a1c565b34801561033857600080fd5b506102dd6103473660046121fe565b610a61565b34801561035857600080fd5b5061030a61036736600461241f565b610a95565b34801561037857600080fd5b5061030a61038736600461243c565b610b12565b34801561039857600080fd5b5061030a6103a736600461241f565b610b66565b3480156103b857600080fd5b5061030a6103c736600461237f565b610be0565b3480156103d857600080fd5b5061030a6103e7366004612518565b610cb1565b3480156103f857600080fd5b5061025860085481565b34801561040e57600080fd5b506102dd61041d3660046121fe565b610d53565b34801561042e57600080fd5b5061044261043d3660046125c6565b610df5565b60405161026291906126c4565b34801561045b57600080fd5b5061028b61046a3660046121fe565b600090815260036020526040902054151590565b34801561048a57600080fd5b506102dd610f33565b34801561049f57600080fd5b5061030a6104ae3660046126d7565b610f40565b3480156104bf57600080fd5b5061030a6104ce3660046123fd565b610f93565b3480156104df57600080fd5b5061030a6104ee36600461241f565b610fe2565b3480156104ff57600080fd5b5061028b61050e36600461241f565b6001600160a01b031660009081526004602052604090205460ff1690565b61030a61053a3660046121fe565b611041565b34801561054b57600080fd5b5061028b61055a3660046121fe565b600b6020526000908152604090205460ff1681565b34801561057b57600080fd5b5061030a61058a366004612704565b6111d6565b34801561059b57600080fd5b506102dd611244565b3480156105b057600080fd5b506102586105bf3660046121fe565b6000908152600a602052604090206003015490565b3480156105e057600080fd5b5061030a6105ef3660046121fe565b611251565b34801561060057600080fd5b5061030a61060f366004612734565b611286565b34801561062057600080fd5b5061030a61062f366004612767565b611295565b34801561064057600080fd5b5061025861064f3660046121fe565b60009081526003602052604090205490565b34801561066d57600080fd5b5061068161067c3660046121fe565b6112d8565b604051610262969594939291906127a4565b34801561069f57600080fd5b506106cc6106ae3660046121fe565b6000908152600a60205260409020600201546001600160a01b031690565b6040516001600160a01b039091168152602001610262565b3480156106f057600080fd5b5061028b6106ff366004612816565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b34801561073957600080fd5b506102dd6113cf565b34801561074e57600080fd5b5061030a61075d366004612844565b611461565b60006001600160a01b0383166107e55760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b148061083f57506001600160e01b031982166303a24d0760e21b145b8061080857506301ffc9a760e01b6001600160e01b0319831614610808565b60408051606081018252600080825260208201819052918101919091526000828152600a602052604081206001015460ff1690036108af5760405163a8e3a97360e01b815260040160405180910390fd5b506000908152600a6020908152604091829020825160608101845260019091015460ff808216835261010082048116938301939093526201000090049091169181019190915290565b60058054610905906128ad565b80601f0160208091040260200160405190810160405280929190818152602001828054610931906128ad565b801561097e5780601f106109535761010080835404028352916020019161097e565b820191906000526020600020905b81548152906001019060200180831161096157829003601f168201915b505050505081565b3360009081526004602052604090205460ff166109b6576040516349e27cff60e01b815260040160405180910390fd5b6000868152600360205260409020546109e257604051634a1850bf60e11b815260040160405180910390fd5b6109ec8683610a1c565b6109f68686610b12565b610a008685610f40565b610a0a86846111d6565b610a148682610f93565b505050505050565b3360009081526004602052604090205460ff16610a4c576040516349e27cff60e01b815260040160405180910390fd5b6000918252600a602052604090912060030155565b60606007610a6e83610d53565b604051602001610a7f9291906128fd565b6040516020818303038152906040529050919050565b3360009081526004602052604090205460ff16610ac5576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260046020526040808220805460ff191660011790555133917f619792ba07bec101df538ab277befa333e4cf1c0274f11de7be2a9507b9c9a0691a350565b3360009081526004602052604090205460ff16610b42576040516349e27cff60e01b815260040160405180910390fd5b6000828152600a602090815260409091208251610b61928401906120ea565b505050565b3360009081526004602052604090205460ff16610b96576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260046020526040808220805460ff191690555133917fc191551a88c5609788f3532bd94c06479b61b0040eec65f9cd985428ffea643091a350565b3360009081526004602052604090205460ff16610c10576040516349e27cff60e01b815260040160405180910390fd5b33610c1a57600080fd5b60008681526003602052604090205415610c47576040516387cf36d160e01b815260040160405180910390fd5b610c518683610a1c565b610c5b8686610b12565b610c658685610f40565b610c6f86846111d6565b610c798682610f93565b50505060009283525050600a60209081526040808320600501805460ff19908116909155600b90925290912080549091166001179055565b6001600160a01b038516331480610ccd5750610ccd85336106ff565b610d3f5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f766564000000000000000000000000000060648201526084016107dc565b610d4c8585858585611479565b5050505050565b6000818152600a60205260409020805460609190610d70906128ad565b80601f0160208091040260200160405190810160405280929190818152602001828054610d9c906128ad565b8015610de95780601f10610dbe57610100808354040283529160200191610de9565b820191906000526020600020905b815481529060010190602001808311610dcc57829003601f168201915b50505050509050919050565b60608151835114610e6e5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d61746368000000000000000000000000000000000000000000000060648201526084016107dc565b6000835167ffffffffffffffff811115610e8a57610e8a6122b0565b604051908082528060200260200182016040528015610eb3578160200160208202803683370190505b50905060005b8451811015610f2b57610efe858281518110610ed757610ed76129a3565b6020026020010151858381518110610ef157610ef16129a3565b6020026020010151610762565b828281518110610f1057610f106129a3565b6020908102919091010152610f24816129cf565b9050610eb9565b509392505050565b60078054610905906128ad565b3360009081526004602052604090205460ff16610f70576040516349e27cff60e01b815260040160405180910390fd5b6000828152600a602052604090208190600101610f8d82826129fb565b50505050565b3360009081526004602052604090205460ff16610fc3576040516349e27cff60e01b815260040160405180910390fd5b33610fcd57600080fd5b6000918252600a602052604090912060040155565b3360009081526004602052604090205460ff16611012576040516349e27cff60e01b815260040160405180910390fd5b6009805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b3361104b57600080fd5b611054816116f2565b6000818152600a602052604090206004015434101561107257600080fd5b6000818152600a602052604090206005015460ff1661109057600080fd5b6000818152600a6020908152604080832060039081015492529091205411156110b857600080fd5b60006064600854346110ca9190612a5a565b6110d49190612a79565b6000838152600a602052604080822060020154905192935090916001600160a01b039091169083908381818185875af1925050503d8060008114611134576040519150601f19603f3d011682016040523d82523d6000602084013e611139565b606091505b505090508061114757600080fd5b6009546000906001600160a01b03166111608434612a9b565b604051600081818185875af1925050503d806000811461119c576040519150601f19603f3d011682016040523d82523d6000602084013e6111a1565b606091505b50509050806111af57600080fd5b610f8d3385600160405180604001604052806002815260200161060f60f31b81525061176a565b3360009081526004602052604090205460ff16611206576040516349e27cff60e01b815260040160405180910390fd5b6000918252600a6020526040909120600201805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03909216919091179055565b60068054610905906128ad565b3360009081526004602052604090205460ff16611281576040516349e27cff60e01b815260040160405180910390fd5b600855565b61129133838361187a565b5050565b3360009081526004602052604090205460ff166112c5576040516349e27cff60e01b815260040160405180910390fd5b80516112919060079060208401906120ea565b600a602052600090815260409020805481906112f3906128ad565b80601f016020809104026020016040519081016040528092919081815260200182805461131f906128ad565b801561136c5780601f106113415761010080835404028352916020019161136c565b820191906000526020600020905b81548152906001019060200180831161134f57829003601f168201915b505060408051606081018252600187015460ff808216835261010082048116602084015262010000909104811692820192909252600287015460038801546004890154600590990154979892976001600160a01b03909216965094509092501686565b6060600780546113de906128ad565b80601f016020809104026020016040519081016040528092919081815260200182805461140a906128ad565b80156114575780601f1061142c57610100808354040283529160200191611457565b820191906000526020600020905b81548152906001019060200180831161143a57829003601f168201915b5050505050905090565b61146c85858561196e565b610d4c8585858585611ab9565b81518351146114f05760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d6174636800000000000000000000000000000000000000000000000060648201526084016107dc565b6001600160a01b0384166115545760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b60648201526084016107dc565b33611563818787878787611b54565b60005b845181101561168c576000858281518110611583576115836129a3565b6020026020010151905060008583815181106115a1576115a16129a3565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156116345760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b60648201526084016107dc565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290611671908490612ab2565b9250508190555050505080611685906129cf565b9050611566565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516116dc929190612aca565b60405180910390a4610a14818787878787611c69565b80158061171a57506000818152600a6020908152604080832060039081015492529091205410155b1561173857604051636aa2a93760e01b815260040160405180910390fd5b6000818152600b602052604090205460ff1661176757604051636aa2a93760e01b815260040160405180910390fd5b50565b6001600160a01b0384166117ca5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084016107dc565b336117ea816000876117db88611e0e565b6117e488611e0e565b87611b54565b6000848152602081815260408083206001600160a01b03891684529091528120805485929061181a908490612ab2565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610d4c81600087878787611e59565b816001600160a01b0316836001600160a01b0316036119015760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c66000000000000000000000000000000000000000000000060648201526084016107dc565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b3415610b615760006064600854346119869190612a5a565b6119909190612a79565b6000838152600a602052604080822060020154905192935090916001600160a01b039091169083908381818185875af1925050503d80600081146119f0576040519150601f19603f3d011682016040523d82523d6000602084013e6119f5565b606091505b5050905080611a0357600080fd5b60006001600160a01b038616611a198434612a9b565b604051600081818185875af1925050503d8060008114611a55576040519150601f19603f3d011682016040523d82523d6000602084013e611a5a565b606091505b5050905080611a6857600080fd5b604080516001600160a01b03888116825287166020820152348183015290517f3f3483d0995db4c081e0101ef6753bef457833c20605cd871de61dcb48085a9a9181900360600190a1505050505050565b6001600160a01b038516331480611ad55750611ad585336106ff565b611b475760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f766564000000000000000000000000000000000000000000000060648201526084016107dc565b610d4c8585858585611f55565b6001600160a01b038516611bdb5760005b8351811015611bd957828181518110611b8057611b806129a3565b602002602001015160036000868481518110611b9e57611b9e6129a3565b602002602001015181526020019081526020016000206000828254611bc39190612ab2565b90915550611bd29050816129cf565b9050611b65565b505b6001600160a01b038416610a145760005b8351811015611c6057828181518110611c0757611c076129a3565b602002602001015160036000868481518110611c2557611c256129a3565b602002602001015181526020019081526020016000206000828254611c4a9190612a9b565b90915550611c599050816129cf565b9050611bec565b50505050505050565b6001600160a01b0384163b15610a145760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190611cad9089908990889088908890600401612aef565b6020604051808303816000875af1925050508015611ce8575060408051601f3d908101601f19168201909252611ce591810190612b4d565b60015b611d9d57611cf4612b6a565b806308c379a003611d2d5750611d08612b86565b80611d135750611d2f565b8060405162461bcd60e51b81526004016107dc919061229d565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e74657200000000000000000000000060648201526084016107dc565b6001600160e01b0319811663bc197c8160e01b14611c605760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b60648201526084016107dc565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110611e4857611e486129a3565b602090810291909101015292915050565b6001600160a01b0384163b15610a145760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190611e9d9089908990889088908890600401612c10565b6020604051808303816000875af1925050508015611ed8575060408051601f3d908101601f19168201909252611ed591810190612b4d565b60015b611ee457611cf4612b6a565b6001600160e01b0319811663f23a6e6160e01b14611c605760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b60648201526084016107dc565b6001600160a01b038416611fb95760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b60648201526084016107dc565b33611fc98187876117db88611e0e565b6000848152602081815260408083206001600160a01b038a1684529091529020548381101561204d5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b60648201526084016107dc565b6000858152602081815260408083206001600160a01b038b811685529252808320878503905590881682528120805486929061208a908490612ab2565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4611c60828888888888611e59565b8280546120f6906128ad565b90600052602060002090601f016020900481019282612118576000855561215e565b82601f1061213157805160ff191683800117855561215e565b8280016001018555821561215e579182015b8281111561215e578251825591602001919060010190612143565b5061216a92915061216e565b5090565b5b8082111561216a576000815560010161216f565b6001600160a01b038116811461176757600080fd5b600080604083850312156121ab57600080fd5b82356121b681612183565b946020939093013593505050565b6001600160e01b03198116811461176757600080fd5b6000602082840312156121ec57600080fd5b81356121f7816121c4565b9392505050565b60006020828403121561221057600080fd5b5035919050565b60608101610808828460ff815116825260ff602082015116602083015260ff60408201511660408301525050565b60005b83811015612260578181015183820152602001612248565b83811115610f8d5750506000910152565b60008151808452612289816020860160208601612245565b601f01601f19169290920160200192915050565b6020815260006121f76020830184612271565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff811182821017156122ec576122ec6122b0565b6040525050565b600082601f83011261230457600080fd5b813567ffffffffffffffff81111561231e5761231e6122b0565b604051612335601f8301601f1916602001826122c6565b81815284602083860101111561234a57600080fd5b816020850160208301376000918101602001919091529392505050565b60006060828403121561237957600080fd5b50919050565b600080600080600080610100878903121561239957600080fd5b86359550602087013567ffffffffffffffff8111156123b757600080fd5b6123c389828a016122f3565b9550506123d38860408901612367565b935060a08701356123e381612183565b9598949750929560c08101359460e0909101359350915050565b6000806040838503121561241057600080fd5b50508035926020909101359150565b60006020828403121561243157600080fd5b81356121f781612183565b6000806040838503121561244f57600080fd5b82359150602083013567ffffffffffffffff81111561246d57600080fd5b612479858286016122f3565b9150509250929050565b600067ffffffffffffffff82111561249d5761249d6122b0565b5060051b60200190565b600082601f8301126124b857600080fd5b813560206124c582612483565b6040516124d282826122c6565b83815260059390931b85018201928281019150868411156124f257600080fd5b8286015b8481101561250d57803583529183019183016124f6565b509695505050505050565b600080600080600060a0868803121561253057600080fd5b853561253b81612183565b9450602086013561254b81612183565b9350604086013567ffffffffffffffff8082111561256857600080fd5b61257489838a016124a7565b9450606088013591508082111561258a57600080fd5b61259689838a016124a7565b935060808801359150808211156125ac57600080fd5b506125b9888289016122f3565b9150509295509295909350565b600080604083850312156125d957600080fd5b823567ffffffffffffffff808211156125f157600080fd5b818501915085601f83011261260557600080fd5b8135602061261282612483565b60405161261f82826122c6565b83815260059390931b850182019282810191508984111561263f57600080fd5b948201945b8386101561266657853561265781612183565b82529482019490820190612644565b9650508601359250508082111561267c57600080fd5b50612479858286016124a7565b600081518084526020808501945080840160005b838110156126b95781518752958201959082019060010161269d565b509495945050505050565b6020815260006121f76020830184612689565b600080608083850312156126ea57600080fd5b823591506126fb8460208501612367565b90509250929050565b6000806040838503121561271757600080fd5b82359150602083013561272981612183565b809150509250929050565b6000806040838503121561274757600080fd5b823561275281612183565b91506020830135801515811461272957600080fd5b60006020828403121561277957600080fd5b813567ffffffffffffffff81111561279057600080fd5b61279c848285016122f3565b949350505050565b60006101008083526127b88184018a612271565b9150506127e8602083018860ff815116825260ff602082015116602083015260ff60408201511660408301525050565b6001600160a01b03861660808301528460a08301528360c083015282151560e0830152979650505050505050565b6000806040838503121561282957600080fd5b823561283481612183565b9150602083013561272981612183565b600080600080600060a0868803121561285c57600080fd5b853561286781612183565b9450602086013561287781612183565b93506040860135925060608601359150608086013567ffffffffffffffff8111156128a157600080fd5b6125b9888289016122f3565b600181811c908216806128c157607f821691505b60208210810361237957634e487b7160e01b600052602260045260246000fd5b600081516128f3818560208601612245565b9290920192915050565b600080845481600182811c91508083168061291957607f831692505b6020808410820361293857634e487b7160e01b86526022600452602486fd5b81801561294c576001811461295d5761298a565b60ff1986168952848901965061298a565b60008b81526020902060005b868110156129825781548b820152908501908301612969565b505084890196505b50505050505061299a81856128e1565b95945050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016129e1576129e16129b9565b5060010190565b6000813560ff8116811461080857600080fd5b60ff612a06836129e8565b1681548160ff19821617835561ff00612a21602086016129e8565b60081b16808361ffff1984161717845562ff0000612a41604087016129e8565b60101b168362ffffff1984161782171784555050505050565b6000816000190483118215151615612a7457612a746129b9565b500290565b600082612a9657634e487b7160e01b600052601260045260246000fd5b500490565b600082821015612aad57612aad6129b9565b500390565b60008219821115612ac557612ac56129b9565b500190565b604081526000612add6040830185612689565b828103602084015261299a8185612689565b60006001600160a01b03808816835280871660208401525060a06040830152612b1b60a0830186612689565b8281036060840152612b2d8186612689565b90508281036080840152612b418185612271565b98975050505050505050565b600060208284031215612b5f57600080fd5b81516121f7816121c4565b600060033d1115612b835760046000803e5060005160e01c5b90565b600060443d1015612b945790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715612bc457505050505090565b8285019150815181811115612bdc5750505050505090565b843d8701016020828501011115612bf65750505050505090565b612c05602082860101876122c6565b509095945050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a06080830152612c4860a0830184612271565b97965050505050505056fea164736f6c634300080d000a";

type PaidObjectConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PaidObjectConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PaidObject__factory extends ContractFactory {
  constructor(...args: PaidObjectConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _treasuryAddress: string,
    _royalityFee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PaidObject> {
    return super.deploy(
      _treasuryAddress,
      _royalityFee,
      overrides || {}
    ) as Promise<PaidObject>;
  }
  override getDeployTransaction(
    _treasuryAddress: string,
    _royalityFee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _treasuryAddress,
      _royalityFee,
      overrides || {}
    );
  }
  override attach(address: string): PaidObject {
    return super.attach(address) as PaidObject;
  }
  override connect(signer: Signer): PaidObject__factory {
    return super.connect(signer) as PaidObject__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PaidObjectInterface {
    return new utils.Interface(_abi) as PaidObjectInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PaidObject {
    return new Contract(address, _abi, signerOrProvider) as PaidObject;
  }
}
