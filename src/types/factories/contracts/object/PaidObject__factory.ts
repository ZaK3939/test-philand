/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  PaidObject,
  PaidObjectInterface,
} from "../../../contracts/object/PaidObject";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_treasuryAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_royalityFee",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ExistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTokenID",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSetTokenSize",
    type: "error",
  },
  {
    inputs: [],
    name: "NonExistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Sale",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allObjects",
    outputs: [
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxClaimed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "forSale",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseMetadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "buyObject",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newPrice",
        type: "uint256",
      },
    ],
    name: "changeTokenPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "_size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxClaimed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "createObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "created",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseMetadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getCreator",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getMaxClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getSize",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "_size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxClaimed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "initObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetAddress",
        type: "address",
      },
    ],
    name: "owner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
    ],
    name: "removeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "royalityFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
    ],
    name: "setCreator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newMaxClaimed",
        type: "uint256",
      },
    ],
    name: "setMaxClaimed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_royalityFee",
        type: "uint256",
      },
    ],
    name: "setRoyalityFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "_size",
        type: "tuple",
      },
    ],
    name: "setSize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "setTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_treasuryAddress",
        type: "address",
      },
    ],
    name: "setTreasuryAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "baseuri",
        type: "string",
      },
    ],
    name: "setbaseMetadataURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasuryAddress",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002f1f38038062002f1f8339810160408190526200003491620001fc565b6040805160208101909152600081526200004e816200013d565b5033600090815260046020908152604091829020805460ff191660011790558151808301909252600b8083526a506169644f626a6563747360a81b929091019182526200009e9160059162000156565b5060408051808201909152600380825262504f5360e81b6020909201918252620000cb9160069162000156565b506040805180820190915260188082527f68747470733a2f2f7777772e617277656176652e6e65742f00000000000000006020909201918252620001129160079162000156565b50600980546001600160a01b0319166001600160a01b03939093169290921790915560085562000274565b80516200015290600290602084019062000156565b5050565b828054620001649062000238565b90600052602060002090601f016020900481019282620001885760008555620001d3565b82601f10620001a357805160ff1916838001178555620001d3565b82800160010185558215620001d3579182015b82811115620001d3578251825591602001919060010190620001b6565b50620001e1929150620001e5565b5090565b5b80821115620001e15760008155600101620001e6565b600080604083850312156200021057600080fd5b82516001600160a01b03811681146200022857600080fd5b6020939093015192949293505050565b600181811c908216806200024d57607f821691505b6020821081036200026e57634e487b7160e01b600052602260045260246000fd5b50919050565b612c9b80620002846000396000f3fe60806040526004361061024e5760003560e01c806362e8e8ac11610138578063a22cb465116100b0578063cbdac7101161007f578063e985e9c511610064578063e985e9c51461071f578063ea2fe3cb14610768578063f242432a1461077d57600080fd5b8063cbdac710146106b4578063d48e638a146106e657600080fd5b8063a22cb4651461060f578063b6ed6da91461062f578063bd85b0391461064f578063c5f956af1461067c57600080fd5b806382cb6b721161010757806395d89b41116100ec57806395d89b41146105aa5780639733faa5146105bf57806398f24682146105ef57600080fd5b806382cb6b721461055a57806391686f531461058a57600080fd5b806362e8e8ac146104ce5780636605bfda146104ee578063666e1b391461050e57806380b5c1f41461054757600080fd5b8063173825d9116101cb5780633bb3a24d1161019a5780634f558e791161017f5780634f558e791461046a5780635b2bd79e14610499578063604c7f80146104ae57600080fd5b80633bb3a24d1461041d5780634e1273f41461043d57600080fd5b8063173825d9146103a75780632df918a1146103c75780632eb2c2d6146103e7578063326bb4ad1461040757600080fd5b80630c68a790116102225780630e89341c116102075780630e89341c1461034757806313af403514610367578063162094c41461038757600080fd5b80630c68a790146103055780630d09308e1461032757600080fd5b8062fdd58e1461025357806301ffc9a714610286578063023c23db146102b657806306fdde03146102e3575b600080fd5b34801561025f57600080fd5b5061027361026e3660046121d3565b61079d565b6040519081526020015b60405180910390f35b34801561029257600080fd5b506102a66102a1366004612215565b610849565b604051901515815260200161027d565b3480156102c257600080fd5b506102d66102d1366004612239565b610899565b60405161027d9190612252565b3480156102ef57600080fd5b506102f8610933565b60405161027d91906122d8565b34801561031157600080fd5b506103256103203660046123ba565b6109c1565b005b34801561033357600080fd5b50610325610342366004612438565b610a57565b34801561035357600080fd5b506102f8610362366004612239565b610a9c565b34801561037357600080fd5b5061032561038236600461245a565b610ad0565b34801561039357600080fd5b506103256103a2366004612477565b610b4d565b3480156103b357600080fd5b506103256103c236600461245a565b610ba1565b3480156103d357600080fd5b506103256103e23660046123ba565b610c1b565b3480156103f357600080fd5b50610325610402366004612553565b610cec565b34801561041357600080fd5b5061027360085481565b34801561042957600080fd5b506102f8610438366004612239565b610d8e565b34801561044957600080fd5b5061045d610458366004612601565b610e30565b60405161027d91906126ff565b34801561047657600080fd5b506102a6610485366004612239565b600090815260036020526040902054151590565b3480156104a557600080fd5b506102f8610f6e565b3480156104ba57600080fd5b506103256104c9366004612712565b610f7b565b3480156104da57600080fd5b506103256104e9366004612438565b610fce565b3480156104fa57600080fd5b5061032561050936600461245a565b61101d565b34801561051a57600080fd5b506102a661052936600461245a565b6001600160a01b031660009081526004602052604090205460ff1690565b610325610555366004612239565b61107c565b34801561056657600080fd5b506102a6610575366004612239565b600b6020526000908152604090205460ff1681565b34801561059657600080fd5b506103256105a536600461273f565b611211565b3480156105b657600080fd5b506102f861127f565b3480156105cb57600080fd5b506102736105da366004612239565b6000908152600a602052604090206003015490565b3480156105fb57600080fd5b5061032561060a366004612239565b61128c565b34801561061b57600080fd5b5061032561062a36600461276f565b6112c1565b34801561063b57600080fd5b5061032561064a3660046127a2565b6112d0565b34801561065b57600080fd5b5061027361066a366004612239565b60009081526003602052604090205490565b34801561068857600080fd5b5060095461069c906001600160a01b031681565b6040516001600160a01b03909116815260200161027d565b3480156106c057600080fd5b506106d46106cf366004612239565b611313565b60405161027d969594939291906127df565b3480156106f257600080fd5b5061069c610701366004612239565b6000908152600a60205260409020600201546001600160a01b031690565b34801561072b57600080fd5b506102a661073a366004612851565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b34801561077457600080fd5b506102f861140a565b34801561078957600080fd5b5061032561079836600461287f565b61149c565b60006001600160a01b0383166108205760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b148061087a57506001600160e01b031982166303a24d0760e21b145b8061084357506301ffc9a760e01b6001600160e01b0319831614610843565b60408051606081018252600080825260208201819052918101919091526000828152600a602052604081206001015460ff1690036108ea5760405163a8e3a97360e01b815260040160405180910390fd5b506000908152600a6020908152604091829020825160608101845260019091015460ff808216835261010082048116938301939093526201000090049091169181019190915290565b60058054610940906128e8565b80601f016020809104026020016040519081016040528092919081815260200182805461096c906128e8565b80156109b95780601f1061098e576101008083540402835291602001916109b9565b820191906000526020600020905b81548152906001019060200180831161099c57829003601f168201915b505050505081565b3360009081526004602052604090205460ff166109f1576040516349e27cff60e01b815260040160405180910390fd5b600086815260036020526040902054610a1d57604051634a1850bf60e11b815260040160405180910390fd5b610a278683610a57565b610a318686610b4d565b610a3b8685610f7b565b610a458684611211565b610a4f8682610fce565b505050505050565b3360009081526004602052604090205460ff16610a87576040516349e27cff60e01b815260040160405180910390fd5b6000918252600a602052604090912060030155565b60606007610aa983610d8e565b604051602001610aba929190612938565b6040516020818303038152906040529050919050565b3360009081526004602052604090205460ff16610b00576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260046020526040808220805460ff191660011790555133917f619792ba07bec101df538ab277befa333e4cf1c0274f11de7be2a9507b9c9a0691a350565b3360009081526004602052604090205460ff16610b7d576040516349e27cff60e01b815260040160405180910390fd5b6000828152600a602090815260409091208251610b9c92840190612125565b505050565b3360009081526004602052604090205460ff16610bd1576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260046020526040808220805460ff191690555133917fc191551a88c5609788f3532bd94c06479b61b0040eec65f9cd985428ffea643091a350565b3360009081526004602052604090205460ff16610c4b576040516349e27cff60e01b815260040160405180910390fd5b33610c5557600080fd5b60008681526003602052604090205415610c82576040516387cf36d160e01b815260040160405180910390fd5b610c8c8686610b4d565b610c968685610f7b565b610ca08684611211565b610caa8683610a57565b610cb48682610fce565b50505060009283525050600a60209081526040808320600501805460ff19908116909155600b90925290912080549091166001179055565b6001600160a01b038516331480610d085750610d08853361073a565b610d7a5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f76656400000000000000000000000000006064820152608401610817565b610d8785858585856114b4565b5050505050565b6000818152600a60205260409020805460609190610dab906128e8565b80601f0160208091040260200160405190810160405280929190818152602001828054610dd7906128e8565b8015610e245780601f10610df957610100808354040283529160200191610e24565b820191906000526020600020905b815481529060010190602001808311610e0757829003601f168201915b50505050509050919050565b60608151835114610ea95760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d6174636800000000000000000000000000000000000000000000006064820152608401610817565b6000835167ffffffffffffffff811115610ec557610ec56122eb565b604051908082528060200260200182016040528015610eee578160200160208202803683370190505b50905060005b8451811015610f6657610f39858281518110610f1257610f126129de565b6020026020010151858381518110610f2c57610f2c6129de565b602002602001015161079d565b828281518110610f4b57610f4b6129de565b6020908102919091010152610f5f81612a0a565b9050610ef4565b509392505050565b60078054610940906128e8565b3360009081526004602052604090205460ff16610fab576040516349e27cff60e01b815260040160405180910390fd5b6000828152600a602052604090208190600101610fc88282612a36565b50505050565b3360009081526004602052604090205460ff16610ffe576040516349e27cff60e01b815260040160405180910390fd5b3361100857600080fd5b6000918252600a602052604090912060040155565b3360009081526004602052604090205460ff1661104d576040516349e27cff60e01b815260040160405180910390fd5b6009805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b3361108657600080fd5b61108f8161172d565b6000818152600a60205260409020600401543410156110ad57600080fd5b6000818152600a602052604090206005015460ff166110cb57600080fd5b6000818152600a6020908152604080832060039081015492529091205411156110f357600080fd5b60006064600854346111059190612a95565b61110f9190612ab4565b6000838152600a602052604080822060020154905192935090916001600160a01b039091169083908381818185875af1925050503d806000811461116f576040519150601f19603f3d011682016040523d82523d6000602084013e611174565b606091505b505090508061118257600080fd5b6009546000906001600160a01b031661119b8434612ad6565b604051600081818185875af1925050503d80600081146111d7576040519150601f19603f3d011682016040523d82523d6000602084013e6111dc565b606091505b50509050806111ea57600080fd5b610fc83385600160405180604001604052806002815260200161060f60f31b8152506117a5565b3360009081526004602052604090205460ff16611241576040516349e27cff60e01b815260040160405180910390fd5b6000918252600a6020526040909120600201805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03909216919091179055565b60068054610940906128e8565b3360009081526004602052604090205460ff166112bc576040516349e27cff60e01b815260040160405180910390fd5b600855565b6112cc3383836118b5565b5050565b3360009081526004602052604090205460ff16611300576040516349e27cff60e01b815260040160405180910390fd5b80516112cc906007906020840190612125565b600a6020526000908152604090208054819061132e906128e8565b80601f016020809104026020016040519081016040528092919081815260200182805461135a906128e8565b80156113a75780601f1061137c576101008083540402835291602001916113a7565b820191906000526020600020905b81548152906001019060200180831161138a57829003601f168201915b505060408051606081018252600187015460ff808216835261010082048116602084015262010000909104811692820192909252600287015460038801546004890154600590990154979892976001600160a01b03909216965094509092501686565b606060078054611419906128e8565b80601f0160208091040260200160405190810160405280929190818152602001828054611445906128e8565b80156114925780601f1061146757610100808354040283529160200191611492565b820191906000526020600020905b81548152906001019060200180831161147557829003601f168201915b5050505050905090565b6114a78585856119a9565b610d878585858585611af4565b815183511461152b5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d617463680000000000000000000000000000000000000000000000006064820152608401610817565b6001600160a01b03841661158f5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610817565b3361159e818787878787611b8f565b60005b84518110156116c75760008582815181106115be576115be6129de565b6020026020010151905060008583815181106115dc576115dc6129de565b602090810291909101810151600084815280835260408082206001600160a01b038e16835290935291909120549091508181101561166f5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610817565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906116ac908490612aed565b92505081905550505050806116c090612a0a565b90506115a1565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051611717929190612b05565b60405180910390a4610a4f818787878787611ca4565b80158061175557506000818152600a6020908152604080832060039081015492529091205410155b1561177357604051636aa2a93760e01b815260040160405180910390fd5b6000818152600b602052604090205460ff166117a257604051636aa2a93760e01b815260040160405180910390fd5b50565b6001600160a01b0384166118055760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610817565b336118258160008761181688611e49565b61181f88611e49565b87611b8f565b6000848152602081815260408083206001600160a01b038916845290915281208054859290611855908490612aed565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610d8781600087878787611e94565b816001600160a01b0316836001600160a01b03160361193c5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c6600000000000000000000000000000000000000000000006064820152608401610817565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b3415610b9c5760006064600854346119c19190612a95565b6119cb9190612ab4565b6000838152600a602052604080822060020154905192935090916001600160a01b039091169083908381818185875af1925050503d8060008114611a2b576040519150601f19603f3d011682016040523d82523d6000602084013e611a30565b606091505b5050905080611a3e57600080fd5b60006001600160a01b038616611a548434612ad6565b604051600081818185875af1925050503d8060008114611a90576040519150601f19603f3d011682016040523d82523d6000602084013e611a95565b606091505b5050905080611aa357600080fd5b604080516001600160a01b03888116825287166020820152348183015290517f3f3483d0995db4c081e0101ef6753bef457833c20605cd871de61dcb48085a9a9181900360600190a1505050505050565b6001600160a01b038516331480611b105750611b10853361073a565b611b825760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f76656400000000000000000000000000000000000000000000006064820152608401610817565b610d878585858585611f90565b6001600160a01b038516611c165760005b8351811015611c1457828181518110611bbb57611bbb6129de565b602002602001015160036000868481518110611bd957611bd96129de565b602002602001015181526020019081526020016000206000828254611bfe9190612aed565b90915550611c0d905081612a0a565b9050611ba0565b505b6001600160a01b038416610a4f5760005b8351811015611c9b57828181518110611c4257611c426129de565b602002602001015160036000868481518110611c6057611c606129de565b602002602001015181526020019081526020016000206000828254611c859190612ad6565b90915550611c94905081612a0a565b9050611c27565b50505050505050565b6001600160a01b0384163b15610a4f5760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190611ce89089908990889088908890600401612b2a565b6020604051808303816000875af1925050508015611d23575060408051601f3d908101601f19168201909252611d2091810190612b88565b60015b611dd857611d2f612ba5565b806308c379a003611d685750611d43612bc1565b80611d4e5750611d6a565b8060405162461bcd60e51b815260040161081791906122d8565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e7465720000000000000000000000006064820152608401610817565b6001600160e01b0319811663bc197c8160e01b14611c9b5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610817565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110611e8357611e836129de565b602090810291909101015292915050565b6001600160a01b0384163b15610a4f5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190611ed89089908990889088908890600401612c4b565b6020604051808303816000875af1925050508015611f13575060408051601f3d908101601f19168201909252611f1091810190612b88565b60015b611f1f57611d2f612ba5565b6001600160e01b0319811663f23a6e6160e01b14611c9b5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610817565b6001600160a01b038416611ff45760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610817565b3361200481878761181688611e49565b6000848152602081815260408083206001600160a01b038a168452909152902054838110156120885760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610817565b6000858152602081815260408083206001600160a01b038b81168552925280832087850390559088168252812080548692906120c5908490612aed565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4611c9b828888888888611e94565b828054612131906128e8565b90600052602060002090601f0160209004810192826121535760008555612199565b82601f1061216c57805160ff1916838001178555612199565b82800160010185558215612199579182015b8281111561219957825182559160200191906001019061217e565b506121a59291506121a9565b5090565b5b808211156121a557600081556001016121aa565b6001600160a01b03811681146117a257600080fd5b600080604083850312156121e657600080fd5b82356121f1816121be565b946020939093013593505050565b6001600160e01b0319811681146117a257600080fd5b60006020828403121561222757600080fd5b8135612232816121ff565b9392505050565b60006020828403121561224b57600080fd5b5035919050565b60608101610843828460ff815116825260ff602082015116602083015260ff60408201511660408301525050565b60005b8381101561229b578181015183820152602001612283565b83811115610fc85750506000910152565b600081518084526122c4816020860160208601612280565b601f01601f19169290920160200192915050565b60208152600061223260208301846122ac565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715612327576123276122eb565b6040525050565b600082601f83011261233f57600080fd5b813567ffffffffffffffff811115612359576123596122eb565b604051612370601f8301601f191660200182612301565b81815284602083860101111561238557600080fd5b816020850160208301376000918101602001919091529392505050565b6000606082840312156123b457600080fd5b50919050565b60008060008060008061010087890312156123d457600080fd5b86359550602087013567ffffffffffffffff8111156123f257600080fd5b6123fe89828a0161232e565b95505061240e88604089016123a2565b935060a087013561241e816121be565b9598949750929560c08101359460e0909101359350915050565b6000806040838503121561244b57600080fd5b50508035926020909101359150565b60006020828403121561246c57600080fd5b8135612232816121be565b6000806040838503121561248a57600080fd5b82359150602083013567ffffffffffffffff8111156124a857600080fd5b6124b48582860161232e565b9150509250929050565b600067ffffffffffffffff8211156124d8576124d86122eb565b5060051b60200190565b600082601f8301126124f357600080fd5b81356020612500826124be565b60405161250d8282612301565b83815260059390931b850182019282810191508684111561252d57600080fd5b8286015b848110156125485780358352918301918301612531565b509695505050505050565b600080600080600060a0868803121561256b57600080fd5b8535612576816121be565b94506020860135612586816121be565b9350604086013567ffffffffffffffff808211156125a357600080fd5b6125af89838a016124e2565b945060608801359150808211156125c557600080fd5b6125d189838a016124e2565b935060808801359150808211156125e757600080fd5b506125f48882890161232e565b9150509295509295909350565b6000806040838503121561261457600080fd5b823567ffffffffffffffff8082111561262c57600080fd5b818501915085601f83011261264057600080fd5b8135602061264d826124be565b60405161265a8282612301565b83815260059390931b850182019282810191508984111561267a57600080fd5b948201945b838610156126a1578535612692816121be565b8252948201949082019061267f565b965050860135925050808211156126b757600080fd5b506124b4858286016124e2565b600081518084526020808501945080840160005b838110156126f4578151875295820195908201906001016126d8565b509495945050505050565b60208152600061223260208301846126c4565b6000806080838503121561272557600080fd5b8235915061273684602085016123a2565b90509250929050565b6000806040838503121561275257600080fd5b823591506020830135612764816121be565b809150509250929050565b6000806040838503121561278257600080fd5b823561278d816121be565b91506020830135801515811461276457600080fd5b6000602082840312156127b457600080fd5b813567ffffffffffffffff8111156127cb57600080fd5b6127d78482850161232e565b949350505050565b60006101008083526127f38184018a6122ac565b915050612823602083018860ff815116825260ff602082015116602083015260ff60408201511660408301525050565b6001600160a01b03861660808301528460a08301528360c083015282151560e0830152979650505050505050565b6000806040838503121561286457600080fd5b823561286f816121be565b91506020830135612764816121be565b600080600080600060a0868803121561289757600080fd5b85356128a2816121be565b945060208601356128b2816121be565b93506040860135925060608601359150608086013567ffffffffffffffff8111156128dc57600080fd5b6125f48882890161232e565b600181811c908216806128fc57607f821691505b6020821081036123b457634e487b7160e01b600052602260045260246000fd5b6000815161292e818560208601612280565b9290920192915050565b600080845481600182811c91508083168061295457607f831692505b6020808410820361297357634e487b7160e01b86526022600452602486fd5b8180156129875760018114612998576129c5565b60ff198616895284890196506129c5565b60008b81526020902060005b868110156129bd5781548b8201529085019083016129a4565b505084890196505b5050505050506129d5818561291c565b95945050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201612a1c57612a1c6129f4565b5060010190565b6000813560ff8116811461084357600080fd5b60ff612a4183612a23565b1681548160ff19821617835561ff00612a5c60208601612a23565b60081b16808361ffff1984161717845562ff0000612a7c60408701612a23565b60101b168362ffffff1984161782171784555050505050565b6000816000190483118215151615612aaf57612aaf6129f4565b500290565b600082612ad157634e487b7160e01b600052601260045260246000fd5b500490565b600082821015612ae857612ae86129f4565b500390565b60008219821115612b0057612b006129f4565b500190565b604081526000612b1860408301856126c4565b82810360208401526129d581856126c4565b60006001600160a01b03808816835280871660208401525060a06040830152612b5660a08301866126c4565b8281036060840152612b6881866126c4565b90508281036080840152612b7c81856122ac565b98975050505050505050565b600060208284031215612b9a57600080fd5b8151612232816121ff565b600060033d1115612bbe5760046000803e5060005160e01c5b90565b600060443d1015612bcf5790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715612bff57505050505090565b8285019150815181811115612c175750505050505090565b843d8701016020828501011115612c315750505050505090565b612c4060208286010187612301565b509095945050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a06080830152612c8360a08301846122ac565b97965050505050505056fea164736f6c634300080d000a";

type PaidObjectConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PaidObjectConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PaidObject__factory extends ContractFactory {
  constructor(...args: PaidObjectConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _treasuryAddress: string,
    _royalityFee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PaidObject> {
    return super.deploy(
      _treasuryAddress,
      _royalityFee,
      overrides || {}
    ) as Promise<PaidObject>;
  }
  override getDeployTransaction(
    _treasuryAddress: string,
    _royalityFee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _treasuryAddress,
      _royalityFee,
      overrides || {}
    );
  }
  override attach(address: string): PaidObject {
    return super.attach(address) as PaidObject;
  }
  override connect(signer: Signer): PaidObject__factory {
    return super.connect(signer) as PaidObject__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PaidObjectInterface {
    return new utils.Interface(_abi) as PaidObjectInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PaidObject {
    return new Contract(address, _abi, signerOrProvider) as PaidObject;
  }
}
