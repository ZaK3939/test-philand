/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  PhiObject,
  PhiObjectInterface,
} from "../../../contracts/object/PhiObject";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_treasuryAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ExistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTokenID",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSetTokenSize",
    type: "error",
  },
  {
    inputs: [],
    name: "NonExistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Sale",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allObjects",
    outputs: [
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxClaimed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "forSale",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseMetadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newPrice",
        type: "uint256",
      },
    ],
    name: "changeTokenPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "_size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxClaimed",
        type: "uint256",
      },
    ],
    name: "createObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "created",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseMetadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getCreator",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getMaxClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getPhiObject",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getSize",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "_size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxClaimed",
        type: "uint256",
      },
    ],
    name: "initObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mintBatchObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetAddress",
        type: "address",
      },
    ],
    name: "owner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
    ],
    name: "removeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "royalityFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
    ],
    name: "setCreator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newMaxClaimed",
        type: "uint256",
      },
    ],
    name: "setMaxClaimed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_royalityFee",
        type: "uint256",
      },
    ],
    name: "setRoyalityFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "_size",
        type: "tuple",
      },
    ],
    name: "setSize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "setTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_treasuryAddress",
        type: "address",
      },
    ],
    name: "setTreasuryAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "baseuri",
        type: "string",
      },
    ],
    name: "setbaseMetadataURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasuryAddress",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002f1c38038062002f1c8339810160408190526200003491620001ff565b6040805160208101909152600081526200004e8162000140565b5033600090815260046020908152604091829020805460ff1916600117905581518083019092526012808352714f6e636861696e205068694f626a6563747360701b92909101918252620000a59160059162000159565b50604080518082019091526003808252624f4f5360e81b6020909201918252620000d29160069162000159565b506040805180820190915260188082527f68747470733a2f2f7777772e617277656176652e6e65742f00000000000000006020909201918252620001199160079162000159565b50600980546001600160a01b0319166001600160a01b03929092169190911790556200026d565b80516200015590600290602084019062000159565b5050565b828054620001679062000231565b90600052602060002090601f0160209004810192826200018b5760008555620001d6565b82601f10620001a657805160ff1916838001178555620001d6565b82800160010185558215620001d6579182015b82811115620001d6578251825591602001919060010190620001b9565b50620001e4929150620001e8565b5090565b5b80821115620001e45760008155600101620001e9565b6000602082840312156200021257600080fd5b81516001600160a01b03811681146200022a57600080fd5b9392505050565b600181811c908216806200024657607f821691505b6020821081036200026757634e487b7160e01b600052602260045260246000fd5b50919050565b612c9f806200027d6000396000f3fe6080604052600436106102695760003560e01c80636605bfda116101535780639e8540fa116100cb578063cbdac7101161007f578063e985e9c511610064578063e985e9c51461075a578063ea2fe3cb146107a3578063f242432a146107b857600080fd5b8063cbdac710146106ef578063d48e638a1461072157600080fd5b8063b6ed6da9116100b0578063b6ed6da91461066a578063bd85b0391461068a578063c5f956af146106b757600080fd5b80639e8540fa1461062a578063a22cb4651461064a57600080fd5b806382cb6b721161012257806395d89b411161010757806395d89b41146105c55780639733faa5146105da57806398f246821461060a57600080fd5b806382cb6b721461057557806391686f53146105a557600080fd5b80636605bfda146104e95780636606878214610509578063666e1b391461051c578063697436d91461055557600080fd5b80631cd307d4116101e65780634e1273f4116101b55780635b2bd79e1161019a5780635b2bd79e14610494578063604c7f80146104a957806362e8e8ac146104c957600080fd5b80634e1273f4146104385780634f558e791461046557600080fd5b80631cd307d4146103c25780632eb2c2d6146103e2578063326bb4ad146104025780633bb3a24d1461041857600080fd5b80630d09308e1161023d57806313af40351161022257806313af403514610362578063162094c414610382578063173825d9146103a257600080fd5b80630d09308e146103205780630e89341c1461034257600080fd5b8062fdd58e1461026e57806301ffc9a7146102a1578063023c23db146102d157806306fdde03146102fe575b600080fd5b34801561027a57600080fd5b5061028e610289366004612188565b6107d8565b6040519081526020015b60405180910390f35b3480156102ad57600080fd5b506102c16102bc3660046121ca565b610884565b6040519015158152602001610298565b3480156102dd57600080fd5b506102f16102ec3660046121ee565b6108d4565b6040516102989190612207565b34801561030a57600080fd5b5061031361096e565b604051610298919061228d565b34801561032c57600080fd5b5061034061033b3660046122a0565b6109fc565b005b34801561034e57600080fd5b5061031361035d3660046121ee565b610a41565b34801561036e57600080fd5b5061034061037d3660046122c2565b610aa2565b34801561038e57600080fd5b5061034061039d366004612396565b610b1f565b3480156103ae57600080fd5b506103406103bd3660046122c2565b610b73565b3480156103ce57600080fd5b506103406103dd3660046123f5565b610bed565b3480156103ee57600080fd5b506103406103fd3660046124fd565b610cc1565b34801561040e57600080fd5b5061028e60085481565b34801561042457600080fd5b506103136104333660046121ee565b610d63565b34801561044457600080fd5b506104586104533660046125ab565b610e05565b60405161029891906126a9565b34801561047157600080fd5b506102c16104803660046121ee565b600090815260036020526040902054151590565b3480156104a057600080fd5b50610313610f43565b3480156104b557600080fd5b506103406104c43660046126bc565b610f50565b3480156104d557600080fd5b506103406104e43660046122a0565b610fa3565b3480156104f557600080fd5b506103406105043660046122c2565b610ff2565b610340610517366004612188565b611051565b34801561052857600080fd5b506102c16105373660046122c2565b6001600160a01b031660009081526004602052604090205460ff1690565b34801561056157600080fd5b506103406105703660046126e9565b61109a565b34801561058157600080fd5b506102c16105903660046121ee565b600b6020526000908152604090205460ff1681565b3480156105b157600080fd5b506103406105c0366004612784565b6110d6565b3480156105d157600080fd5b50610313611144565b3480156105e657600080fd5b5061028e6105f53660046121ee565b6000908152600a602052604090206003015490565b34801561061657600080fd5b506103406106253660046121ee565b611151565b34801561063657600080fd5b506103406106453660046123f5565b611186565b34801561065657600080fd5b506103406106653660046127b4565b611215565b34801561067657600080fd5b506103406106853660046127e7565b611220565b34801561069657600080fd5b5061028e6106a53660046121ee565b60009081526003602052604090205490565b3480156106c357600080fd5b506009546106d7906001600160a01b031681565b6040516001600160a01b039091168152602001610298565b3480156106fb57600080fd5b5061070f61070a3660046121ee565b611263565b60405161029896959493929190612824565b34801561072d57600080fd5b506106d761073c3660046121ee565b6000908152600a60205260409020600201546001600160a01b031690565b34801561076657600080fd5b506102c1610775366004612896565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b3480156107af57600080fd5b5061031361135a565b3480156107c457600080fd5b506103406107d33660046128c4565b6113ec565b60006001600160a01b03831661085b5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b14806108b557506001600160e01b031982166303a24d0760e21b145b8061087e57506301ffc9a760e01b6001600160e01b031983161461087e565b60408051606081018252600080825260208201819052918101919091526000828152600a602052604081206001015460ff1690036109255760405163a8e3a97360e01b815260040160405180910390fd5b506000908152600a6020908152604091829020825160608101845260019091015460ff808216835261010082048116938301939093526201000090049091169181019190915290565b6005805461097b9061292d565b80601f01602080910402602001604051908101604052809291908181526020018280546109a79061292d565b80156109f45780601f106109c9576101008083540402835291602001916109f4565b820191906000526020600020905b8154815290600101906020018083116109d757829003601f168201915b505050505081565b3360009081526004602052604090205460ff16610a2c576040516349e27cff60e01b815260040160405180910390fd5b6000918252600a602052604090912060030155565b600081815260036020526040902054606090610a7057604051634a1850bf60e11b815260040160405180910390fd5b6007610a7b83610d63565b604051602001610a8c92919061297d565b6040516020818303038152906040529050919050565b3360009081526004602052604090205460ff16610ad2576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260046020526040808220805460ff191660011790555133917f619792ba07bec101df538ab277befa333e4cf1c0274f11de7be2a9507b9c9a0691a350565b3360009081526004602052604090205460ff16610b4f576040516349e27cff60e01b815260040160405180910390fd5b6000828152600a602090815260409091208251610b6e928401906120da565b505050565b3360009081526004602052604090205460ff16610ba3576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260046020526040808220805460ff191690555133917fc191551a88c5609788f3532bd94c06479b61b0040eec65f9cd985428ffea643091a350565b3360009081526004602052604090205460ff16610c1d576040516349e27cff60e01b815260040160405180910390fd5b33610c2757600080fd5b60008581526003602052604090205415610c54576040516387cf36d160e01b815260040160405180910390fd5b610c5e8585610b1f565b610c688584610f50565b610c7285836110d6565b610c7c85826109fc565b610c87856000610fa3565b505050600091825250600a602090815260408083206005018054600160ff199182168117909255600b909352922080549091169091179055565b6001600160a01b038516331480610cdd5750610cdd8533610775565b610d4f5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f76656400000000000000000000000000006064820152608401610852565b610d5c8585858585611487565b5050505050565b6000818152600a60205260409020805460609190610d809061292d565b80601f0160208091040260200160405190810160405280929190818152602001828054610dac9061292d565b8015610df95780601f10610dce57610100808354040283529160200191610df9565b820191906000526020600020905b815481529060010190602001808311610ddc57829003601f168201915b50505050509050919050565b60608151835114610e7e5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d6174636800000000000000000000000000000000000000000000006064820152608401610852565b6000835167ffffffffffffffff811115610e9a57610e9a6122df565b604051908082528060200260200182016040528015610ec3578160200160208202803683370190505b50905060005b8451811015610f3b57610f0e858281518110610ee757610ee7612a23565b6020026020010151858381518110610f0157610f01612a23565b60200260200101516107d8565b828281518110610f2057610f20612a23565b6020908102919091010152610f3481612a4f565b9050610ec9565b509392505050565b6007805461097b9061292d565b3360009081526004602052604090205460ff16610f80576040516349e27cff60e01b815260040160405180910390fd5b6000828152600a602052604090208190600101610f9d8282612a7b565b50505050565b3360009081526004602052604090205460ff16610fd3576040516349e27cff60e01b815260040160405180910390fd5b33610fdd57600080fd5b6000918252600a602052604090912060040155565b3360009081526004602052604090205460ff16611022576040516349e27cff60e01b815260040160405180910390fd5b6009805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6001600160a01b03821661106457600080fd5b61106d816116f3565b61109682826001604051806040016040528060048152602001630307830360e41b81525061176b565b5050565b3360009081526004602052604090205460ff166110ca576040516349e27cff60e01b815260040160405180910390fd5b610f9d8484848461187b565b3360009081526004602052604090205460ff16611106576040516349e27cff60e01b815260040160405180910390fd5b6000918252600a6020526040909120600201805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03909216919091179055565b6006805461097b9061292d565b3360009081526004602052604090205460ff16611181576040516349e27cff60e01b815260040160405180910390fd5b600855565b3360009081526004602052604090205460ff166111b6576040516349e27cff60e01b815260040160405180910390fd5b6000858152600360205260409020546111e257604051634a1850bf60e11b815260040160405180910390fd5b6111ec85826109fc565b6111f68585610b1f565b6112008584610f50565b61120a85836110d6565b610d5c856000610fa3565b611096338383611a50565b3360009081526004602052604090205460ff16611250576040516349e27cff60e01b815260040160405180910390fd5b80516110969060079060208401906120da565b600a6020526000908152604090208054819061127e9061292d565b80601f01602080910402602001604051908101604052809291908181526020018280546112aa9061292d565b80156112f75780601f106112cc576101008083540402835291602001916112f7565b820191906000526020600020905b8154815290600101906020018083116112da57829003601f168201915b505060408051606081018252600187015460ff808216835261010082048116602084015262010000909104811692820192909252600287015460038801546004890154600590990154979892976001600160a01b03909216965094509092501686565b6060600780546113699061292d565b80601f01602080910402602001604051908101604052809291908181526020018280546113959061292d565b80156113e25780601f106113b7576101008083540402835291602001916113e2565b820191906000526020600020905b8154815290600101906020018083116113c557829003601f168201915b5050505050905090565b6001600160a01b03851633148061140857506114088533610775565b61147a5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f76656400000000000000000000000000000000000000000000006064820152608401610852565b610d5c8585858585611b44565b81518351146114e95760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610852565b6001600160a01b03841661154d5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610852565b3361155c818787878787611ce2565b60005b845181101561168557600085828151811061157c5761157c612a23565b60200260200101519050600085838151811061159a5761159a612a23565b602090810291909101810151600084815280835260408082206001600160a01b038e16835290935291909120549091508181101561162d5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610852565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b1682528120805484929061166a908490612ada565b925050819055505050508061167e90612a4f565b905061155f565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516116d5929190612af2565b60405180910390a46116eb818787878787611dee565b505050505050565b80158061171b57506000818152600a6020908152604080832060039081015492529091205410155b1561173957604051636aa2a93760e01b815260040160405180910390fd5b6000818152600b602052604090205460ff1661176857604051636aa2a93760e01b815260040160405180910390fd5b50565b6001600160a01b0384166117cb5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610852565b336117eb816000876117dc88611f93565b6117e588611f93565b87611ce2565b6000848152602081815260408083206001600160a01b03891684529091528120805485929061181b908490612ada565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610d5c81600087878787611fde565b6001600160a01b0384166118db5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610852565b815183511461193d5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610852565b3361194d81600087878787611ce2565b60005b84518110156119e85783818151811061196b5761196b612a23565b602002602001015160008087848151811061198857611988612a23565b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b0316815260200190815260200160002060008282546119d09190612ada565b909155508190506119e081612a4f565b915050611950565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051611a39929190612af2565b60405180910390a4610d5c81600087878787611dee565b816001600160a01b0316836001600160a01b031603611ad75760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c6600000000000000000000000000000000000000000000006064820152608401610852565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416611ba85760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610852565b33611bb88187876117dc88611f93565b6000848152602081815260408083206001600160a01b038a16845290915290205483811015611c3c5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610852565b6000858152602081815260408083206001600160a01b038b8116855292528083208785039055908816825281208054869290611c79908490612ada565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4611cd9828888888888611fde565b50505050505050565b6001600160a01b038516611d695760005b8351811015611d6757828181518110611d0e57611d0e612a23565b602002602001015160036000868481518110611d2c57611d2c612a23565b602002602001015181526020019081526020016000206000828254611d519190612ada565b90915550611d60905081612a4f565b9050611cf3565b505b6001600160a01b0384166116eb5760005b8351811015611cd957828181518110611d9557611d95612a23565b602002602001015160036000868481518110611db357611db3612a23565b602002602001015181526020019081526020016000206000828254611dd89190612b17565b90915550611de7905081612a4f565b9050611d7a565b6001600160a01b0384163b156116eb5760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190611e329089908990889088908890600401612b2e565b6020604051808303816000875af1925050508015611e6d575060408051601f3d908101601f19168201909252611e6a91810190612b8c565b60015b611f2257611e79612ba9565b806308c379a003611eb25750611e8d612bc5565b80611e985750611eb4565b8060405162461bcd60e51b8152600401610852919061228d565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e7465720000000000000000000000006064820152608401610852565b6001600160e01b0319811663bc197c8160e01b14611cd95760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610852565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110611fcd57611fcd612a23565b602090810291909101015292915050565b6001600160a01b0384163b156116eb5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906120229089908990889088908890600401612c4f565b6020604051808303816000875af192505050801561205d575060408051601f3d908101601f1916820190925261205a91810190612b8c565b60015b61206957611e79612ba9565b6001600160e01b0319811663f23a6e6160e01b14611cd95760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610852565b8280546120e69061292d565b90600052602060002090601f016020900481019282612108576000855561214e565b82601f1061212157805160ff191683800117855561214e565b8280016001018555821561214e579182015b8281111561214e578251825591602001919060010190612133565b5061215a92915061215e565b5090565b5b8082111561215a576000815560010161215f565b6001600160a01b038116811461176857600080fd5b6000806040838503121561219b57600080fd5b82356121a681612173565b946020939093013593505050565b6001600160e01b03198116811461176857600080fd5b6000602082840312156121dc57600080fd5b81356121e7816121b4565b9392505050565b60006020828403121561220057600080fd5b5035919050565b6060810161087e828460ff815116825260ff602082015116602083015260ff60408201511660408301525050565b60005b83811015612250578181015183820152602001612238565b83811115610f9d5750506000910152565b60008151808452612279816020860160208601612235565b601f01601f19169290920160200192915050565b6020815260006121e76020830184612261565b600080604083850312156122b357600080fd5b50508035926020909101359150565b6000602082840312156122d457600080fd5b81356121e781612173565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff8111828210171561231b5761231b6122df565b6040525050565b600082601f83011261233357600080fd5b813567ffffffffffffffff81111561234d5761234d6122df565b604051612364601f8301601f1916602001826122f5565b81815284602083860101111561237957600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156123a957600080fd5b82359150602083013567ffffffffffffffff8111156123c757600080fd5b6123d385828601612322565b9150509250929050565b6000606082840312156123ef57600080fd5b50919050565b600080600080600060e0868803121561240d57600080fd5b85359450602086013567ffffffffffffffff81111561242b57600080fd5b61243788828901612322565b94505061244787604088016123dd565b925060a086013561245781612173565b9497939650919460c0013592915050565b600067ffffffffffffffff821115612482576124826122df565b5060051b60200190565b600082601f83011261249d57600080fd5b813560206124aa82612468565b6040516124b782826122f5565b83815260059390931b85018201928281019150868411156124d757600080fd5b8286015b848110156124f257803583529183019183016124db565b509695505050505050565b600080600080600060a0868803121561251557600080fd5b853561252081612173565b9450602086013561253081612173565b9350604086013567ffffffffffffffff8082111561254d57600080fd5b61255989838a0161248c565b9450606088013591508082111561256f57600080fd5b61257b89838a0161248c565b9350608088013591508082111561259157600080fd5b5061259e88828901612322565b9150509295509295909350565b600080604083850312156125be57600080fd5b823567ffffffffffffffff808211156125d657600080fd5b818501915085601f8301126125ea57600080fd5b813560206125f782612468565b60405161260482826122f5565b83815260059390931b850182019282810191508984111561262457600080fd5b948201945b8386101561264b57853561263c81612173565b82529482019490820190612629565b9650508601359250508082111561266157600080fd5b506123d38582860161248c565b600081518084526020808501945080840160005b8381101561269e57815187529582019590820190600101612682565b509495945050505050565b6020815260006121e7602083018461266e565b600080608083850312156126cf57600080fd5b823591506126e084602085016123dd565b90509250929050565b600080600080608085870312156126ff57600080fd5b843561270a81612173565b9350602085013567ffffffffffffffff8082111561272757600080fd5b6127338883890161248c565b9450604087013591508082111561274957600080fd5b6127558883890161248c565b9350606087013591508082111561276b57600080fd5b5061277887828801612322565b91505092959194509250565b6000806040838503121561279757600080fd5b8235915060208301356127a981612173565b809150509250929050565b600080604083850312156127c757600080fd5b82356127d281612173565b9150602083013580151581146127a957600080fd5b6000602082840312156127f957600080fd5b813567ffffffffffffffff81111561281057600080fd5b61281c84828501612322565b949350505050565b60006101008083526128388184018a612261565b915050612868602083018860ff815116825260ff602082015116602083015260ff60408201511660408301525050565b6001600160a01b03861660808301528460a08301528360c083015282151560e0830152979650505050505050565b600080604083850312156128a957600080fd5b82356128b481612173565b915060208301356127a981612173565b600080600080600060a086880312156128dc57600080fd5b85356128e781612173565b945060208601356128f781612173565b93506040860135925060608601359150608086013567ffffffffffffffff81111561292157600080fd5b61259e88828901612322565b600181811c9082168061294157607f821691505b6020821081036123ef57634e487b7160e01b600052602260045260246000fd5b60008151612973818560208601612235565b9290920192915050565b600080845481600182811c91508083168061299957607f831692505b602080841082036129b857634e487b7160e01b86526022600452602486fd5b8180156129cc57600181146129dd57612a0a565b60ff19861689528489019650612a0a565b60008b81526020902060005b86811015612a025781548b8201529085019083016129e9565b505084890196505b505050505050612a1a8185612961565b95945050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201612a6157612a61612a39565b5060010190565b6000813560ff8116811461087e57600080fd5b60ff612a8683612a68565b1681548160ff19821617835561ff00612aa160208601612a68565b60081b16808361ffff1984161717845562ff0000612ac160408701612a68565b60101b168362ffffff1984161782171784555050505050565b60008219821115612aed57612aed612a39565b500190565b604081526000612b05604083018561266e565b8281036020840152612a1a818561266e565b600082821015612b2957612b29612a39565b500390565b60006001600160a01b03808816835280871660208401525060a06040830152612b5a60a083018661266e565b8281036060840152612b6c818661266e565b90508281036080840152612b808185612261565b98975050505050505050565b600060208284031215612b9e57600080fd5b81516121e7816121b4565b600060033d1115612bc25760046000803e5060005160e01c5b90565b600060443d1015612bd35790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715612c0357505050505090565b8285019150815181811115612c1b5750505050505090565b843d8701016020828501011115612c355750505050505090565b612c44602082860101876122f5565b509095945050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a06080830152612c8760a0830184612261565b97965050505050505056fea164736f6c634300080d000a";

type PhiObjectConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PhiObjectConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PhiObject__factory extends ContractFactory {
  constructor(...args: PhiObjectConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _treasuryAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PhiObject> {
    return super.deploy(
      _treasuryAddress,
      overrides || {}
    ) as Promise<PhiObject>;
  }
  override getDeployTransaction(
    _treasuryAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_treasuryAddress, overrides || {});
  }
  override attach(address: string): PhiObject {
    return super.attach(address) as PhiObject;
  }
  override connect(signer: Signer): PhiObject__factory {
    return super.connect(signer) as PhiObject__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PhiObjectInterface {
    return new utils.Interface(_abi) as PhiObjectInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PhiObject {
    return new Contract(address, _abi, signerOrProvider) as PhiObject;
  }
}
