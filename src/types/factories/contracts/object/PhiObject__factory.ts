/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  PhiObject,
  PhiObjectInterface,
} from "../../../contracts/object/PhiObject";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_treasuryAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_royalityFee",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ExistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTokenID",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSetTokenSize",
    type: "error",
  },
  {
    inputs: [],
    name: "NonExistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Sale",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allObjects",
    outputs: [
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxClaimed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "forSale",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseMetadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newPrice",
        type: "uint256",
      },
    ],
    name: "changeTokenPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "_size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxClaimed",
        type: "uint256",
      },
    ],
    name: "createObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "created",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseMetadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getCreator",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getMaxClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getPhiObject",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getSize",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "_size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxClaimed",
        type: "uint256",
      },
    ],
    name: "initObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mintBatchObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetAddress",
        type: "address",
      },
    ],
    name: "owner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
    ],
    name: "removeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "royalityFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
    ],
    name: "setCreator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newMaxClaimed",
        type: "uint256",
      },
    ],
    name: "setMaxClaimed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_royalityFee",
        type: "uint256",
      },
    ],
    name: "setRoyalityFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "_size",
        type: "tuple",
      },
    ],
    name: "setSize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "setTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_treasuryAddress",
        type: "address",
      },
    ],
    name: "setTreasuryAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "baseuri",
        type: "string",
      },
    ],
    name: "setbaseMetadataURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasuryAddress",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200317938038062003179833981016040819052620000349162000203565b6040805160208101909152600081526200004e8162000144565b5033600090815260046020908152604091829020805460ff1916600117905581518083019092526012808352714f6e636861696e205068694f626a6563747360701b92909101918252620000a5916005916200015d565b50604080518082019091526003808252624f4f5360e81b6020909201918252620000d2916006916200015d565b506040805180820190915260188082527f68747470733a2f2f7777772e617277656176652e6e65742f0000000000000000602090920191825262000119916007916200015d565b50600980546001600160a01b0319166001600160a01b0393909316929092179091556008556200027b565b8051620001599060029060208401906200015d565b5050565b8280546200016b906200023f565b90600052602060002090601f0160209004810192826200018f5760008555620001da565b82601f10620001aa57805160ff1916838001178555620001da565b82800160010185558215620001da579182015b82811115620001da578251825591602001919060010190620001bd565b50620001e8929150620001ec565b5090565b5b80821115620001e85760008155600101620001ed565b600080604083850312156200021757600080fd5b82516001600160a01b03811681146200022f57600080fd5b6020939093015192949293505050565b600181811c908216806200025457607f821691505b6020821081036200027557634e487b7160e01b600052602260045260246000fd5b50919050565b612eee806200028b6000396000f3fe6080604052600436106102845760003560e01c80636605bfda116101535780639e8540fa116100cb578063cbdac7101161007f578063e985e9c511610064578063e985e9c5146107b4578063ea2fe3cb146107fd578063f242432a1461081257600080fd5b8063cbdac71014610749578063d48e638a1461077b57600080fd5b8063b6ed6da9116100b0578063b6ed6da9146106c4578063bd85b039146106e4578063c5f956af1461071157600080fd5b80639e8540fa14610684578063a22cb465146106a457600080fd5b806382cb6b721161012257806395d89b411161010757806395d89b411461061f5780639733faa51461063457806398f246821461066457600080fd5b806382cb6b72146105cf57806391686f53146105ff57600080fd5b80636605bfda146105435780636606878214610563578063666e1b3914610576578063697436d9146105af57600080fd5b80631cd307d4116102015780634e1273f4116101b55780635b2bd79e1161019a5780635b2bd79e146104ee578063604c7f801461050357806362e8e8ac1461052357600080fd5b80634e1273f4146104925780634f558e79146104bf57600080fd5b80632eb2c2d6116101e65780632eb2c2d61461043c578063326bb4ad1461045c5780633bb3a24d1461047257600080fd5b80631cd307d4146103dd5780632a55205a146103fd57600080fd5b80630d09308e1161025857806313af40351161023d57806313af40351461037d578063162094c41461039d578063173825d9146103bd57600080fd5b80630d09308e1461033b5780630e89341c1461035d57600080fd5b8062fdd58e1461028957806301ffc9a7146102bc578063023c23db146102ec57806306fdde0314610319575b600080fd5b34801561029557600080fd5b506102a96102a4366004612396565b610832565b6040519081526020015b60405180910390f35b3480156102c857600080fd5b506102dc6102d73660046123d8565b6108de565b60405190151581526020016102b3565b3480156102f857600080fd5b5061030c6103073660046123fc565b610903565b6040516102b39190612415565b34801561032557600080fd5b5061032e61099d565b6040516102b3919061249b565b34801561034757600080fd5b5061035b6103563660046124ae565b610a2b565b005b34801561036957600080fd5b5061032e6103783660046123fc565b610a70565b34801561038957600080fd5b5061035b6103983660046124d0565b610ad1565b3480156103a957600080fd5b5061035b6103b83660046125a4565b610b4e565b3480156103c957600080fd5b5061035b6103d83660046124d0565b610ba2565b3480156103e957600080fd5b5061035b6103f8366004612603565b610c1c565b34801561040957600080fd5b5061041d6104183660046124ae565b610cf0565b604080516001600160a01b0390931683526020830191909152016102b3565b34801561044857600080fd5b5061035b61045736600461270b565b610d1c565b34801561046857600080fd5b506102a960085481565b34801561047e57600080fd5b5061032e61048d3660046123fc565b610dbe565b34801561049e57600080fd5b506104b26104ad3660046127b9565b610e60565b6040516102b391906128b7565b3480156104cb57600080fd5b506102dc6104da3660046123fc565b600090815260036020526040902054151590565b3480156104fa57600080fd5b5061032e610f9e565b34801561050f57600080fd5b5061035b61051e3660046128ca565b610fab565b34801561052f57600080fd5b5061035b61053e3660046124ae565b610ffe565b34801561054f57600080fd5b5061035b61055e3660046124d0565b61104d565b61035b610571366004612396565b6110ac565b34801561058257600080fd5b506102dc6105913660046124d0565b6001600160a01b031660009081526004602052604090205460ff1690565b3480156105bb57600080fd5b5061035b6105ca3660046128f7565b6110f5565b3480156105db57600080fd5b506102dc6105ea3660046123fc565b600b6020526000908152604090205460ff1681565b34801561060b57600080fd5b5061035b61061a366004612992565b611131565b34801561062b57600080fd5b5061032e61119f565b34801561064057600080fd5b506102a961064f3660046123fc565b6000908152600a602052604090206003015490565b34801561067057600080fd5b5061035b61067f3660046123fc565b6111ac565b34801561069057600080fd5b5061035b61069f366004612603565b6111e1565b3480156106b057600080fd5b5061035b6106bf3660046129c2565b611270565b3480156106d057600080fd5b5061035b6106df3660046129f5565b61127b565b3480156106f057600080fd5b506102a96106ff3660046123fc565b60009081526003602052604090205490565b34801561071d57600080fd5b50600954610731906001600160a01b031681565b6040516001600160a01b0390911681526020016102b3565b34801561075557600080fd5b506107696107643660046123fc565b6112be565b6040516102b396959493929190612a32565b34801561078757600080fd5b506107316107963660046123fc565b6000908152600a60205260409020600201546001600160a01b031690565b3480156107c057600080fd5b506102dc6107cf366004612aa4565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b34801561080957600080fd5b5061032e6113b5565b34801561081e57600080fd5b5061035b61082d366004612ad2565b611447565b60006001600160a01b0383166108b55760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b0319821663152a902d60e11b14806108d857506108d88261145f565b60408051606081018252600080825260208201819052918101919091526000828152600a602052604081206001015460ff1690036109545760405163a8e3a97360e01b815260040160405180910390fd5b506000908152600a6020908152604091829020825160608101845260019091015460ff808216835261010082048116938301939093526201000090049091169181019190915290565b600580546109aa90612b3b565b80601f01602080910402602001604051908101604052809291908181526020018280546109d690612b3b565b8015610a235780601f106109f857610100808354040283529160200191610a23565b820191906000526020600020905b815481529060010190602001808311610a0657829003601f168201915b505050505081565b3360009081526004602052604090205460ff16610a5b576040516349e27cff60e01b815260040160405180910390fd5b6000918252600a602052604090912060030155565b600081815260036020526040902054606090610a9f57604051634a1850bf60e11b815260040160405180910390fd5b6007610aaa83610dbe565b604051602001610abb929190612b8b565b6040516020818303038152906040529050919050565b3360009081526004602052604090205460ff16610b01576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260046020526040808220805460ff191660011790555133917f619792ba07bec101df538ab277befa333e4cf1c0274f11de7be2a9507b9c9a0691a350565b3360009081526004602052604090205460ff16610b7e576040516349e27cff60e01b815260040160405180910390fd5b6000828152600a602090815260409091208251610b9d928401906122e8565b505050565b3360009081526004602052604090205460ff16610bd2576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260046020526040808220805460ff191690555133917fc191551a88c5609788f3532bd94c06479b61b0040eec65f9cd985428ffea643091a350565b3360009081526004602052604090205460ff16610c4c576040516349e27cff60e01b815260040160405180910390fd5b33610c5657600080fd5b60008581526003602052604090205415610c83576040516387cf36d160e01b815260040160405180910390fd5b610c8d8585610b4e565b610c978584610fab565b610ca18583611131565b610cab8582610a2b565b610cb6856000610ffe565b505050600091825250600a602090815260408083206005018054600160ff199182168117909255600b909352922080549091169091179055565b60095460085460009182916001600160a01b0390911690610d119085612c47565b915091509250929050565b6001600160a01b038516331480610d385750610d3885336107cf565b610daa5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f766564000000000000000000000000000060648201526084016108ac565b610db785858585856114af565b5050505050565b6000818152600a60205260409020805460609190610ddb90612b3b565b80601f0160208091040260200160405190810160405280929190818152602001828054610e0790612b3b565b8015610e545780601f10610e2957610100808354040283529160200191610e54565b820191906000526020600020905b815481529060010190602001808311610e3757829003601f168201915b50505050509050919050565b60608151835114610ed95760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d61746368000000000000000000000000000000000000000000000060648201526084016108ac565b6000835167ffffffffffffffff811115610ef557610ef56124ed565b604051908082528060200260200182016040528015610f1e578160200160208202803683370190505b50905060005b8451811015610f9657610f69858281518110610f4257610f42612c66565b6020026020010151858381518110610f5c57610f5c612c66565b6020026020010151610832565b828281518110610f7b57610f7b612c66565b6020908102919091010152610f8f81612c7c565b9050610f24565b509392505050565b600780546109aa90612b3b565b3360009081526004602052604090205460ff16610fdb576040516349e27cff60e01b815260040160405180910390fd5b6000828152600a602052604090208190600101610ff88282612ca8565b50505050565b3360009081526004602052604090205460ff1661102e576040516349e27cff60e01b815260040160405180910390fd5b3361103857600080fd5b6000918252600a602052604090912060040155565b3360009081526004602052604090205460ff1661107d576040516349e27cff60e01b815260040160405180910390fd5b6009805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6001600160a01b0382166110bf57600080fd5b6110c88161171b565b6110f182826001604051806040016040528060048152602001630307830360e41b815250611793565b5050565b3360009081526004602052604090205460ff16611125576040516349e27cff60e01b815260040160405180910390fd5b610ff8848484846118a3565b3360009081526004602052604090205460ff16611161576040516349e27cff60e01b815260040160405180910390fd5b6000918252600a6020526040909120600201805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03909216919091179055565b600680546109aa90612b3b565b3360009081526004602052604090205460ff166111dc576040516349e27cff60e01b815260040160405180910390fd5b600855565b3360009081526004602052604090205460ff16611211576040516349e27cff60e01b815260040160405180910390fd5b60008581526003602052604090205461123d57604051634a1850bf60e11b815260040160405180910390fd5b6112478582610a2b565b6112518585610b4e565b61125b8584610fab565b6112658583611131565b610db7856000610ffe565b6110f1338383611a78565b3360009081526004602052604090205460ff166112ab576040516349e27cff60e01b815260040160405180910390fd5b80516110f19060079060208401906122e8565b600a602052600090815260409020805481906112d990612b3b565b80601f016020809104026020016040519081016040528092919081815260200182805461130590612b3b565b80156113525780601f1061132757610100808354040283529160200191611352565b820191906000526020600020905b81548152906001019060200180831161133557829003601f168201915b505060408051606081018252600187015460ff808216835261010082048116602084015262010000909104811692820192909252600287015460038801546004890154600590990154979892976001600160a01b03909216965094509092501686565b6060600780546113c490612b3b565b80601f01602080910402602001604051908101604052809291908181526020018280546113f090612b3b565b801561143d5780601f106114125761010080835404028352916020019161143d565b820191906000526020600020905b81548152906001019060200180831161142057829003601f168201915b5050505050905090565b611452858585611b6c565b610db78585858585611cb7565b60006001600160e01b03198216636cdb3d1360e11b148061149057506001600160e01b031982166303a24d0760e21b145b806108d857506301ffc9a760e01b6001600160e01b03198316146108d8565b81518351146115115760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016108ac565b6001600160a01b0384166115755760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b60648201526084016108ac565b33611584818787878787611d52565b60005b84518110156116ad5760008582815181106115a4576115a4612c66565b6020026020010151905060008583815181106115c2576115c2612c66565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156116555760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b60648201526084016108ac565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290611692908490612d07565b92505081905550505050806116a690612c7c565b9050611587565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516116fd929190612d1f565b60405180910390a4611713818787878787611e67565b505050505050565b80158061174357506000818152600a6020908152604080832060039081015492529091205410155b1561176157604051636aa2a93760e01b815260040160405180910390fd5b6000818152600b602052604090205460ff1661179057604051636aa2a93760e01b815260040160405180910390fd5b50565b6001600160a01b0384166117f35760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084016108ac565b33611813816000876118048861200c565b61180d8861200c565b87611d52565b6000848152602081815260408083206001600160a01b038916845290915281208054859290611843908490612d07565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610db781600087878787612057565b6001600160a01b0384166119035760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084016108ac565b81518351146119655760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016108ac565b3361197581600087878787611d52565b60005b8451811015611a105783818151811061199357611993612c66565b60200260200101516000808784815181106119b0576119b0612c66565b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b0316815260200190815260200160002060008282546119f89190612d07565b90915550819050611a0881612c7c565b915050611978565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051611a61929190612d1f565b60405180910390a4610db781600087878787611e67565b816001600160a01b0316836001600160a01b031603611aff5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c66000000000000000000000000000000000000000000000060648201526084016108ac565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b3415610b9d576000606460085434611b849190612c47565b611b8e9190612d44565b6000838152600a602052604080822060020154905192935090916001600160a01b039091169083908381818185875af1925050503d8060008114611bee576040519150601f19603f3d011682016040523d82523d6000602084013e611bf3565b606091505b5050905080611c0157600080fd5b60006001600160a01b038616611c178434612d66565b604051600081818185875af1925050503d8060008114611c53576040519150601f19603f3d011682016040523d82523d6000602084013e611c58565b606091505b5050905080611c6657600080fd5b604080516001600160a01b03888116825287166020820152348183015290517f3f3483d0995db4c081e0101ef6753bef457833c20605cd871de61dcb48085a9a9181900360600190a1505050505050565b6001600160a01b038516331480611cd35750611cd385336107cf565b611d455760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f766564000000000000000000000000000000000000000000000060648201526084016108ac565b610db78585858585612153565b6001600160a01b038516611dd95760005b8351811015611dd757828181518110611d7e57611d7e612c66565b602002602001015160036000868481518110611d9c57611d9c612c66565b602002602001015181526020019081526020016000206000828254611dc19190612d07565b90915550611dd0905081612c7c565b9050611d63565b505b6001600160a01b0384166117135760005b8351811015611e5e57828181518110611e0557611e05612c66565b602002602001015160036000868481518110611e2357611e23612c66565b602002602001015181526020019081526020016000206000828254611e489190612d66565b90915550611e57905081612c7c565b9050611dea565b50505050505050565b6001600160a01b0384163b156117135760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190611eab9089908990889088908890600401612d7d565b6020604051808303816000875af1925050508015611ee6575060408051601f3d908101601f19168201909252611ee391810190612ddb565b60015b611f9b57611ef2612df8565b806308c379a003611f2b5750611f06612e14565b80611f115750611f2d565b8060405162461bcd60e51b81526004016108ac919061249b565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e74657200000000000000000000000060648201526084016108ac565b6001600160e01b0319811663bc197c8160e01b14611e5e5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b60648201526084016108ac565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061204657612046612c66565b602090810291909101015292915050565b6001600160a01b0384163b156117135760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e619061209b9089908990889088908890600401612e9e565b6020604051808303816000875af19250505080156120d6575060408051601f3d908101601f191682019092526120d391810190612ddb565b60015b6120e257611ef2612df8565b6001600160e01b0319811663f23a6e6160e01b14611e5e5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b60648201526084016108ac565b6001600160a01b0384166121b75760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b60648201526084016108ac565b336121c78187876118048861200c565b6000848152602081815260408083206001600160a01b038a1684529091529020548381101561224b5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b60648201526084016108ac565b6000858152602081815260408083206001600160a01b038b8116855292528083208785039055908816825281208054869290612288908490612d07565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4611e5e828888888888612057565b8280546122f490612b3b565b90600052602060002090601f016020900481019282612316576000855561235c565b82601f1061232f57805160ff191683800117855561235c565b8280016001018555821561235c579182015b8281111561235c578251825591602001919060010190612341565b5061236892915061236c565b5090565b5b80821115612368576000815560010161236d565b6001600160a01b038116811461179057600080fd5b600080604083850312156123a957600080fd5b82356123b481612381565b946020939093013593505050565b6001600160e01b03198116811461179057600080fd5b6000602082840312156123ea57600080fd5b81356123f5816123c2565b9392505050565b60006020828403121561240e57600080fd5b5035919050565b606081016108d8828460ff815116825260ff602082015116602083015260ff60408201511660408301525050565b60005b8381101561245e578181015183820152602001612446565b83811115610ff85750506000910152565b60008151808452612487816020860160208601612443565b601f01601f19169290920160200192915050565b6020815260006123f5602083018461246f565b600080604083850312156124c157600080fd5b50508035926020909101359150565b6000602082840312156124e257600080fd5b81356123f581612381565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715612529576125296124ed565b6040525050565b600082601f83011261254157600080fd5b813567ffffffffffffffff81111561255b5761255b6124ed565b604051612572601f8301601f191660200182612503565b81815284602083860101111561258757600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156125b757600080fd5b82359150602083013567ffffffffffffffff8111156125d557600080fd5b6125e185828601612530565b9150509250929050565b6000606082840312156125fd57600080fd5b50919050565b600080600080600060e0868803121561261b57600080fd5b85359450602086013567ffffffffffffffff81111561263957600080fd5b61264588828901612530565b94505061265587604088016125eb565b925060a086013561266581612381565b9497939650919460c0013592915050565b600067ffffffffffffffff821115612690576126906124ed565b5060051b60200190565b600082601f8301126126ab57600080fd5b813560206126b882612676565b6040516126c58282612503565b83815260059390931b85018201928281019150868411156126e557600080fd5b8286015b8481101561270057803583529183019183016126e9565b509695505050505050565b600080600080600060a0868803121561272357600080fd5b853561272e81612381565b9450602086013561273e81612381565b9350604086013567ffffffffffffffff8082111561275b57600080fd5b61276789838a0161269a565b9450606088013591508082111561277d57600080fd5b61278989838a0161269a565b9350608088013591508082111561279f57600080fd5b506127ac88828901612530565b9150509295509295909350565b600080604083850312156127cc57600080fd5b823567ffffffffffffffff808211156127e457600080fd5b818501915085601f8301126127f857600080fd5b8135602061280582612676565b6040516128128282612503565b83815260059390931b850182019282810191508984111561283257600080fd5b948201945b8386101561285957853561284a81612381565b82529482019490820190612837565b9650508601359250508082111561286f57600080fd5b506125e18582860161269a565b600081518084526020808501945080840160005b838110156128ac57815187529582019590820190600101612890565b509495945050505050565b6020815260006123f5602083018461287c565b600080608083850312156128dd57600080fd5b823591506128ee84602085016125eb565b90509250929050565b6000806000806080858703121561290d57600080fd5b843561291881612381565b9350602085013567ffffffffffffffff8082111561293557600080fd5b6129418883890161269a565b9450604087013591508082111561295757600080fd5b6129638883890161269a565b9350606087013591508082111561297957600080fd5b5061298687828801612530565b91505092959194509250565b600080604083850312156129a557600080fd5b8235915060208301356129b781612381565b809150509250929050565b600080604083850312156129d557600080fd5b82356129e081612381565b9150602083013580151581146129b757600080fd5b600060208284031215612a0757600080fd5b813567ffffffffffffffff811115612a1e57600080fd5b612a2a84828501612530565b949350505050565b6000610100808352612a468184018a61246f565b915050612a76602083018860ff815116825260ff602082015116602083015260ff60408201511660408301525050565b6001600160a01b03861660808301528460a08301528360c083015282151560e0830152979650505050505050565b60008060408385031215612ab757600080fd5b8235612ac281612381565b915060208301356129b781612381565b600080600080600060a08688031215612aea57600080fd5b8535612af581612381565b94506020860135612b0581612381565b93506040860135925060608601359150608086013567ffffffffffffffff811115612b2f57600080fd5b6127ac88828901612530565b600181811c90821680612b4f57607f821691505b6020821081036125fd57634e487b7160e01b600052602260045260246000fd5b60008151612b81818560208601612443565b9290920192915050565b600080845481600182811c915080831680612ba757607f831692505b60208084108203612bc657634e487b7160e01b86526022600452602486fd5b818015612bda5760018114612beb57612c18565b60ff19861689528489019650612c18565b60008b81526020902060005b86811015612c105781548b820152908501908301612bf7565b505084890196505b505050505050612c288185612b6f565b95945050505050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615612c6157612c61612c31565b500290565b634e487b7160e01b600052603260045260246000fd5b600060018201612c8e57612c8e612c31565b5060010190565b6000813560ff811681146108d857600080fd5b60ff612cb383612c95565b1681548160ff19821617835561ff00612cce60208601612c95565b60081b16808361ffff1984161717845562ff0000612cee60408701612c95565b60101b168362ffffff1984161782171784555050505050565b60008219821115612d1a57612d1a612c31565b500190565b604081526000612d32604083018561287c565b8281036020840152612c28818561287c565b600082612d6157634e487b7160e01b600052601260045260246000fd5b500490565b600082821015612d7857612d78612c31565b500390565b60006001600160a01b03808816835280871660208401525060a06040830152612da960a083018661287c565b8281036060840152612dbb818661287c565b90508281036080840152612dcf818561246f565b98975050505050505050565b600060208284031215612ded57600080fd5b81516123f5816123c2565b600060033d1115612e115760046000803e5060005160e01c5b90565b600060443d1015612e225790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715612e5257505050505090565b8285019150815181811115612e6a5750505050505090565b843d8701016020828501011115612e845750505050505090565b612e9360208286010187612503565b509095945050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a06080830152612ed660a083018461246f565b97965050505050505056fea164736f6c634300080d000a";

type PhiObjectConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PhiObjectConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PhiObject__factory extends ContractFactory {
  constructor(...args: PhiObjectConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _treasuryAddress: string,
    _royalityFee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PhiObject> {
    return super.deploy(
      _treasuryAddress,
      _royalityFee,
      overrides || {}
    ) as Promise<PhiObject>;
  }
  override getDeployTransaction(
    _treasuryAddress: string,
    _royalityFee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _treasuryAddress,
      _royalityFee,
      overrides || {}
    );
  }
  override attach(address: string): PhiObject {
    return super.attach(address) as PhiObject;
  }
  override connect(signer: Signer): PhiObject__factory {
    return super.connect(signer) as PhiObject__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PhiObjectInterface {
    return new utils.Interface(_abi) as PhiObjectInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PhiObject {
    return new Contract(address, _abi, signerOrProvider) as PhiObject;
  }
}
