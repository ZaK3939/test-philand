/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  PhiObject,
  PhiObjectInterface,
} from "../../../contracts/object/PhiObject";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_treasuryAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ExistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTokenID",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSetTokenSize",
    type: "error",
  },
  {
    inputs: [],
    name: "NonExistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "PaymentBalanceZero",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_newPrice",
        type: "uint256",
      },
    ],
    name: "ChangeTokenPrice",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentReceivedOwner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentWithdrawnOwner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
    ],
    name: "SetCreator",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "exp",
        type: "uint256",
      },
    ],
    name: "SetExp",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newMaxClaimed",
        type: "uint256",
      },
    ],
    name: "SetMaxClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_royalityFee",
        type: "uint256",
      },
    ],
    name: "SetRoyalityFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_secondaryRoyalty",
        type: "uint256",
      },
    ],
    name: "SetSecondaryRoyalityFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "x",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "y",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "z",
        type: "uint8",
      },
    ],
    name: "SetSize",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "SetTokenURI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address payable",
        name: "_treasuryAddress",
        type: "address",
      },
    ],
    name: "SetTreasuryAddress",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "baseuri",
        type: "string",
      },
    ],
    name: "SetbaseMetadataURI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allObjects",
    outputs: [
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxClaimed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "forSale",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseMetadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newPrice",
        type: "uint256",
      },
    ],
    name: "changeTokenPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "_size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxClaimed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_exp",
        type: "uint256",
      },
    ],
    name: "createObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "created",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseMetadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getCreator",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getExp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getMaxClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getPhiObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getSize",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "_size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxClaimed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_exp",
        type: "uint256",
      },
    ],
    name: "initObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetAddress",
        type: "address",
      },
    ],
    name: "owner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paymentBalanceOwner",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
    ],
    name: "removeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "royalityFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "secondaryRoyalty",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
    ],
    name: "setCreator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_exp",
        type: "uint256",
      },
    ],
    name: "setExp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newMaxClaimed",
        type: "uint256",
      },
    ],
    name: "setMaxClaimed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_royalityFee",
        type: "uint256",
      },
    ],
    name: "setRoyalityFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_secondaryRoyalty",
        type: "uint256",
      },
    ],
    name: "setSecondaryRoyalityFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "_size",
        type: "tuple",
      },
    ],
    name: "setSize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "setTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_treasuryAddress",
        type: "address",
      },
    ],
    name: "setTreasuryAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseMetadataURI",
        type: "string",
      },
    ],
    name: "setbaseMetadataURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasuryAddress",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "withdrawTo",
        type: "address",
      },
    ],
    name: "withdrawOwnerBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620034ee380380620034ee833981016040819052620000349162000203565b604080516020808201835260008083523381529081905291909120805460ff19166001179055620000658162000144565b50600160055560408051808201909152600f8082526e14dd185b99185c990813d89a9958dd608a1b6020909201918252620000a3916006916200015d565b50604080518082019091526003808252624f505360e81b6020909201918252620000d0916007916200015d565b506040805180820190915260188082527f68747470733a2f2f7777772e617277656176652e6e65742f0000000000000000602090920191825262000117916008916200015d565b50600980546001600160a01b0319166001600160a01b03929092169190911790556101f4600b5562000271565b8051620001599060039060208401906200015d565b5050565b8280546200016b9062000235565b90600052602060002090601f0160209004810192826200018f5760008555620001da565b82601f10620001aa57805160ff1916838001178555620001da565b82800160010185558215620001da579182015b82811115620001da578251825591602001919060010190620001bd565b50620001e8929150620001ec565b5090565b5b80821115620001e85760008155600101620001ed565b6000602082840312156200021657600080fd5b81516001600160a01b03811681146200022e57600080fd5b9392505050565b600181811c908216806200024a57607f821691505b6020821081036200026b57634e487b7160e01b600052602260045260246000fd5b50919050565b61326d80620002816000396000f3fe6080604052600436106102ea5760003560e01c80636605bfda11610184578063a22cb465116100d6578063cbdac7101161008a578063e985e9c511610064578063e985e9c514610902578063ea2fe3cb1461094b578063f242432a1461096057600080fd5b8063cbdac71014610866578063d48e638a14610899578063e498922f146108d257600080fd5b8063bd85b039116100bb578063bd85b039146107d1578063c457fb37146107fe578063c5f956af1461082e57600080fd5b8063a22cb46514610791578063b6ed6da9146107b157600080fd5b806382cb6b721161013857806395d89b411161011257806395d89b411461072c5780639733faa51461074157806398f246821461077157600080fd5b806382cb6b72146106c657806391686f53146106f65780639291671a1461071657600080fd5b8063666e1b3911610169578063666e1b391461064d57806367478a35146106865780637061d486146106a657600080fd5b80636605bfda1461060d578063660687821461062d57600080fd5b80631e4c78871161023d5780633bb3a24d116101f15780635b2bd79e116101cb5780635b2bd79e146105b8578063604c7f80146105cd57806362e8e8ac146105ed57600080fd5b80633bb3a24d1461053c5780634e1273f41461055c5780634f558e791461058957600080fd5b80632df918a1116102225780632df918a1146104e65780632eb2c2d614610506578063326bb4ad1461052657600080fd5b80631e4c7887146104915780632a55205a146104a757600080fd5b80630c68a7901161029f57806313af40351161027957806313af403514610431578063162094c414610451578063173825d91461047157600080fd5b80630c68a790146103d15780630d09308e146103f15780630e89341c1461041157600080fd5b8063023c23db116102d0578063023c23db1461036257806306fdde031461038f5780630b68e796146103b157600080fd5b8062fdd58e146102ff57806301ffc9a71461033257600080fd5b366102fa576102f834610980565b005b600080fd5b34801561030b57600080fd5b5061031f61031a36600461270c565b6109cd565b6040519081526020015b60405180910390f35b34801561033e57600080fd5b5061035261034d36600461274e565b610a7b565b6040519015158152602001610329565b34801561036e57600080fd5b5061038261037d366004612772565b610acb565b604051610329919061278b565b34801561039b57600080fd5b506103a4610b65565b6040516103299190612815565b3480156103bd57600080fd5b506102f86103cc366004612828565b610bf3565b3480156103dd57600080fd5b506102f86103ec366004612901565b610c76565b3480156103fd57600080fd5b506102f861040c366004612828565b610d23565b34801561041d57600080fd5b506103a461042c366004612772565b610d9e565b34801561043d57600080fd5b506102f861044c36600461298a565b610e02565b34801561045d57600080fd5b506102f861046c3660046129a7565b610e7f565b34801561047d57600080fd5b506102f861048c36600461298a565b610f00565b34801561049d57600080fd5b5061031f600c5481565b3480156104b357600080fd5b506104c76104c2366004612828565b610f7a565b604080516001600160a01b039093168352602083019190915201610329565b3480156104f257600080fd5b506102f8610501366004612a73565b610fa4565b34801561051257600080fd5b506102f8610521366004612b6c565b611079565b34801561053257600080fd5b5061031f600a5481565b34801561054857600080fd5b506103a4610557366004612772565b61111b565b34801561056857600080fd5b5061057c610577366004612c1a565b6111bd565b6040516103299190612d18565b34801561059557600080fd5b506103526105a4366004612772565b600090815260046020526040902054151590565b3480156105c457600080fd5b506103a46112fb565b3480156105d957600080fd5b506102f86105e8366004612d2b565b611308565b3480156105f957600080fd5b506102f8610608366004612828565b6113ca565b34801561061957600080fd5b506102f861062836600461298a565b611445565b34801561063957600080fd5b506102f861064836600461270c565b6114d7565b34801561065957600080fd5b5061035261066836600461298a565b6001600160a01b031660009081526020819052604090205460ff1690565b34801561069257600080fd5b506102f86106a136600461298a565b611597565b3480156106b257600080fd5b506102f86106c1366004612772565b6116fa565b3480156106d257600080fd5b506103526106e1366004612772565b600e6020526000908152604090205460ff1681565b34801561070257600080fd5b506102f8610711366004612d58565b61175f565b34801561072257600080fd5b5061031f600b5481565b34801561073857600080fd5b506103a46117fe565b34801561074d57600080fd5b5061031f61075c366004612772565b6000908152600d602052604090206003015490565b34801561077d57600080fd5b506102f861078c366004612772565b61180b565b34801561079d57600080fd5b506102f86107ac366004612d88565b611870565b3480156107bd57600080fd5b506102f86107cc366004612dbb565b61187b565b3480156107dd57600080fd5b5061031f6107ec366004612772565b60009081526004602052604090205490565b34801561080a57600080fd5b5061031f610819366004612772565b6000908152600d602052604090206004015490565b34801561083a57600080fd5b5060095461084e906001600160a01b031681565b6040516001600160a01b039091168152602001610329565b34801561087257600080fd5b50610886610881366004612772565b6118ee565b6040516103299796959493929190612df8565b3480156108a557600080fd5b5061084e6108b4366004612772565b6000908152600d60205260409020600201546001600160a01b031690565b3480156108de57600080fd5b5061031f6108ed366004612772565b6000908152600d602052604090206005015490565b34801561090e57600080fd5b5061035261091d366004612e71565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205460ff1690565b34801561095757600080fd5b506103a46119ec565b34801561096c57600080fd5b506102f861097b366004612e9f565b611a7e565b6040518181527faab58724194bfb12b018298382453c333764e73d19ec73cb98d26f8dd10d29cc9060200160405180910390a180600c60008282546109c59190612f1e565b909155505050565b60006001600160a01b038316610a505760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b5060008181526001602090815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b1480610aac57506001600160e01b031982166303a24d0760e21b145b80610a7557506301ffc9a760e01b6001600160e01b0319831614610a75565b60408051606081018252600080825260208201819052918101919091526000828152600d602052604081206001015460ff169003610b1c5760405163a8e3a97360e01b815260040160405180910390fd5b506000908152600d6020908152604091829020825160608101845260019091015460ff808216835261010082048116938301939093526201000090049091169181019190915290565b60068054610b7290612f36565b80601f0160208091040260200160405190810160405280929190818152602001828054610b9e90612f36565b8015610beb5780601f10610bc057610100808354040283529160200191610beb565b820191906000526020600020905b815481529060010190602001808311610bce57829003601f168201915b505050505081565b3360009081526020819052604090205460ff16610c23576040516349e27cff60e01b815260040160405180910390fd5b6000828152600d602090815260409182902060050183905581518481529081018390527f1e1ef21dc18e8f45f4e05a47d70fbffe8371dbcc8b4815e8dbca1dbd620c436691015b60405180910390a15050565b3360009081526020819052604090205460ff16610ca6576040516349e27cff60e01b815260040160405180910390fd5b6000868152600e602052604090205460ff16610cd557604051636aa2a93760e01b815260040160405180910390fd5b610cdf8683610d23565b610ce98686610e7f565b610cfc866105e836879003870187612f70565b610d06868461175f565b610d118660006113ca565b610d1b8682610bf3565b505050505050565b3360009081526020819052604090205460ff16610d53576040516349e27cff60e01b815260040160405180910390fd5b6000828152600d602090815260409182902060030183905581518481529081018390527fad41bb8f5516e8c7946d99bc48fd3ff0a07239c8ffcf2d103a0612b9ab44a60a9101610c6a565b6000818152600e602052604090205460609060ff16610dd057604051636aa2a93760e01b815260040160405180910390fd5b6008610ddb8361111b565b604051602001610dec929190612fa8565b6040516020818303038152906040529050919050565b3360009081526020819052604090205460ff16610e32576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260208190526040808220805460ff191660011790555133917f619792ba07bec101df538ab277befa333e4cf1c0274f11de7be2a9507b9c9a0691a350565b3360009081526020819052604090205460ff16610eaf576040516349e27cff60e01b815260040160405180910390fd5b6000828152600d602090815260409091208251610ece9284019061265e565b507fd2d827dddfc9c9a02afc5fc68d3251684b36e213a7999ebd90a861f25df4077e8282604051610c6a92919061304e565b3360009081526020819052604090205460ff16610f30576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260208190526040808220805460ff191690555133917fc191551a88c5609788f3532bd94c06479b61b0040eec65f9cd985428ffea643091a350565b60008030612710600b5485610f8f9190613067565b610f999190613086565b915091509250929050565b3360009081526020819052604090205460ff16610fd4576040516349e27cff60e01b815260040160405180910390fd5b60008681526004602052604090205415611001576040516387cf36d160e01b815260040160405180910390fd5b61100b8686610e7f565b6110158685611308565b61101f868461175f565b6110298683610d23565b6110348660006113ca565b61103e8682610bf3565b50505060009283525050600d602090815260408083206006018054600160ff199182168117909255600e909352922080549091169091179055565b6001600160a01b0385163314806110955750611095853361091d565b6111075760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f76656400000000000000000000000000006064820152608401610a47565b6111148585858585611b19565b5050505050565b6000818152600d6020526040902080546060919061113890612f36565b80601f016020809104026020016040519081016040528092919081815260200182805461116490612f36565b80156111b15780601f10611186576101008083540402835291602001916111b1565b820191906000526020600020905b81548152906001019060200180831161119457829003601f168201915b50505050509050919050565b606081518351146112365760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d6174636800000000000000000000000000000000000000000000006064820152608401610a47565b6000835167ffffffffffffffff8111156112525761125261284a565b60405190808252806020026020018201604052801561127b578160200160208202803683370190505b50905060005b84518110156112f3576112c685828151811061129f5761129f6130a8565b60200260200101518583815181106112b9576112b96130a8565b60200260200101516109cd565b8282815181106112d8576112d86130a8565b60209081029190910101526112ec816130be565b9050611281565b509392505050565b60088054610b7290612f36565b3360009081526020819052604090205460ff16611338576040516349e27cff60e01b815260040160405180910390fd5b6000828152600d6020908152604091829020835160019091018054858401518686015160ff94851661ffff1990931683176101009286169283021762ff000019166201000095909116948502179092558451878152938401529282019290925260608101919091527fd8e7c8605fecaf6228c6b5f990bc7f1e865694cc587ef62fe729b926915ef7e090608001610c6a565b3360009081526020819052604090205460ff166113fa576040516349e27cff60e01b815260040160405180910390fd5b6000828152600d602090815260409182902060040183905581518481529081018390527f415cf995faccaec43ce108f2713ebcdb2812b0e0689a8fa7dfdcabf78109ebbb9101610c6a565b3360009081526020819052604090205460ff16611475576040516349e27cff60e01b815260040160405180910390fd5b6009805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527feee016301a2725a577c64816adf35ccf644d07439731069a31748ec3b9102c60906020015b60405180910390a150565b3360009081526020819052604090205460ff16611507576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b03821661151a57600080fd5b6000818152600d602052604090206006015460ff1661153857600080fd5b61154181611d95565b6000818152600d6020908152604080832060030154600490925290912054111561156a57600080fd5b61159382826001604051806040016040528060048152602001630307830360e41b815250611e0e565b5050565b3360009081526020819052604090205460ff166115c7576040516349e27cff60e01b815260040160405180910390fd5b6002600554036116195760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610a47565b6002600555600c5460000361164157604051632f31015b60e11b815260040160405180910390fd5b600c80546000918290556040519091906001600160a01b0384169083908381818185875af1925050503d8060008114611696576040519150601f19603f3d011682016040523d82523d6000602084013e61169b565b606091505b50509050806116bd57604051632f31015b60e11b815260040160405180910390fd5b6040518281527f2d5923adf91dd211e633a33f2e27918338e6a33e3b3f386e9d466d1bc52eba799060200160405180910390a15050600160055550565b3360009081526020819052604090205460ff1661172a576040516349e27cff60e01b815260040160405180910390fd5b600b8190556040518181527fb69fdb7c7f7b0e17f64074ea1590642f14193039b234aae7a3c68b26ed055adf906020016114cc565b3360009081526020819052604090205460ff1661178f576040516349e27cff60e01b815260040160405180910390fd5b6000828152600d6020908152604091829020600201805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0385169081179091558251858152918201527f02df56823aeec019d75f2c2396e2a9c68868b26ccc5a4cd9412b2a78f8602f739101610c6a565b60078054610b7290612f36565b3360009081526020819052604090205460ff1661183b576040516349e27cff60e01b815260040160405180910390fd5b600a8190556040518181527f184fa17d2176718ea1955f61782c763ce239e39e790340793f227b0ba5db53e1906020016114cc565b611593338383611f33565b3360009081526020819052604090205460ff166118ab576040516349e27cff60e01b815260040160405180910390fd5b80516118be90600890602084019061265e565b507ffa52149a99a7016c4576d7bb33adefe5c4372aeded2a98a40f46d6ef33109c4d816040516114cc9190612815565b600d6020526000908152604090208054819061190990612f36565b80601f016020809104026020016040519081016040528092919081815260200182805461193590612f36565b80156119825780601f1061195757610100808354040283529160200191611982565b820191906000526020600020905b81548152906001019060200180831161196557829003601f168201915b505060408051606081018252600187015460ff80821683526101008204811660208401526201000090910481169282019290925260028701546003880154600489015460058a01546006909a0154989993986001600160a01b039093169750909550935090911687565b6060600880546119fb90612f36565b80601f0160208091040260200160405190810160405280929190818152602001828054611a2790612f36565b8015611a745780601f10611a4957610100808354040283529160200191611a74565b820191906000526020600020905b815481529060010190602001808311611a5757829003601f168201915b5050505050905090565b6001600160a01b038516331480611a9a5750611a9a853361091d565b611b0c5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f76656400000000000000000000000000000000000000000000006064820152608401610a47565b6111148585858585612027565b8151835114611b905760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d617463680000000000000000000000000000000000000000000000006064820152608401610a47565b6001600160a01b038416611bf45760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610a47565b33611c038187878787876121e4565b60005b8451811015611d2f576000858281518110611c2357611c236130a8565b602002602001015190506000858381518110611c4157611c416130a8565b60209081029190910181015160008481526001835260408082206001600160a01b038e168352909352919091205490915081811015611cd55760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610a47565b60008381526001602090815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290611d14908490612f1e565b9250508190555050505080611d28906130be565b9050611c06565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051611d7f9291906130d7565b60405180910390a4610d1b818787878787612372565b801580611dbe57506000818152600d602090815260408083206003015460049092529091205410155b15611ddc57604051636aa2a93760e01b815260040160405180910390fd5b6000818152600e602052604090205460ff16611e0b57604051636aa2a93760e01b815260040160405180910390fd5b50565b6001600160a01b038416611e6e5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610a47565b336000611e7a85612517565b90506000611e8785612517565b9050611e98836000898585896121e4565b60008681526001602090815260408083206001600160a01b038b16845290915281208054879290611eca908490612f1e565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4611f2a83600089898989612562565b50505050505050565b816001600160a01b0316836001600160a01b031603611fba5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c6600000000000000000000000000000000000000000000006064820152608401610a47565b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b03841661208b5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610a47565b33600061209785612517565b905060006120a485612517565b90506120b48389898585896121e4565b60008681526001602090815260408083206001600160a01b038c1684529091529020548581101561213a5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610a47565b60008781526001602090815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290612179908490612f1e565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46121d9848a8a8a8a8a612562565b505050505050505050565b6001600160a01b03851661226b5760005b835181101561226957828181518110612210576122106130a8565b60200260200101516004600086848151811061222e5761222e6130a8565b6020026020010151815260200190815260200160002060008282546122539190612f1e565b909155506122629050816130be565b90506121f5565b505b6001600160a01b038416610d1b5760005b8351811015611f2a576000848281518110612299576122996130a8565b6020026020010151905060008483815181106122b7576122b76130a8565b602002602001015190506000600460008481526020019081526020016000205490508181101561234f5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a206275726e20616d6f756e74206578636565647320746f7460448201527f616c537570706c790000000000000000000000000000000000000000000000006064820152608401610a47565b6000928352600460205260409092209103905561236b816130be565b905061227c565b6001600160a01b0384163b15610d1b5760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906123b690899089908890889088906004016130fc565b6020604051808303816000875af19250505080156123f1575060408051601f3d908101601f191682019092526123ee9181019061315a565b60015b6124a6576123fd613177565b806308c379a0036124365750612411613193565b8061241c5750612438565b8060405162461bcd60e51b8152600401610a479190612815565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e7465720000000000000000000000006064820152608401610a47565b6001600160e01b0319811663bc197c8160e01b14611f2a5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610a47565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110612551576125516130a8565b602090810291909101015292915050565b6001600160a01b0384163b15610d1b5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906125a6908990899088908890889060040161321d565b6020604051808303816000875af19250505080156125e1575060408051601f3d908101601f191682019092526125de9181019061315a565b60015b6125ed576123fd613177565b6001600160e01b0319811663f23a6e6160e01b14611f2a5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610a47565b82805461266a90612f36565b90600052602060002090601f01602090048101928261268c57600085556126d2565b82601f106126a557805160ff19168380011785556126d2565b828001600101855582156126d2579182015b828111156126d25782518255916020019190600101906126b7565b506126de9291506126e2565b5090565b5b808211156126de57600081556001016126e3565b6001600160a01b0381168114611e0b57600080fd5b6000806040838503121561271f57600080fd5b823561272a816126f7565b946020939093013593505050565b6001600160e01b031981168114611e0b57600080fd5b60006020828403121561276057600080fd5b813561276b81612738565b9392505050565b60006020828403121561278457600080fd5b5035919050565b60608101610a75828460ff815116825260ff602082015116602083015260ff60408201511660408301525050565b60005b838110156127d45781810151838201526020016127bc565b838111156127e3576000848401525b50505050565b600081518084526128018160208601602086016127b9565b601f01601f19169290920160200192915050565b60208152600061276b60208301846127e9565b6000806040838503121561283b57600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff811182821017156128865761288661284a565b6040525050565b600082601f83011261289e57600080fd5b813567ffffffffffffffff8111156128b8576128b861284a565b6040516128cf601f8301601f191660200182612860565b8181528460208386010111156128e457600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060008086880361010081121561291c57600080fd5b87359650602088013567ffffffffffffffff81111561293a57600080fd5b6129468a828b0161288d565b9650506060603f198201121561295b57600080fd5b5060408701935060a0870135612970816126f7565b9598949750929560c08101359460e0909101359350915050565b60006020828403121561299c57600080fd5b813561276b816126f7565b600080604083850312156129ba57600080fd5b82359150602083013567ffffffffffffffff8111156129d857600080fd5b6129e48582860161288d565b9150509250929050565b803560ff811681146129ff57600080fd5b919050565b600060608284031215612a1657600080fd5b6040516060810181811067ffffffffffffffff82111715612a3957612a3961284a565b604052905080612a48836129ee565b8152612a56602084016129ee565b6020820152612a67604084016129ee565b60408201525092915050565b6000806000806000806101008789031215612a8d57600080fd5b86359550602087013567ffffffffffffffff811115612aab57600080fd5b612ab789828a0161288d565b955050612ac78860408901612a04565b935060a0870135612970816126f7565b600067ffffffffffffffff821115612af157612af161284a565b5060051b60200190565b600082601f830112612b0c57600080fd5b81356020612b1982612ad7565b604051612b268282612860565b83815260059390931b8501820192828101915086841115612b4657600080fd5b8286015b84811015612b615780358352918301918301612b4a565b509695505050505050565b600080600080600060a08688031215612b8457600080fd5b8535612b8f816126f7565b94506020860135612b9f816126f7565b9350604086013567ffffffffffffffff80821115612bbc57600080fd5b612bc889838a01612afb565b94506060880135915080821115612bde57600080fd5b612bea89838a01612afb565b93506080880135915080821115612c0057600080fd5b50612c0d8882890161288d565b9150509295509295909350565b60008060408385031215612c2d57600080fd5b823567ffffffffffffffff80821115612c4557600080fd5b818501915085601f830112612c5957600080fd5b81356020612c6682612ad7565b604051612c738282612860565b83815260059390931b8501820192828101915089841115612c9357600080fd5b948201945b83861015612cba578535612cab816126f7565b82529482019490820190612c98565b96505086013592505080821115612cd057600080fd5b506129e485828601612afb565b600081518084526020808501945080840160005b83811015612d0d57815187529582019590820190600101612cf1565b509495945050505050565b60208152600061276b6020830184612cdd565b60008060808385031215612d3e57600080fd5b82359150612d4f8460208501612a04565b90509250929050565b60008060408385031215612d6b57600080fd5b823591506020830135612d7d816126f7565b809150509250929050565b60008060408385031215612d9b57600080fd5b8235612da6816126f7565b915060208301358015158114612d7d57600080fd5b600060208284031215612dcd57600080fd5b813567ffffffffffffffff811115612de457600080fd5b612df08482850161288d565b949350505050565b6000610120808352612e0c8184018b6127e9565b915050612e3c602083018960ff815116825260ff602082015116602083015260ff60408201511660408301525050565b6001600160a01b0396909616608082015260a081019490945260c084019290925260e083015215156101009091015292915050565b60008060408385031215612e8457600080fd5b8235612e8f816126f7565b91506020830135612d7d816126f7565b600080600080600060a08688031215612eb757600080fd5b8535612ec2816126f7565b94506020860135612ed2816126f7565b93506040860135925060608601359150608086013567ffffffffffffffff811115612efc57600080fd5b612c0d8882890161288d565b634e487b7160e01b600052601160045260246000fd5b60008219821115612f3157612f31612f08565b500190565b600181811c90821680612f4a57607f821691505b602082108103612f6a57634e487b7160e01b600052602260045260246000fd5b50919050565b600060608284031215612f8257600080fd5b61276b8383612a04565b60008151612f9e8185602086016127b9565b9290920192915050565b600080845481600182811c915080831680612fc457607f831692505b60208084108203612fe357634e487b7160e01b86526022600452602486fd5b818015612ff7576001811461300857613035565b60ff19861689528489019650613035565b60008b81526020902060005b8681101561302d5781548b820152908501908301613014565b505084890196505b5050505050506130458185612f8c565b95945050505050565b828152604060208201526000612df060408301846127e9565b600081600019048311821515161561308157613081612f08565b500290565b6000826130a357634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b6000600182016130d0576130d0612f08565b5060010190565b6040815260006130ea6040830185612cdd565b82810360208401526130458185612cdd565b60006001600160a01b03808816835280871660208401525060a0604083015261312860a0830186612cdd565b828103606084015261313a8186612cdd565b9050828103608084015261314e81856127e9565b98975050505050505050565b60006020828403121561316c57600080fd5b815161276b81612738565b600060033d11156131905760046000803e5060005160e01c5b90565b600060443d10156131a15790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156131d157505050505090565b82850191508151818111156131e95750505050505090565b843d87010160208285010111156132035750505050505090565b61321260208286010187612860565b509095945050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261325560a08301846127e9565b97965050505050505056fea164736f6c634300080d000a";

type PhiObjectConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PhiObjectConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PhiObject__factory extends ContractFactory {
  constructor(...args: PhiObjectConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _treasuryAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PhiObject> {
    return super.deploy(
      _treasuryAddress,
      overrides || {}
    ) as Promise<PhiObject>;
  }
  override getDeployTransaction(
    _treasuryAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_treasuryAddress, overrides || {});
  }
  override attach(address: string): PhiObject {
    return super.attach(address) as PhiObject;
  }
  override connect(signer: Signer): PhiObject__factory {
    return super.connect(signer) as PhiObject__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PhiObjectInterface {
    return new utils.Interface(_abi) as PhiObjectInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PhiObject {
    return new Contract(address, _abi, signerOrProvider) as PhiObject;
  }
}
