/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  PhiObject,
  PhiObjectInterface,
} from "../../../contracts/object/PhiObject";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTokenID",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSetTokenSize",
    type: "error",
  },
  {
    inputs: [],
    name: "NonExistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseMetadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseMetadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getMaxClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getSize",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct PhiObject.Size",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newMaxClaimed",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct PhiObject.Size",
        name: "size",
        type: "tuple",
      },
    ],
    name: "initToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mintBatchObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mintObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "objectSize",
    outputs: [
      {
        internalType: "uint8",
        name: "x",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "y",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "z",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetAddress",
        type: "address",
      },
    ],
    name: "owner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
    ],
    name: "removeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newMaxClaimed",
        type: "uint256",
      },
    ],
    name: "setMaxClaimed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct PhiObject.Size",
        name: "size",
        type: "tuple",
      },
    ],
    name: "setSize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "setTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "baseuri",
        type: "string",
      },
    ],
    name: "setbaseMetadataURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenURL",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040805160208101909152600081526200002c8162000095565b5033600090815260046020908152604091829020805460ff19166001179055815180830190925260188083527f68747470733a2f2f7777772e617277656176652e6e65742f0000000000000000929091019182526200008e91600591620000ae565b5062000190565b8051620000aa906002906020840190620000ae565b5050565b828054620000bc9062000154565b90600052602060002090601f016020900481019282620000e057600085556200012b565b82601f10620000fb57805160ff19168380011785556200012b565b828001600101855582156200012b579182015b828111156200012b5782518255916020019190600101906200010e565b50620001399291506200013d565b5090565b5b808211156200013957600081556001016200013e565b600181811c908216806200016957607f821691505b6020821081036200018a57634e487b7160e01b600052602260045260246000fd5b50919050565b61262680620001a06000396000f3fe608060405234801561001057600080fd5b50600436106101b85760003560e01c80635b2bd79e116100f9578063a393a97d11610097578063d980f4ae11610071578063d980f4ae1461045b578063e985e9c51461046e578063ea2fe3cb146104aa578063f242432a146104b257600080fd5b8063a393a97d146103ce578063b6ed6da914610428578063bd85b0391461043b57600080fd5b8063697436d9116100d3578063697436d91461037557806384c43211146103885780639733faa51461039b578063a22cb465146103bb57600080fd5b80635b2bd79e1461032e578063604c7f8014610336578063666e1b391461034957600080fd5b8063154e839e116101665780632eb2c2d6116101405780632eb2c2d6146102c65780633bb3a24d146102d95780634e1273f4146102ec5780634f558e791461030c57600080fd5b8063154e839e1461028d578063162094c4146102a0578063173825d9146102b357600080fd5b80630d09308e116101975780630d09308e146102455780630e89341c1461025a57806313af40351461027a57600080fd5b8062fdd58e146101bd57806301ffc9a7146101e3578063023c23db14610206575b600080fd5b6101d06101cb366004611ba3565b6104c5565b6040519081526020015b60405180910390f35b6101f66101f1366004611be6565b61056e565b60405190151581526020016101da565b610219610214366004611c0a565b6105c0565b60408051825160ff908116825260208085015182169083015292820151909216908201526060016101da565b610258610253366004611c23565b6106ab565b005b61026d610268366004611c0a565b610719565b6040516101da9190611c9d565b610258610288366004611cb0565b61077a565b61026d61029b366004611c0a565b6107f7565b6102586102ae366004611d82565b610891565b6102586102c1366004611cb0565b610911565b6102586102d4366004611e5e565b61098b565b61026d6102e7366004611c0a565b610a2d565b6102ff6102fa366004611f08565b610afa565b6040516101da9190612004565b6101f661031a366004611c0a565b600090815260036020526040902054151590565b61026d610c38565b61025861034436600461202f565b610c45565b6101f6610357366004611cb0565b6001600160a01b031660009081526004602052604090205460ff1690565b61025861038336600461205c565b610cc1565b6102586103963660046120f5565b610cfd565b6101d06103a9366004611c0a565b60009081526008602052604090205490565b6102586103c9366004612157565b610d4b565b6104046103dc366004611c0a565b60066020526000908152604090205460ff808216916101008104821691620100009091041683565b6040805160ff948516815292841660208401529216918101919091526060016101da565b610258610436366004612193565b610d5a565b6101d0610449366004611c0a565b60009081526003602052604090205490565b6102586104693660046121d0565b610d9d565b6101f661047c366004612225565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b61026d610dd9565b6102586104c036600461224f565b610e6b565b60006001600160a01b0383166105485760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061059f57506001600160e01b031982166303a24d0760e21b145b806105ba57506301ffc9a760e01b6001600160e01b03198316145b92915050565b604080516060810182526000808252602080830182905282840182905284825260039052919091205461060657604051634a1850bf60e11b815260040160405180910390fd5b60008281526006602090815260408083208151606081018352905460ff808216808452610100830482169584019590955262010000909104169181019190915291036106655760405163a8e3a97360e01b815260040160405180910390fd5b50506000908152600660209081526040918290208251606081018452905460ff808216835261010082048116938301939093526201000090049091169181019190915290565b3360009081526004602052604090205460ff166106db576040516349e27cff60e01b815260040160405180910390fd5b60008281526003602052604090205461070757604051634a1850bf60e11b815260040160405180910390fd5b60009182526008602052604090912055565b60008181526003602052604090205460609061074857604051634a1850bf60e11b815260040160405180910390fd5b600561075383610a2d565b604051602001610764929190612304565b6040516020818303038152906040529050919050565b3360009081526004602052604090205460ff166107aa576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260046020526040808220805460ff191660011790555133917f619792ba07bec101df538ab277befa333e4cf1c0274f11de7be2a9507b9c9a0691a350565b60076020526000908152604090208054610810906122b4565b80601f016020809104026020016040519081016040528092919081815260200182805461083c906122b4565b80156108895780601f1061085e57610100808354040283529160200191610889565b820191906000526020600020905b81548152906001019060200180831161086c57829003601f168201915b505050505081565b3360009081526004602052604090205460ff166108c1576040516349e27cff60e01b815260040160405180910390fd5b6000828152600360205260409020546108ed57604051634a1850bf60e11b815260040160405180910390fd5b6000828152600760209081526040909120825161090c92840190611aee565b505050565b3360009081526004602052604090205460ff16610941576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260046020526040808220805460ff191690555133917fc191551a88c5609788f3532bd94c06479b61b0040eec65f9cd985428ffea643091a350565b6001600160a01b0385163314806109a757506109a7853361047c565b610a195760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f7665640000000000000000000000000000606482015260840161053f565b610a268585858585610e78565b5050505050565b600081815260036020526040902054606090610a5c57604051634a1850bf60e11b815260040160405180910390fd5b60008281526007602052604090208054610a75906122b4565b80601f0160208091040260200160405190810160405280929190818152602001828054610aa1906122b4565b8015610aee5780601f10610ac357610100808354040283529160200191610aee565b820191906000526020600020905b815481529060010190602001808311610ad157829003601f168201915b50505050509050919050565b60608151835114610b735760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d617463680000000000000000000000000000000000000000000000606482015260840161053f565b6000835167ffffffffffffffff811115610b8f57610b8f611ccb565b604051908082528060200260200182016040528015610bb8578160200160208202803683370190505b50905060005b8451811015610c3057610c03858281518110610bdc57610bdc6123aa565b6020026020010151858381518110610bf657610bf66123aa565b60200260200101516104c5565b828281518110610c1557610c156123aa565b6020908102919091010152610c29816123d6565b9050610bbe565b509392505050565b60058054610810906122b4565b3360009081526004602052604090205460ff16610c75576040516349e27cff60e01b815260040160405180910390fd5b600082815260036020526040902054610ca157604051634a1850bf60e11b815260040160405180910390fd5b60008281526006602052604090208190610cbb8282612402565b50505050565b3360009081526004602052604090205460ff16610cf1576040516349e27cff60e01b815260040160405180910390fd5b610cbb848484846110e4565b3360009081526004602052604090205460ff16610d2d576040516349e27cff60e01b815260040160405180910390fd5b610d3784846106ab565b610d418483610891565b610cbb8482610c45565b610d563383836112b9565b5050565b3360009081526004602052604090205460ff16610d8a576040516349e27cff60e01b815260040160405180910390fd5b8051610d56906005906020840190611aee565b3360009081526004602052604090205460ff16610dcd576040516349e27cff60e01b815260040160405180910390fd5b610cbb848484846113ad565b606060058054610de8906122b4565b80601f0160208091040260200160405190810160405280929190818152602001828054610e14906122b4565b8015610e615780601f10610e3657610100808354040283529160200191610e61565b820191906000526020600020905b815481529060010190602001808311610e4457829003601f168201915b5050505050905090565b610a2685858585856114bd565b8151835114610eda5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b606482015260840161053f565b6001600160a01b038416610f3e5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b606482015260840161053f565b33610f4d818787878787611558565b60005b8451811015611076576000858281518110610f6d57610f6d6123aa565b602002602001015190506000858381518110610f8b57610f8b6123aa565b602090810291909101810151600084815280835260408082206001600160a01b038e16835290935291909120549091508181101561101e5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b606482015260840161053f565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b1682528120805484929061105b908490612461565b925050819055505050508061106f906123d6565b9050610f50565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516110c6929190612479565b60405180910390a46110dc81878787878761166d565b505050505050565b6001600160a01b0384166111445760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b606482015260840161053f565b81518351146111a65760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b606482015260840161053f565b336111b681600087878787611558565b60005b8451811015611251578381815181106111d4576111d46123aa565b60200260200101516000808784815181106111f1576111f16123aa565b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b0316815260200190815260200160002060008282546112399190612461565b90915550819050611249816123d6565b9150506111b9565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516112a2929190612479565b60405180910390a4610a268160008787878761166d565b816001600160a01b0316836001600160a01b0316036113405760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c660000000000000000000000000000000000000000000000606482015260840161053f565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b03841661140d5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b606482015260840161053f565b3361142d8160008761141e88611812565b61142788611812565b87611558565b6000848152602081815260408083206001600160a01b03891684529091528120805485929061145d908490612461565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610a268160008787878761185d565b6001600160a01b0385163314806114d957506114d9853361047c565b61154b5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f7665640000000000000000000000000000000000000000000000606482015260840161053f565b610a268585858585611959565b6001600160a01b0385166115df5760005b83518110156115dd57828181518110611584576115846123aa565b6020026020010151600360008684815181106115a2576115a26123aa565b6020026020010151815260200190815260200160002060008282546115c79190612461565b909155506115d69050816123d6565b9050611569565b505b6001600160a01b0384166110dc5760005b83518110156116645782818151811061160b5761160b6123aa565b602002602001015160036000868481518110611629576116296123aa565b60200260200101518152602001908152602001600020600082825461164e919061249e565b9091555061165d9050816123d6565b90506115f0565b50505050505050565b6001600160a01b0384163b156110dc5760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906116b190899089908890889088906004016124b5565b6020604051808303816000875af19250505080156116ec575060408051601f3d908101601f191682019092526116e991810190612513565b60015b6117a1576116f8612530565b806308c379a003611731575061170c61254c565b806117175750611733565b8060405162461bcd60e51b815260040161053f9190611c9d565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e746572000000000000000000000000606482015260840161053f565b6001600160e01b0319811663bc197c8160e01b146116645760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b606482015260840161053f565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061184c5761184c6123aa565b602090810291909101015292915050565b6001600160a01b0384163b156110dc5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906118a190899089908890889088906004016125d6565b6020604051808303816000875af19250505080156118dc575060408051601f3d908101601f191682019092526118d991810190612513565b60015b6118e8576116f8612530565b6001600160e01b0319811663f23a6e6160e01b146116645760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b606482015260840161053f565b6001600160a01b0384166119bd5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b606482015260840161053f565b336119cd81878761141e88611812565b6000848152602081815260408083206001600160a01b038a16845290915290205483811015611a515760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b606482015260840161053f565b6000858152602081815260408083206001600160a01b038b8116855292528083208785039055908816825281208054869290611a8e908490612461565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461166482888888888861185d565b828054611afa906122b4565b90600052602060002090601f016020900481019282611b1c5760008555611b62565b82601f10611b3557805160ff1916838001178555611b62565b82800160010185558215611b62579182015b82811115611b62578251825591602001919060010190611b47565b50611b6e929150611b72565b5090565b5b80821115611b6e5760008155600101611b73565b80356001600160a01b0381168114611b9e57600080fd5b919050565b60008060408385031215611bb657600080fd5b611bbf83611b87565b946020939093013593505050565b6001600160e01b031981168114611be357600080fd5b50565b600060208284031215611bf857600080fd5b8135611c0381611bcd565b9392505050565b600060208284031215611c1c57600080fd5b5035919050565b60008060408385031215611c3657600080fd5b50508035926020909101359150565b60005b83811015611c60578181015183820152602001611c48565b83811115610cbb5750506000910152565b60008151808452611c89816020860160208601611c45565b601f01601f19169290920160200192915050565b602081526000611c036020830184611c71565b600060208284031215611cc257600080fd5b611c0382611b87565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715611d0757611d07611ccb565b6040525050565b600082601f830112611d1f57600080fd5b813567ffffffffffffffff811115611d3957611d39611ccb565b604051611d50601f8301601f191660200182611ce1565b818152846020838601011115611d6557600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215611d9557600080fd5b82359150602083013567ffffffffffffffff811115611db357600080fd5b611dbf85828601611d0e565b9150509250929050565b600067ffffffffffffffff821115611de357611de3611ccb565b5060051b60200190565b600082601f830112611dfe57600080fd5b81356020611e0b82611dc9565b604051611e188282611ce1565b83815260059390931b8501820192828101915086841115611e3857600080fd5b8286015b84811015611e535780358352918301918301611e3c565b509695505050505050565b600080600080600060a08688031215611e7657600080fd5b611e7f86611b87565b9450611e8d60208701611b87565b9350604086013567ffffffffffffffff80821115611eaa57600080fd5b611eb689838a01611ded565b94506060880135915080821115611ecc57600080fd5b611ed889838a01611ded565b93506080880135915080821115611eee57600080fd5b50611efb88828901611d0e565b9150509295509295909350565b60008060408385031215611f1b57600080fd5b823567ffffffffffffffff80821115611f3357600080fd5b818501915085601f830112611f4757600080fd5b81356020611f5482611dc9565b604051611f618282611ce1565b83815260059390931b8501820192828101915089841115611f8157600080fd5b948201945b83861015611fa657611f9786611b87565b82529482019490820190611f86565b96505086013592505080821115611fbc57600080fd5b50611dbf85828601611ded565b600081518084526020808501945080840160005b83811015611ff957815187529582019590820190600101611fdd565b509495945050505050565b602081526000611c036020830184611fc9565b60006060828403121561202957600080fd5b50919050565b6000806080838503121561204257600080fd5b823591506120538460208501612017565b90509250929050565b6000806000806080858703121561207257600080fd5b61207b85611b87565b9350602085013567ffffffffffffffff8082111561209857600080fd5b6120a488838901611ded565b945060408701359150808211156120ba57600080fd5b6120c688838901611ded565b935060608701359150808211156120dc57600080fd5b506120e987828801611d0e565b91505092959194509250565b60008060008060c0858703121561210b57600080fd5b8435935060208501359250604085013567ffffffffffffffff81111561213057600080fd5b61213c87828801611d0e565b92505061214c8660608701612017565b905092959194509250565b6000806040838503121561216a57600080fd5b61217383611b87565b91506020830135801515811461218857600080fd5b809150509250929050565b6000602082840312156121a557600080fd5b813567ffffffffffffffff8111156121bc57600080fd5b6121c884828501611d0e565b949350505050565b600080600080608085870312156121e657600080fd5b6121ef85611b87565b93506020850135925060408501359150606085013567ffffffffffffffff81111561221957600080fd5b6120e987828801611d0e565b6000806040838503121561223857600080fd5b61224183611b87565b915061205360208401611b87565b600080600080600060a0868803121561226757600080fd5b61227086611b87565b945061227e60208701611b87565b93506040860135925060608601359150608086013567ffffffffffffffff8111156122a857600080fd5b611efb88828901611d0e565b600181811c908216806122c857607f821691505b60208210810361202957634e487b7160e01b600052602260045260246000fd5b600081516122fa818560208601611c45565b9290920192915050565b600080845481600182811c91508083168061232057607f831692505b6020808410820361233f57634e487b7160e01b86526022600452602486fd5b818015612353576001811461236457612391565b60ff19861689528489019650612391565b60008b81526020902060005b868110156123895781548b820152908501908301612370565b505084890196505b5050505050506123a181856122e8565b95945050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016123e8576123e86123c0565b5060010190565b6000813560ff811681146105ba57600080fd5b60ff61240d836123ef565b1681548160ff19821617835561ff00612428602086016123ef565b60081b16808361ffff1984161717845562ff0000612448604087016123ef565b60101b168362ffffff1984161782171784555050505050565b60008219821115612474576124746123c0565b500190565b60408152600061248c6040830185611fc9565b82810360208401526123a18185611fc9565b6000828210156124b0576124b06123c0565b500390565b60006001600160a01b03808816835280871660208401525060a060408301526124e160a0830186611fc9565b82810360608401526124f38186611fc9565b905082810360808401526125078185611c71565b98975050505050505050565b60006020828403121561252557600080fd5b8151611c0381611bcd565b600060033d11156125495760046000803e5060005160e01c5b90565b600060443d101561255a5790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561258a57505050505090565b82850191508151818111156125a25750505050505090565b843d87010160208285010111156125bc5750505050505090565b6125cb60208286010187611ce1565b509095945050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261260e60a0830184611c71565b97965050505050505056fea164736f6c634300080d000a";

type PhiObjectConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PhiObjectConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PhiObject__factory extends ContractFactory {
  constructor(...args: PhiObjectConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PhiObject> {
    return super.deploy(overrides || {}) as Promise<PhiObject>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PhiObject {
    return super.attach(address) as PhiObject;
  }
  override connect(signer: Signer): PhiObject__factory {
    return super.connect(signer) as PhiObject__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PhiObjectInterface {
    return new utils.Interface(_abi) as PhiObjectInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PhiObject {
    return new Contract(address, _abi, signerOrProvider) as PhiObject;
  }
}
