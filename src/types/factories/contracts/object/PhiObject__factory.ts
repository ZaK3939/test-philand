/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  PhiObject,
  PhiObjectInterface,
} from "../../../contracts/object/PhiObject";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_treasuryAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ExistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTokenID",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSetTokenSize",
    type: "error",
  },
  {
    inputs: [],
    name: "NonExistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "PaymentBalanceZero",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_newPrice",
        type: "uint256",
      },
    ],
    name: "ChangeTokenPrice",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentReceivedOwner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentWithdrawnOwner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
    ],
    name: "SetCreator",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newMaxClaimed",
        type: "uint256",
      },
    ],
    name: "SetMaxClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_royalityFee",
        type: "uint256",
      },
    ],
    name: "SetRoyalityFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_secondaryRoyalty",
        type: "uint256",
      },
    ],
    name: "SetSecondaryRoyalityFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "x",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "y",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "z",
        type: "uint8",
      },
    ],
    name: "SetSize",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "SetTokenURI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address payable",
        name: "_treasuryAddress",
        type: "address",
      },
    ],
    name: "SetTreasuryAddress",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "baseuri",
        type: "string",
      },
    ],
    name: "SetbaseMetadataURI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allObjects",
    outputs: [
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxClaimed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "forSale",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseMetadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newPrice",
        type: "uint256",
      },
    ],
    name: "changeTokenPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "_size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxClaimed",
        type: "uint256",
      },
    ],
    name: "createObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "created",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseMetadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getCreator",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getMaxClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getPhiObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getSize",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "_size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxClaimed",
        type: "uint256",
      },
    ],
    name: "initObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetAddress",
        type: "address",
      },
    ],
    name: "owner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paymentBalanceOwner",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
    ],
    name: "removeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "royalityFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "secondaryRoyalty",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
    ],
    name: "setCreator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newMaxClaimed",
        type: "uint256",
      },
    ],
    name: "setMaxClaimed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_royalityFee",
        type: "uint256",
      },
    ],
    name: "setRoyalityFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_secondaryRoyalty",
        type: "uint256",
      },
    ],
    name: "setSecondaryRoyalityFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "_size",
        type: "tuple",
      },
    ],
    name: "setSize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "setTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_treasuryAddress",
        type: "address",
      },
    ],
    name: "setTreasuryAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseMetadataURI",
        type: "string",
      },
    ],
    name: "setbaseMetadataURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasuryAddress",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "withdrawTo",
        type: "address",
      },
    ],
    name: "withdrawOwnerBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620033dc380380620033dc833981016040819052620000349162000203565b604080516020808201835260008083523381529081905291909120805460ff19166001179055620000658162000144565b50600160055560408051808201909152600f8082526e14dd185b99185c990813d89a9958dd608a1b6020909201918252620000a3916006916200015d565b50604080518082019091526003808252624f505360e81b6020909201918252620000d0916007916200015d565b506040805180820190915260188082527f68747470733a2f2f7777772e617277656176652e6e65742f0000000000000000602090920191825262000117916008916200015d565b50600980546001600160a01b0319166001600160a01b03929092169190911790556101f4600b5562000271565b8051620001599060039060208401906200015d565b5050565b8280546200016b9062000235565b90600052602060002090601f0160209004810192826200018f5760008555620001da565b82601f10620001aa57805160ff1916838001178555620001da565b82800160010185558215620001da579182015b82811115620001da578251825591602001919060010190620001bd565b50620001e8929150620001ec565b5090565b5b80821115620001e85760008155600101620001ed565b6000602082840312156200021657600080fd5b81516001600160a01b03811681146200022e57600080fd5b9392505050565b600181811c908216806200024a57607f821691505b6020821081036200026b57634e487b7160e01b600052602260045260246000fd5b50919050565b61315b80620002816000396000f3fe6080604052600436106102d45760003560e01c806366068782116101795780639e8540fa116100d6578063c5f956af1161008a578063e985e9c511610064578063e985e9c51461089b578063ea2fe3cb146108e4578063f242432a146108f957600080fd5b8063c5f956af146107f8578063cbdac71014610830578063d48e638a1461086257600080fd5b8063b6ed6da9116100bb578063b6ed6da91461077b578063bd85b0391461079b578063c457fb37146107c857600080fd5b80639e8540fa1461073b578063a22cb4651461075b57600080fd5b806391686f531161012d57806395d89b411161011257806395d89b41146106d65780639733faa5146106eb57806398f246821461071b57600080fd5b806391686f53146106a05780639291671a146106c057600080fd5b806367478a351161015e57806367478a35146106305780637061d4861461065057806382cb6b721461067057600080fd5b806366068782146105d7578063666e1b39146105f757600080fd5b80631e4c7887116102325780634e1273f4116101e6578063604c7f80116101c0578063604c7f801461057757806362e8e8ac146105975780636605bfda146105b757600080fd5b80634e1273f4146105065780634f558e79146105335780635b2bd79e1461056257600080fd5b80632eb2c2d6116102175780632eb2c2d6146104b0578063326bb4ad146104d05780633bb3a24d146104e657600080fd5b80631e4c78871461045b5780632a55205a1461047157600080fd5b80630e89341c11610289578063162094c41161026e578063162094c4146103fb578063173825d91461041b5780631cd307d41461043b57600080fd5b80630e89341c146103bb57806313af4035146103db57600080fd5b8063023c23db116102ba578063023c23db1461034c57806306fdde03146103795780630d09308e1461039b57600080fd5b8062fdd58e146102e957806301ffc9a71461031c57600080fd5b366102e4576102e234610919565b005b600080fd5b3480156102f557600080fd5b5061030961030436600461260e565b610966565b6040519081526020015b60405180910390f35b34801561032857600080fd5b5061033c610337366004612650565b610a14565b6040519015158152602001610313565b34801561035857600080fd5b5061036c610367366004612674565b610a64565b604051610313919061268d565b34801561038557600080fd5b5061038e610afe565b6040516103139190612717565b3480156103a757600080fd5b506102e26103b636600461272a565b610b8c565b3480156103c757600080fd5b5061038e6103d6366004612674565b610c0f565b3480156103e757600080fd5b506102e26103f636600461274c565b610c73565b34801561040757600080fd5b506102e2610416366004612820565b610cf0565b34801561042757600080fd5b506102e261043636600461274c565b610d71565b34801561044757600080fd5b506102e26104563660046128ec565b610deb565b34801561046757600080fd5b50610309600c5481565b34801561047d57600080fd5b5061049161048c36600461272a565b610eb5565b604080516001600160a01b039093168352602083019190915201610313565b3480156104bc57600080fd5b506102e26104cb3660046129f4565b610edf565b3480156104dc57600080fd5b50610309600a5481565b3480156104f257600080fd5b5061038e610501366004612674565b610f81565b34801561051257600080fd5b50610526610521366004612aa2565b611023565b6040516103139190612ba0565b34801561053f57600080fd5b5061033c61054e366004612674565b600090815260046020526040902054151590565b34801561056e57600080fd5b5061038e611161565b34801561058357600080fd5b506102e2610592366004612bb3565b61116e565b3480156105a357600080fd5b506102e26105b236600461272a565b611230565b3480156105c357600080fd5b506102e26105d236600461274c565b6112ab565b3480156105e357600080fd5b506102e26105f236600461260e565b61133d565b34801561060357600080fd5b5061033c61061236600461274c565b6001600160a01b031660009081526020819052604090205460ff1690565b34801561063c57600080fd5b506102e261064b36600461274c565b6113fd565b34801561065c57600080fd5b506102e261066b366004612674565b611560565b34801561067c57600080fd5b5061033c61068b366004612674565b600e6020526000908152604090205460ff1681565b3480156106ac57600080fd5b506102e26106bb366004612be0565b6115c5565b3480156106cc57600080fd5b50610309600b5481565b3480156106e257600080fd5b5061038e611664565b3480156106f757600080fd5b50610309610706366004612674565b6000908152600d602052604090206003015490565b34801561072757600080fd5b506102e2610736366004612674565b611671565b34801561074757600080fd5b506102e2610756366004612c10565b6116d6565b34801561076757600080fd5b506102e2610776366004612c7d565b611771565b34801561078757600080fd5b506102e2610796366004612cb0565b61177c565b3480156107a757600080fd5b506103096107b6366004612674565b60009081526004602052604090205490565b3480156107d457600080fd5b506103096107e3366004612674565b6000908152600d602052604090206004015490565b34801561080457600080fd5b50600954610818906001600160a01b031681565b6040516001600160a01b039091168152602001610313565b34801561083c57600080fd5b5061085061084b366004612674565b6117ef565b60405161031396959493929190612ced565b34801561086e57600080fd5b5061081861087d366004612674565b6000908152600d60205260409020600201546001600160a01b031690565b3480156108a757600080fd5b5061033c6108b6366004612d5f565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205460ff1690565b3480156108f057600080fd5b5061038e6118e6565b34801561090557600080fd5b506102e2610914366004612d8d565b611978565b6040518181527faab58724194bfb12b018298382453c333764e73d19ec73cb98d26f8dd10d29cc9060200160405180910390a180600c600082825461095e9190612e0c565b909155505050565b60006001600160a01b0383166109e95760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b5060008181526001602090815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b1480610a4557506001600160e01b031982166303a24d0760e21b145b80610a0e57506301ffc9a760e01b6001600160e01b0319831614610a0e565b60408051606081018252600080825260208201819052918101919091526000828152600d602052604081206001015460ff169003610ab55760405163a8e3a97360e01b815260040160405180910390fd5b506000908152600d6020908152604091829020825160608101845260019091015460ff808216835261010082048116938301939093526201000090049091169181019190915290565b60068054610b0b90612e24565b80601f0160208091040260200160405190810160405280929190818152602001828054610b3790612e24565b8015610b845780601f10610b5957610100808354040283529160200191610b84565b820191906000526020600020905b815481529060010190602001808311610b6757829003601f168201915b505050505081565b3360009081526020819052604090205460ff16610bbc576040516349e27cff60e01b815260040160405180910390fd5b6000828152600d602090815260409182902060030183905581518481529081018390527fad41bb8f5516e8c7946d99bc48fd3ff0a07239c8ffcf2d103a0612b9ab44a60a91015b60405180910390a15050565b6000818152600e602052604090205460609060ff16610c4157604051636aa2a93760e01b815260040160405180910390fd5b6008610c4c83610f81565b604051602001610c5d929190612e7a565b6040516020818303038152906040529050919050565b3360009081526020819052604090205460ff16610ca3576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260208190526040808220805460ff191660011790555133917f619792ba07bec101df538ab277befa333e4cf1c0274f11de7be2a9507b9c9a0691a350565b3360009081526020819052604090205460ff16610d20576040516349e27cff60e01b815260040160405180910390fd5b6000828152600d602090815260409091208251610d3f92840190612560565b507fd2d827dddfc9c9a02afc5fc68d3251684b36e213a7999ebd90a861f25df4077e8282604051610c03929190612f20565b3360009081526020819052604090205460ff16610da1576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260208190526040808220805460ff191690555133917fc191551a88c5609788f3532bd94c06479b61b0040eec65f9cd985428ffea643091a350565b3360009081526020819052604090205460ff16610e1b576040516349e27cff60e01b815260040160405180910390fd5b60008581526004602052604090205415610e48576040516387cf36d160e01b815260040160405180910390fd5b610e528585610cf0565b610e5c858461116e565b610e6685836115c5565b610e708582610b8c565b610e7b856000611230565b505050600091825250600d602090815260408083206005018054600160ff199182168117909255600e909352922080549091169091179055565b60008030612710600b5485610eca9190612f39565b610ed49190612f58565b915091509250929050565b6001600160a01b038516331480610efb5750610efb85336108b6565b610f6d5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f766564000000000000000000000000000060648201526084016109e0565b610f7a8585858585611a13565b5050505050565b6000818152600d60205260409020805460609190610f9e90612e24565b80601f0160208091040260200160405190810160405280929190818152602001828054610fca90612e24565b80156110175780601f10610fec57610100808354040283529160200191611017565b820191906000526020600020905b815481529060010190602001808311610ffa57829003601f168201915b50505050509050919050565b6060815183511461109c5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d61746368000000000000000000000000000000000000000000000060648201526084016109e0565b6000835167ffffffffffffffff8111156110b8576110b8612769565b6040519080825280602002602001820160405280156110e1578160200160208202803683370190505b50905060005b84518110156111595761112c85828151811061110557611105612f7a565b602002602001015185838151811061111f5761111f612f7a565b6020026020010151610966565b82828151811061113e5761113e612f7a565b602090810291909101015261115281612f90565b90506110e7565b509392505050565b60088054610b0b90612e24565b3360009081526020819052604090205460ff1661119e576040516349e27cff60e01b815260040160405180910390fd5b6000828152600d6020908152604091829020835160019091018054858401518686015160ff94851661ffff1990931683176101009286169283021762ff000019166201000095909116948502179092558451878152938401529282019290925260608101919091527fd8e7c8605fecaf6228c6b5f990bc7f1e865694cc587ef62fe729b926915ef7e090608001610c03565b3360009081526020819052604090205460ff16611260576040516349e27cff60e01b815260040160405180910390fd5b6000828152600d602090815260409182902060040183905581518481529081018390527f415cf995faccaec43ce108f2713ebcdb2812b0e0689a8fa7dfdcabf78109ebbb9101610c03565b3360009081526020819052604090205460ff166112db576040516349e27cff60e01b815260040160405180910390fd5b6009805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527feee016301a2725a577c64816adf35ccf644d07439731069a31748ec3b9102c60906020015b60405180910390a150565b3360009081526020819052604090205460ff1661136d576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b03821661138057600080fd5b6000818152600d602052604090206005015460ff1661139e57600080fd5b6113a781611c97565b6000818152600d602090815260408083206003015460049092529091205411156113d057600080fd5b6113f982826001604051806040016040528060048152602001630307830360e41b815250611d10565b5050565b3360009081526020819052604090205460ff1661142d576040516349e27cff60e01b815260040160405180910390fd5b60026005540361147f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016109e0565b6002600555600c546000036114a757604051632f31015b60e11b815260040160405180910390fd5b600c80546000918290556040519091906001600160a01b0384169083908381818185875af1925050503d80600081146114fc576040519150601f19603f3d011682016040523d82523d6000602084013e611501565b606091505b505090508061152357604051632f31015b60e11b815260040160405180910390fd5b6040518281527f2d5923adf91dd211e633a33f2e27918338e6a33e3b3f386e9d466d1bc52eba799060200160405180910390a15050600160055550565b3360009081526020819052604090205460ff16611590576040516349e27cff60e01b815260040160405180910390fd5b600b8190556040518181527fb69fdb7c7f7b0e17f64074ea1590642f14193039b234aae7a3c68b26ed055adf90602001611332565b3360009081526020819052604090205460ff166115f5576040516349e27cff60e01b815260040160405180910390fd5b6000828152600d6020908152604091829020600201805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0385169081179091558251858152918201527f02df56823aeec019d75f2c2396e2a9c68868b26ccc5a4cd9412b2a78f8602f739101610c03565b60078054610b0b90612e24565b3360009081526020819052604090205460ff166116a1576040516349e27cff60e01b815260040160405180910390fd5b600a8190556040518181527f184fa17d2176718ea1955f61782c763ce239e39e790340793f227b0ba5db53e190602001611332565b3360009081526020819052604090205460ff16611706576040516349e27cff60e01b815260040160405180910390fd5b6000858152600e602052604090205460ff1661173557604051636aa2a93760e01b815260040160405180910390fd5b61173f8582610b8c565b6117498585610cf0565b61175c8561059236869003860186612fa9565b61176685836115c5565b610f7a856000611230565b6113f9338383611e35565b3360009081526020819052604090205460ff166117ac576040516349e27cff60e01b815260040160405180910390fd5b80516117bf906008906020840190612560565b507ffa52149a99a7016c4576d7bb33adefe5c4372aeded2a98a40f46d6ef33109c4d816040516113329190612717565b600d6020526000908152604090208054819061180a90612e24565b80601f016020809104026020016040519081016040528092919081815260200182805461183690612e24565b80156118835780601f1061185857610100808354040283529160200191611883565b820191906000526020600020905b81548152906001019060200180831161186657829003601f168201915b505060408051606081018252600187015460ff808216835261010082048116602084015262010000909104811692820192909252600287015460038801546004890154600590990154979892976001600160a01b03909216965094509092501686565b6060600880546118f590612e24565b80601f016020809104026020016040519081016040528092919081815260200182805461192190612e24565b801561196e5780601f106119435761010080835404028352916020019161196e565b820191906000526020600020905b81548152906001019060200180831161195157829003601f168201915b5050505050905090565b6001600160a01b038516331480611994575061199485336108b6565b611a065760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f766564000000000000000000000000000000000000000000000060648201526084016109e0565b610f7a8585858585611f29565b8151835114611a8a5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d6174636800000000000000000000000000000000000000000000000060648201526084016109e0565b6001600160a01b038416611aee5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b60648201526084016109e0565b33611afd8187878787876120e6565b60005b8451811015611c29576000858281518110611b1d57611b1d612f7a565b602002602001015190506000858381518110611b3b57611b3b612f7a565b60209081029190910181015160008481526001835260408082206001600160a01b038e168352909352919091205490915081811015611bcf5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b60648201526084016109e0565b60008381526001602090815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290611c0e908490612e0c565b9250508190555050505080611c2290612f90565b9050611b00565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051611c79929190612fc5565b60405180910390a4611c8f818787878787612274565b505050505050565b801580611cc057506000818152600d602090815260408083206003015460049092529091205410155b15611cde57604051636aa2a93760e01b815260040160405180910390fd5b6000818152600e602052604090205460ff16611d0d57604051636aa2a93760e01b815260040160405180910390fd5b50565b6001600160a01b038416611d705760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084016109e0565b336000611d7c85612419565b90506000611d8985612419565b9050611d9a836000898585896120e6565b60008681526001602090815260408083206001600160a01b038b16845290915281208054879290611dcc908490612e0c565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4611e2c83600089898989612464565b50505050505050565b816001600160a01b0316836001600160a01b031603611ebc5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c66000000000000000000000000000000000000000000000060648201526084016109e0565b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416611f8d5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b60648201526084016109e0565b336000611f9985612419565b90506000611fa685612419565b9050611fb68389898585896120e6565b60008681526001602090815260408083206001600160a01b038c1684529091529020548581101561203c5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b60648201526084016109e0565b60008781526001602090815260408083206001600160a01b038d8116855292528083208985039055908a1682528120805488929061207b908490612e0c565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46120db848a8a8a8a8a612464565b505050505050505050565b6001600160a01b03851661216d5760005b835181101561216b5782818151811061211257612112612f7a565b60200260200101516004600086848151811061213057612130612f7a565b6020026020010151815260200190815260200160002060008282546121559190612e0c565b90915550612164905081612f90565b90506120f7565b505b6001600160a01b038416611c8f5760005b8351811015611e2c57600084828151811061219b5761219b612f7a565b6020026020010151905060008483815181106121b9576121b9612f7a565b60200260200101519050600060046000848152602001908152602001600020549050818110156122515760405162461bcd60e51b815260206004820152602860248201527f455243313135353a206275726e20616d6f756e74206578636565647320746f7460448201527f616c537570706c7900000000000000000000000000000000000000000000000060648201526084016109e0565b6000928352600460205260409092209103905561226d81612f90565b905061217e565b6001600160a01b0384163b15611c8f5760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906122b89089908990889088908890600401612fea565b6020604051808303816000875af19250505080156122f3575060408051601f3d908101601f191682019092526122f091810190613048565b60015b6123a8576122ff613065565b806308c379a0036123385750612313613081565b8061231e575061233a565b8060405162461bcd60e51b81526004016109e09190612717565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e74657200000000000000000000000060648201526084016109e0565b6001600160e01b0319811663bc197c8160e01b14611e2c5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b60648201526084016109e0565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061245357612453612f7a565b602090810291909101015292915050565b6001600160a01b0384163b15611c8f5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906124a8908990899088908890889060040161310b565b6020604051808303816000875af19250505080156124e3575060408051601f3d908101601f191682019092526124e091810190613048565b60015b6124ef576122ff613065565b6001600160e01b0319811663f23a6e6160e01b14611e2c5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b60648201526084016109e0565b82805461256c90612e24565b90600052602060002090601f01602090048101928261258e57600085556125d4565b82601f106125a757805160ff19168380011785556125d4565b828001600101855582156125d4579182015b828111156125d45782518255916020019190600101906125b9565b506125e09291506125e4565b5090565b5b808211156125e057600081556001016125e5565b6001600160a01b0381168114611d0d57600080fd5b6000806040838503121561262157600080fd5b823561262c816125f9565b946020939093013593505050565b6001600160e01b031981168114611d0d57600080fd5b60006020828403121561266257600080fd5b813561266d8161263a565b9392505050565b60006020828403121561268657600080fd5b5035919050565b60608101610a0e828460ff815116825260ff602082015116602083015260ff60408201511660408301525050565b60005b838110156126d65781810151838201526020016126be565b838111156126e5576000848401525b50505050565b600081518084526127038160208601602086016126bb565b601f01601f19169290920160200192915050565b60208152600061266d60208301846126eb565b6000806040838503121561273d57600080fd5b50508035926020909101359150565b60006020828403121561275e57600080fd5b813561266d816125f9565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff811182821017156127a5576127a5612769565b6040525050565b600082601f8301126127bd57600080fd5b813567ffffffffffffffff8111156127d7576127d7612769565b6040516127ee601f8301601f19166020018261277f565b81815284602083860101111561280357600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561283357600080fd5b82359150602083013567ffffffffffffffff81111561285157600080fd5b61285d858286016127ac565b9150509250929050565b803560ff8116811461287857600080fd5b919050565b60006060828403121561288f57600080fd5b6040516060810181811067ffffffffffffffff821117156128b2576128b2612769565b6040529050806128c183612867565b81526128cf60208401612867565b60208201526128e060408401612867565b60408201525092915050565b600080600080600060e0868803121561290457600080fd5b85359450602086013567ffffffffffffffff81111561292257600080fd5b61292e888289016127ac565b94505061293e876040880161287d565b925060a086013561294e816125f9565b9497939650919460c0013592915050565b600067ffffffffffffffff82111561297957612979612769565b5060051b60200190565b600082601f83011261299457600080fd5b813560206129a18261295f565b6040516129ae828261277f565b83815260059390931b85018201928281019150868411156129ce57600080fd5b8286015b848110156129e957803583529183019183016129d2565b509695505050505050565b600080600080600060a08688031215612a0c57600080fd5b8535612a17816125f9565b94506020860135612a27816125f9565b9350604086013567ffffffffffffffff80821115612a4457600080fd5b612a5089838a01612983565b94506060880135915080821115612a6657600080fd5b612a7289838a01612983565b93506080880135915080821115612a8857600080fd5b50612a95888289016127ac565b9150509295509295909350565b60008060408385031215612ab557600080fd5b823567ffffffffffffffff80821115612acd57600080fd5b818501915085601f830112612ae157600080fd5b81356020612aee8261295f565b604051612afb828261277f565b83815260059390931b8501820192828101915089841115612b1b57600080fd5b948201945b83861015612b42578535612b33816125f9565b82529482019490820190612b20565b96505086013592505080821115612b5857600080fd5b5061285d85828601612983565b600081518084526020808501945080840160005b83811015612b9557815187529582019590820190600101612b79565b509495945050505050565b60208152600061266d6020830184612b65565b60008060808385031215612bc657600080fd5b82359150612bd7846020850161287d565b90509250929050565b60008060408385031215612bf357600080fd5b823591506020830135612c05816125f9565b809150509250929050565b600080600080600085870360e0811215612c2957600080fd5b86359550602087013567ffffffffffffffff811115612c4757600080fd5b612c5389828a016127ac565b9550506060603f1982011215612c6857600080fd5b5060408601925060a086013561294e816125f9565b60008060408385031215612c9057600080fd5b8235612c9b816125f9565b915060208301358015158114612c0557600080fd5b600060208284031215612cc257600080fd5b813567ffffffffffffffff811115612cd957600080fd5b612ce5848285016127ac565b949350505050565b6000610100808352612d018184018a6126eb565b915050612d31602083018860ff815116825260ff602082015116602083015260ff60408201511660408301525050565b6001600160a01b03861660808301528460a08301528360c083015282151560e0830152979650505050505050565b60008060408385031215612d7257600080fd5b8235612d7d816125f9565b91506020830135612c05816125f9565b600080600080600060a08688031215612da557600080fd5b8535612db0816125f9565b94506020860135612dc0816125f9565b93506040860135925060608601359150608086013567ffffffffffffffff811115612dea57600080fd5b612a95888289016127ac565b634e487b7160e01b600052601160045260246000fd5b60008219821115612e1f57612e1f612df6565b500190565b600181811c90821680612e3857607f821691505b602082108103612e5857634e487b7160e01b600052602260045260246000fd5b50919050565b60008151612e708185602086016126bb565b9290920192915050565b600080845481600182811c915080831680612e9657607f831692505b60208084108203612eb557634e487b7160e01b86526022600452602486fd5b818015612ec95760018114612eda57612f07565b60ff19861689528489019650612f07565b60008b81526020902060005b86811015612eff5781548b820152908501908301612ee6565b505084890196505b505050505050612f178185612e5e565b95945050505050565b828152604060208201526000612ce560408301846126eb565b6000816000190483118215151615612f5357612f53612df6565b500290565b600082612f7557634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b600060018201612fa257612fa2612df6565b5060010190565b600060608284031215612fbb57600080fd5b61266d838361287d565b604081526000612fd86040830185612b65565b8281036020840152612f178185612b65565b60006001600160a01b03808816835280871660208401525060a0604083015261301660a0830186612b65565b82810360608401526130288186612b65565b9050828103608084015261303c81856126eb565b98975050505050505050565b60006020828403121561305a57600080fd5b815161266d8161263a565b600060033d111561307e5760046000803e5060005160e01c5b90565b600060443d101561308f5790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156130bf57505050505090565b82850191508151818111156130d75750505050505090565b843d87010160208285010111156130f15750505050505090565b6131006020828601018761277f565b509095945050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261314360a08301846126eb565b97965050505050505056fea164736f6c634300080d000a";

type PhiObjectConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PhiObjectConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PhiObject__factory extends ContractFactory {
  constructor(...args: PhiObjectConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _treasuryAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PhiObject> {
    return super.deploy(
      _treasuryAddress,
      overrides || {}
    ) as Promise<PhiObject>;
  }
  override getDeployTransaction(
    _treasuryAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_treasuryAddress, overrides || {});
  }
  override attach(address: string): PhiObject {
    return super.attach(address) as PhiObject;
  }
  override connect(signer: Signer): PhiObject__factory {
    return super.connect(signer) as PhiObject__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PhiObjectInterface {
    return new utils.Interface(_abi) as PhiObjectInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PhiObject {
    return new Contract(address, _abi, signerOrProvider) as PhiObject;
  }
}
