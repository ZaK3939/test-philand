/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  PhiObject,
  PhiObjectInterface,
} from "../../../contracts/object/PhiObject";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_treasuryAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ExistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTokenID",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSetTokenSize",
    type: "error",
  },
  {
    inputs: [],
    name: "NonExistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_newPrice",
        type: "uint256",
      },
    ],
    name: "ChangeTokenPrice",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
    ],
    name: "SetCreator",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newMaxClaimed",
        type: "uint256",
      },
    ],
    name: "SetMaxClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_royalityFee",
        type: "uint256",
      },
    ],
    name: "SetRoyalityFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct BaseObject.Size",
        name: "_size",
        type: "tuple",
      },
    ],
    name: "SetSize",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "SetTokenURI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address payable",
        name: "_treasuryAddress",
        type: "address",
      },
    ],
    name: "SetTreasuryAddress",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "baseuri",
        type: "string",
      },
    ],
    name: "SetbaseMetadataURI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allObjects",
    outputs: [
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxClaimed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "forSale",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseMetadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newPrice",
        type: "uint256",
      },
    ],
    name: "changeTokenPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "_size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxClaimed",
        type: "uint256",
      },
    ],
    name: "createObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "created",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseMetadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getCreator",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getMaxClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getPhiObject",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getSize",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "_size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxClaimed",
        type: "uint256",
      },
    ],
    name: "initObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetAddress",
        type: "address",
      },
    ],
    name: "owner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
    ],
    name: "removeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "royalityFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
    ],
    name: "setCreator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newMaxClaimed",
        type: "uint256",
      },
    ],
    name: "setMaxClaimed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_royalityFee",
        type: "uint256",
      },
    ],
    name: "setRoyalityFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "_size",
        type: "tuple",
      },
    ],
    name: "setSize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "setTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_treasuryAddress",
        type: "address",
      },
    ],
    name: "setTreasuryAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "baseuri",
        type: "string",
      },
    ],
    name: "setbaseMetadataURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasuryAddress",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002f8238038062002f828339810160408190526200003491620001ff565b6040805160208101909152600081526200004e8162000140565b5033600090815260046020908152604091829020805460ff1916600117905581518083019092526012808352714f6e636861696e205068694f626a6563747360701b92909101918252620000a59160059162000159565b50604080518082019091526003808252624f505360e81b6020909201918252620000d29160069162000159565b506040805180820190915260188082527f68747470733a2f2f7777772e617277656176652e6e65742f00000000000000006020909201918252620001199160079162000159565b50600980546001600160a01b0319166001600160a01b03929092169190911790556200026d565b80516200015590600290602084019062000159565b5050565b828054620001679062000231565b90600052602060002090601f0160209004810192826200018b5760008555620001d6565b82601f10620001a657805160ff1916838001178555620001d6565b82800160010185558215620001d6579182015b82811115620001d6578251825591602001919060010190620001b9565b50620001e4929150620001e8565b5090565b5b80821115620001e45760008155600101620001e9565b6000602082840312156200021257600080fd5b81516001600160a01b03811681146200022a57600080fd5b9392505050565b600181811c908216806200024657607f821691505b6020821081036200026757634e487b7160e01b600052602260045260246000fd5b50919050565b612d05806200027d6000396000f3fe6080604052600436106102695760003560e01c80636605bfda11610153578063a22cb465116100cb578063cbdac7101161007f578063e985e9c511610064578063e985e9c51461076a578063ea2fe3cb146107b3578063f242432a146107c857600080fd5b8063cbdac710146106ff578063d48e638a1461073157600080fd5b8063bd85b039116100b0578063bd85b0391461066a578063c457fb3714610697578063c5f956af146106c757600080fd5b8063a22cb4651461062a578063b6ed6da91461064a57600080fd5b806391686f53116101225780639733faa5116101075780639733faa5146105ba57806398f24682146105ea5780639e8540fa1461060a57600080fd5b806391686f531461058557806395d89b41146105a557600080fd5b80636605bfda146104e95780636606878214610509578063666e1b391461051c57806382cb6b721461055557600080fd5b80631cd307d4116101e65780634e1273f4116101b55780635b2bd79e1161019a5780635b2bd79e14610494578063604c7f80146104a957806362e8e8ac146104c957600080fd5b80634e1273f4146104385780634f558e791461046557600080fd5b80631cd307d4146103c25780632eb2c2d6146103e2578063326bb4ad146104025780633bb3a24d1461041857600080fd5b80630d09308e1161023d57806313af40351161022257806313af403514610362578063162094c414610382578063173825d9146103a257600080fd5b80630d09308e146103205780630e89341c1461034257600080fd5b8062fdd58e1461026e57806301ffc9a7146102a1578063023c23db146102d157806306fdde03146102fe575b600080fd5b34801561027a57600080fd5b5061028e6102893660046121ae565b6107e8565b6040519081526020015b60405180910390f35b3480156102ad57600080fd5b506102c16102bc3660046121f0565b610894565b6040519015158152602001610298565b3480156102dd57600080fd5b506102f16102ec366004612214565b6108e4565b604051610298919061222d565b34801561030a57600080fd5b5061031361097e565b60405161029891906122b7565b34801561032c57600080fd5b5061034061033b3660046122ca565b610a0c565b005b34801561034e57600080fd5b5061031361035d366004612214565b610a8f565b34801561036e57600080fd5b5061034061037d3660046122ec565b610af3565b34801561038e57600080fd5b5061034061039d3660046123c0565b610b70565b3480156103ae57600080fd5b506103406103bd3660046122ec565b610bf1565b3480156103ce57600080fd5b506103406103dd36600461248c565b610c6b565b3480156103ee57600080fd5b506103406103fd366004612594565b610d3f565b34801561040e57600080fd5b5061028e60085481565b34801561042457600080fd5b50610313610433366004612214565b610de1565b34801561044457600080fd5b50610458610453366004612642565b610e83565b6040516102989190612740565b34801561047157600080fd5b506102c1610480366004612214565b600090815260036020526040902054151590565b3480156104a057600080fd5b50610313610fc1565b3480156104b557600080fd5b506103406104c4366004612753565b610fce565b3480156104d557600080fd5b506103406104e43660046122ca565b61107e565b3480156104f557600080fd5b506103406105043660046122ec565b6110f9565b6103406105173660046121ae565b61118b565b34801561052857600080fd5b506102c16105373660046122ec565b6001600160a01b031660009081526004602052604090205460ff1690565b34801561056157600080fd5b506102c1610570366004612214565b600b6020526000908152604090205460ff1681565b34801561059157600080fd5b506103406105a0366004612780565b611222565b3480156105b157600080fd5b506103136112c1565b3480156105c657600080fd5b5061028e6105d5366004612214565b6000908152600a602052604090206003015490565b3480156105f657600080fd5b50610340610605366004612214565b6112ce565b34801561061657600080fd5b506103406106253660046127b0565b611333565b34801561063657600080fd5b5061034061064536600461281d565b6113cb565b34801561065657600080fd5b50610340610665366004612850565b6113d6565b34801561067657600080fd5b5061028e610685366004612214565b60009081526003602052604090205490565b3480156106a357600080fd5b5061028e6106b2366004612214565b6000908152600a602052604090206004015490565b3480156106d357600080fd5b506009546106e7906001600160a01b031681565b6040516001600160a01b039091168152602001610298565b34801561070b57600080fd5b5061071f61071a366004612214565b611449565b6040516102989695949392919061288d565b34801561073d57600080fd5b506106e761074c366004612214565b6000908152600a60205260409020600201546001600160a01b031690565b34801561077657600080fd5b506102c16107853660046128ff565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b3480156107bf57600080fd5b50610313611540565b3480156107d457600080fd5b506103406107e336600461292d565b6115d2565b60006001600160a01b03831661086b5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b14806108c557506001600160e01b031982166303a24d0760e21b145b8061088e57506301ffc9a760e01b6001600160e01b031983161461088e565b60408051606081018252600080825260208201819052918101919091526000828152600a602052604081206001015460ff1690036109355760405163a8e3a97360e01b815260040160405180910390fd5b506000908152600a6020908152604091829020825160608101845260019091015460ff808216835261010082048116938301939093526201000090049091169181019190915290565b6005805461098b90612996565b80601f01602080910402602001604051908101604052809291908181526020018280546109b790612996565b8015610a045780601f106109d957610100808354040283529160200191610a04565b820191906000526020600020905b8154815290600101906020018083116109e757829003601f168201915b505050505081565b3360009081526004602052604090205460ff16610a3c576040516349e27cff60e01b815260040160405180910390fd5b6000828152600a602090815260409182902060030183905581518481529081018390527fad41bb8f5516e8c7946d99bc48fd3ff0a07239c8ffcf2d103a0612b9ab44a60a91015b60405180910390a15050565b6000818152600b602052604090205460609060ff16610ac157604051636aa2a93760e01b815260040160405180910390fd5b6007610acc83610de1565b604051602001610add9291906129ec565b6040516020818303038152906040529050919050565b3360009081526004602052604090205460ff16610b23576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260046020526040808220805460ff191660011790555133917f619792ba07bec101df538ab277befa333e4cf1c0274f11de7be2a9507b9c9a0691a350565b3360009081526004602052604090205460ff16610ba0576040516349e27cff60e01b815260040160405180910390fd5b6000828152600a602090815260409091208251610bbf92840190612100565b507fd2d827dddfc9c9a02afc5fc68d3251684b36e213a7999ebd90a861f25df4077e8282604051610a83929190612a92565b3360009081526004602052604090205460ff16610c21576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260046020526040808220805460ff191690555133917fc191551a88c5609788f3532bd94c06479b61b0040eec65f9cd985428ffea643091a350565b3360009081526004602052604090205460ff16610c9b576040516349e27cff60e01b815260040160405180910390fd5b33610ca557600080fd5b60008581526003602052604090205415610cd2576040516387cf36d160e01b815260040160405180910390fd5b610cdc8585610b70565b610ce68584610fce565b610cf08583611222565b610cfa8582610a0c565b610d0585600061107e565b505050600091825250600a602090815260408083206005018054600160ff199182168117909255600b909352922080549091169091179055565b6001600160a01b038516331480610d5b5750610d5b8533610785565b610dcd5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f76656400000000000000000000000000006064820152608401610862565b610dda858585858561166d565b5050505050565b6000818152600a60205260409020805460609190610dfe90612996565b80601f0160208091040260200160405190810160405280929190818152602001828054610e2a90612996565b8015610e775780601f10610e4c57610100808354040283529160200191610e77565b820191906000526020600020905b815481529060010190602001808311610e5a57829003601f168201915b50505050509050919050565b60608151835114610efc5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d6174636800000000000000000000000000000000000000000000006064820152608401610862565b6000835167ffffffffffffffff811115610f1857610f18612309565b604051908082528060200260200182016040528015610f41578160200160208202803683370190505b50905060005b8451811015610fb957610f8c858281518110610f6557610f65612aab565b6020026020010151858381518110610f7f57610f7f612aab565b60200260200101516107e8565b828281518110610f9e57610f9e612aab565b6020908102919091010152610fb281612ad7565b9050610f47565b509392505050565b6007805461098b90612996565b3360009081526004602052604090205460ff16610ffe576040516349e27cff60e01b815260040160405180910390fd5b6000828152600a6020908152604091829020835160019091018054928501518486015160ff908116620100000262ff0000199282166101000261ffff1990961691909416179390931792909216179055517f83d2c962dbfe1e531221a6c10019100c9fb9eab5926b38eaf133722b6db2210590610a839084908490612af0565b3360009081526004602052604090205460ff166110ae576040516349e27cff60e01b815260040160405180910390fd5b6000828152600a602090815260409182902060040183905581518481529081018390527f415cf995faccaec43ce108f2713ebcdb2812b0e0689a8fa7dfdcabf78109ebbb9101610a83565b3360009081526004602052604090205460ff16611129576040516349e27cff60e01b815260040160405180910390fd5b6009805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527feee016301a2725a577c64816adf35ccf644d07439731069a31748ec3b9102c60906020015b60405180910390a150565b3360009081526004602052604090205460ff166111bb576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b0382166111ce57600080fd5b6000818152600a602052604090206005015460ff166111ec57600080fd5b6111f5816118ee565b61121e82826001604051806040016040528060048152602001630307830360e41b815250611966565b5050565b3360009081526004602052604090205460ff16611252576040516349e27cff60e01b815260040160405180910390fd5b6000828152600a6020908152604091829020600201805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0385169081179091558251858152918201527f02df56823aeec019d75f2c2396e2a9c68868b26ccc5a4cd9412b2a78f8602f739101610a83565b6006805461098b90612996565b3360009081526004602052604090205460ff166112fe576040516349e27cff60e01b815260040160405180910390fd5b60088190556040518181527f184fa17d2176718ea1955f61782c763ce239e39e790340793f227b0ba5db53e190602001611180565b3360009081526004602052604090205460ff16611363576040516349e27cff60e01b815260040160405180910390fd5b60008581526003602052604090205461138f57604051634a1850bf60e11b815260040160405180910390fd5b6113998582610a0c565b6113a38585610b70565b6113b6856104c436869003860186612b24565b6113c08583611222565b610dda85600061107e565b61121e338383611a76565b3360009081526004602052604090205460ff16611406576040516349e27cff60e01b815260040160405180910390fd5b8051611419906007906020840190612100565b507ffa52149a99a7016c4576d7bb33adefe5c4372aeded2a98a40f46d6ef33109c4d8160405161118091906122b7565b600a6020526000908152604090208054819061146490612996565b80601f016020809104026020016040519081016040528092919081815260200182805461149090612996565b80156114dd5780601f106114b2576101008083540402835291602001916114dd565b820191906000526020600020905b8154815290600101906020018083116114c057829003601f168201915b505060408051606081018252600187015460ff808216835261010082048116602084015262010000909104811692820192909252600287015460038801546004890154600590990154979892976001600160a01b03909216965094509092501686565b60606007805461154f90612996565b80601f016020809104026020016040519081016040528092919081815260200182805461157b90612996565b80156115c85780601f1061159d576101008083540402835291602001916115c8565b820191906000526020600020905b8154815290600101906020018083116115ab57829003601f168201915b5050505050905090565b6001600160a01b0385163314806115ee57506115ee8533610785565b6116605760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f76656400000000000000000000000000000000000000000000006064820152608401610862565b610dda8585858585611b6a565b81518351146116e45760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d617463680000000000000000000000000000000000000000000000006064820152608401610862565b6001600160a01b0384166117485760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610862565b33611757818787878787611d08565b60005b845181101561188057600085828151811061177757611777612aab565b60200260200101519050600085838151811061179557611795612aab565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156118285760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610862565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290611865908490612b40565b925050819055505050508061187990612ad7565b905061175a565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516118d0929190612b58565b60405180910390a46118e6818787878787611e14565b505050505050565b80158061191657506000818152600a6020908152604080832060039081015492529091205410155b1561193457604051636aa2a93760e01b815260040160405180910390fd5b6000818152600b602052604090205460ff1661196357604051636aa2a93760e01b815260040160405180910390fd5b50565b6001600160a01b0384166119c65760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610862565b336119e6816000876119d788611fb9565b6119e088611fb9565b87611d08565b6000848152602081815260408083206001600160a01b038916845290915281208054859290611a16908490612b40565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610dda81600087878787612004565b816001600160a01b0316836001600160a01b031603611afd5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c6600000000000000000000000000000000000000000000006064820152608401610862565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416611bce5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610862565b33611bde8187876119d788611fb9565b6000848152602081815260408083206001600160a01b038a16845290915290205483811015611c625760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610862565b6000858152602081815260408083206001600160a01b038b8116855292528083208785039055908816825281208054869290611c9f908490612b40565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4611cff828888888888612004565b50505050505050565b6001600160a01b038516611d8f5760005b8351811015611d8d57828181518110611d3457611d34612aab565b602002602001015160036000868481518110611d5257611d52612aab565b602002602001015181526020019081526020016000206000828254611d779190612b40565b90915550611d86905081612ad7565b9050611d19565b505b6001600160a01b0384166118e65760005b8351811015611cff57828181518110611dbb57611dbb612aab565b602002602001015160036000868481518110611dd957611dd9612aab565b602002602001015181526020019081526020016000206000828254611dfe9190612b7d565b90915550611e0d905081612ad7565b9050611da0565b6001600160a01b0384163b156118e65760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190611e589089908990889088908890600401612b94565b6020604051808303816000875af1925050508015611e93575060408051601f3d908101601f19168201909252611e9091810190612bf2565b60015b611f4857611e9f612c0f565b806308c379a003611ed85750611eb3612c2b565b80611ebe5750611eda565b8060405162461bcd60e51b815260040161086291906122b7565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e7465720000000000000000000000006064820152608401610862565b6001600160e01b0319811663bc197c8160e01b14611cff5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610862565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110611ff357611ff3612aab565b602090810291909101015292915050565b6001600160a01b0384163b156118e65760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906120489089908990889088908890600401612cb5565b6020604051808303816000875af1925050508015612083575060408051601f3d908101601f1916820190925261208091810190612bf2565b60015b61208f57611e9f612c0f565b6001600160e01b0319811663f23a6e6160e01b14611cff5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610862565b82805461210c90612996565b90600052602060002090601f01602090048101928261212e5760008555612174565b82601f1061214757805160ff1916838001178555612174565b82800160010185558215612174579182015b82811115612174578251825591602001919060010190612159565b50612180929150612184565b5090565b5b808211156121805760008155600101612185565b6001600160a01b038116811461196357600080fd5b600080604083850312156121c157600080fd5b82356121cc81612199565b946020939093013593505050565b6001600160e01b03198116811461196357600080fd5b60006020828403121561220257600080fd5b813561220d816121da565b9392505050565b60006020828403121561222657600080fd5b5035919050565b6060810161088e828460ff815116825260ff602082015116602083015260ff60408201511660408301525050565b60005b8381101561227657818101518382015260200161225e565b83811115612285576000848401525b50505050565b600081518084526122a381602086016020860161225b565b601f01601f19169290920160200192915050565b60208152600061220d602083018461228b565b600080604083850312156122dd57600080fd5b50508035926020909101359150565b6000602082840312156122fe57600080fd5b813561220d81612199565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff8111828210171561234557612345612309565b6040525050565b600082601f83011261235d57600080fd5b813567ffffffffffffffff81111561237757612377612309565b60405161238e601f8301601f19166020018261231f565b8181528460208386010111156123a357600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156123d357600080fd5b82359150602083013567ffffffffffffffff8111156123f157600080fd5b6123fd8582860161234c565b9150509250929050565b803560ff8116811461241857600080fd5b919050565b60006060828403121561242f57600080fd5b6040516060810181811067ffffffffffffffff8211171561245257612452612309565b60405290508061246183612407565b815261246f60208401612407565b602082015261248060408401612407565b60408201525092915050565b600080600080600060e086880312156124a457600080fd5b85359450602086013567ffffffffffffffff8111156124c257600080fd5b6124ce8882890161234c565b9450506124de876040880161241d565b925060a08601356124ee81612199565b9497939650919460c0013592915050565b600067ffffffffffffffff82111561251957612519612309565b5060051b60200190565b600082601f83011261253457600080fd5b81356020612541826124ff565b60405161254e828261231f565b83815260059390931b850182019282810191508684111561256e57600080fd5b8286015b848110156125895780358352918301918301612572565b509695505050505050565b600080600080600060a086880312156125ac57600080fd5b85356125b781612199565b945060208601356125c781612199565b9350604086013567ffffffffffffffff808211156125e457600080fd5b6125f089838a01612523565b9450606088013591508082111561260657600080fd5b61261289838a01612523565b9350608088013591508082111561262857600080fd5b506126358882890161234c565b9150509295509295909350565b6000806040838503121561265557600080fd5b823567ffffffffffffffff8082111561266d57600080fd5b818501915085601f83011261268157600080fd5b8135602061268e826124ff565b60405161269b828261231f565b83815260059390931b85018201928281019150898411156126bb57600080fd5b948201945b838610156126e25785356126d381612199565b825294820194908201906126c0565b965050860135925050808211156126f857600080fd5b506123fd85828601612523565b600081518084526020808501945080840160005b8381101561273557815187529582019590820190600101612719565b509495945050505050565b60208152600061220d6020830184612705565b6000806080838503121561276657600080fd5b82359150612777846020850161241d565b90509250929050565b6000806040838503121561279357600080fd5b8235915060208301356127a581612199565b809150509250929050565b600080600080600085870360e08112156127c957600080fd5b86359550602087013567ffffffffffffffff8111156127e757600080fd5b6127f389828a0161234c565b9550506060603f198201121561280857600080fd5b5060408601925060a08601356124ee81612199565b6000806040838503121561283057600080fd5b823561283b81612199565b9150602083013580151581146127a557600080fd5b60006020828403121561286257600080fd5b813567ffffffffffffffff81111561287957600080fd5b6128858482850161234c565b949350505050565b60006101008083526128a18184018a61228b565b9150506128d1602083018860ff815116825260ff602082015116602083015260ff60408201511660408301525050565b6001600160a01b03861660808301528460a08301528360c083015282151560e0830152979650505050505050565b6000806040838503121561291257600080fd5b823561291d81612199565b915060208301356127a581612199565b600080600080600060a0868803121561294557600080fd5b853561295081612199565b9450602086013561296081612199565b93506040860135925060608601359150608086013567ffffffffffffffff81111561298a57600080fd5b6126358882890161234c565b600181811c908216806129aa57607f821691505b6020821081036129ca57634e487b7160e01b600052602260045260246000fd5b50919050565b600081516129e281856020860161225b565b9290920192915050565b600080845481600182811c915080831680612a0857607f831692505b60208084108203612a2757634e487b7160e01b86526022600452602486fd5b818015612a3b5760018114612a4c57612a79565b60ff19861689528489019650612a79565b60008b81526020902060005b86811015612a715781548b820152908501908301612a58565b505084890196505b505050505050612a8981856129d0565b95945050505050565b828152604060208201526000612885604083018461228b565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201612ae957612ae9612ac1565b5060010190565b8281526080810161220d602083018460ff815116825260ff602082015116602083015260ff60408201511660408301525050565b600060608284031215612b3657600080fd5b61220d838361241d565b60008219821115612b5357612b53612ac1565b500190565b604081526000612b6b6040830185612705565b8281036020840152612a898185612705565b600082821015612b8f57612b8f612ac1565b500390565b60006001600160a01b03808816835280871660208401525060a06040830152612bc060a0830186612705565b8281036060840152612bd28186612705565b90508281036080840152612be6818561228b565b98975050505050505050565b600060208284031215612c0457600080fd5b815161220d816121da565b600060033d1115612c285760046000803e5060005160e01c5b90565b600060443d1015612c395790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715612c6957505050505090565b8285019150815181811115612c815750505050505090565b843d8701016020828501011115612c9b5750505050505090565b612caa6020828601018761231f565b509095945050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a06080830152612ced60a083018461228b565b97965050505050505056fea164736f6c634300080d000a";

type PhiObjectConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PhiObjectConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PhiObject__factory extends ContractFactory {
  constructor(...args: PhiObjectConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _treasuryAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PhiObject> {
    return super.deploy(
      _treasuryAddress,
      overrides || {}
    ) as Promise<PhiObject>;
  }
  override getDeployTransaction(
    _treasuryAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_treasuryAddress, overrides || {});
  }
  override attach(address: string): PhiObject {
    return super.attach(address) as PhiObject;
  }
  override connect(signer: Signer): PhiObject__factory {
    return super.connect(signer) as PhiObject__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PhiObjectInterface {
    return new utils.Interface(_abi) as PhiObjectInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PhiObject {
    return new Contract(address, _abi, signerOrProvider) as PhiObject;
  }
}
