/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  PhiObject,
  PhiObjectInterface,
} from "../../../contracts/object/PhiObject";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_treasuryAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ExistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTokenID",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSetTokenSize",
    type: "error",
  },
  {
    inputs: [],
    name: "NonExistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Sale",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allObjects",
    outputs: [
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxClaimed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "forSale",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseMetadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newPrice",
        type: "uint256",
      },
    ],
    name: "changeTokenPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "_size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxClaimed",
        type: "uint256",
      },
    ],
    name: "createObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "created",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseMetadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getCreator",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getMaxClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getPhiObject",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getSize",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "_size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxClaimed",
        type: "uint256",
      },
    ],
    name: "initObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mintBatchObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetAddress",
        type: "address",
      },
    ],
    name: "owner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
    ],
    name: "removeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "royalityFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
    ],
    name: "setCreator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newMaxClaimed",
        type: "uint256",
      },
    ],
    name: "setMaxClaimed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_royalityFee",
        type: "uint256",
      },
    ],
    name: "setRoyalityFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "_size",
        type: "tuple",
      },
    ],
    name: "setSize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "setTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_treasuryAddress",
        type: "address",
      },
    ],
    name: "setTreasuryAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "baseuri",
        type: "string",
      },
    ],
    name: "setbaseMetadataURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasuryAddress",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002f4c38038062002f4c8339810160408190526200003491620001ff565b6040805160208101909152600081526200004e8162000140565b5033600090815260046020908152604091829020805460ff1916600117905581518083019092526012808352714f6e636861696e205068694f626a6563747360701b92909101918252620000a59160059162000159565b50604080518082019091526003808252624f505360e81b6020909201918252620000d29160069162000159565b506040805180820190915260188082527f68747470733a2f2f7777772e617277656176652e6e65742f00000000000000006020909201918252620001199160079162000159565b50600980546001600160a01b0319166001600160a01b03929092169190911790556200026d565b80516200015590600290602084019062000159565b5050565b828054620001679062000231565b90600052602060002090601f0160209004810192826200018b5760008555620001d6565b82601f10620001a657805160ff1916838001178555620001d6565b82800160010185558215620001d6579182015b82811115620001d6578251825591602001919060010190620001b9565b50620001e4929150620001e8565b5090565b5b80821115620001e45760008155600101620001e9565b6000602082840312156200021257600080fd5b81516001600160a01b03811681146200022a57600080fd5b9392505050565b600181811c908216806200024657607f821691505b6020821081036200026757634e487b7160e01b600052602260045260246000fd5b50919050565b612ccf806200027d6000396000f3fe6080604052600436106102695760003560e01c80636605bfda116101535780639e8540fa116100cb578063cbdac7101161007f578063e985e9c511610064578063e985e9c51461075a578063ea2fe3cb146107a3578063f242432a146107b857600080fd5b8063cbdac710146106ef578063d48e638a1461072157600080fd5b8063b6ed6da9116100b0578063b6ed6da91461066a578063bd85b0391461068a578063c5f956af146106b757600080fd5b80639e8540fa1461062a578063a22cb4651461064a57600080fd5b806382cb6b721161012257806395d89b411161010757806395d89b41146105c55780639733faa5146105da57806398f246821461060a57600080fd5b806382cb6b721461057557806391686f53146105a557600080fd5b80636605bfda146104e95780636606878214610509578063666e1b391461051c578063697436d91461055557600080fd5b80631cd307d4116101e65780634e1273f4116101b55780635b2bd79e1161019a5780635b2bd79e14610494578063604c7f80146104a957806362e8e8ac146104c957600080fd5b80634e1273f4146104385780634f558e791461046557600080fd5b80631cd307d4146103c25780632eb2c2d6146103e2578063326bb4ad146104025780633bb3a24d1461041857600080fd5b80630d09308e1161023d57806313af40351161022257806313af403514610362578063162094c414610382578063173825d9146103a257600080fd5b80630d09308e146103205780630e89341c1461034257600080fd5b8062fdd58e1461026e57806301ffc9a7146102a1578063023c23db146102d157806306fdde03146102fe575b600080fd5b34801561027a57600080fd5b5061028e6102893660046121b8565b6107d8565b6040519081526020015b60405180910390f35b3480156102ad57600080fd5b506102c16102bc3660046121fa565b610884565b6040519015158152602001610298565b3480156102dd57600080fd5b506102f16102ec36600461221e565b6108d4565b6040516102989190612237565b34801561030a57600080fd5b5061031361096e565b60405161029891906122bd565b34801561032c57600080fd5b5061034061033b3660046122d0565b6109fc565b005b34801561034e57600080fd5b5061031361035d36600461221e565b610a41565b34801561036e57600080fd5b5061034061037d3660046122f2565b610aa2565b34801561038e57600080fd5b5061034061039d3660046123c6565b610b1f565b3480156103ae57600080fd5b506103406103bd3660046122f2565b610b73565b3480156103ce57600080fd5b506103406103dd366004612425565b610bed565b3480156103ee57600080fd5b506103406103fd36600461252d565b610cc1565b34801561040e57600080fd5b5061028e60085481565b34801561042457600080fd5b5061031361043336600461221e565b610d63565b34801561044457600080fd5b506104586104533660046125db565b610e05565b60405161029891906126d9565b34801561047157600080fd5b506102c161048036600461221e565b600090815260036020526040902054151590565b3480156104a057600080fd5b50610313610f43565b3480156104b557600080fd5b506103406104c43660046126ec565b610f50565b3480156104d557600080fd5b506103406104e43660046122d0565b610fa3565b3480156104f557600080fd5b506103406105043660046122f2565b610ff2565b6103406105173660046121b8565b611051565b34801561052857600080fd5b506102c16105373660046122f2565b6001600160a01b031660009081526004602052604090205460ff1690565b34801561056157600080fd5b50610340610570366004612719565b6110ca565b34801561058157600080fd5b506102c161059036600461221e565b600b6020526000908152604090205460ff1681565b3480156105b157600080fd5b506103406105c03660046127b4565b611106565b3480156105d157600080fd5b50610313611174565b3480156105e657600080fd5b5061028e6105f536600461221e565b6000908152600a602052604090206003015490565b34801561061657600080fd5b5061034061062536600461221e565b611181565b34801561063657600080fd5b50610340610645366004612425565b6111b6565b34801561065657600080fd5b506103406106653660046127e4565b611245565b34801561067657600080fd5b50610340610685366004612817565b611250565b34801561069657600080fd5b5061028e6106a536600461221e565b60009081526003602052604090205490565b3480156106c357600080fd5b506009546106d7906001600160a01b031681565b6040516001600160a01b039091168152602001610298565b3480156106fb57600080fd5b5061070f61070a36600461221e565b611293565b60405161029896959493929190612854565b34801561072d57600080fd5b506106d761073c36600461221e565b6000908152600a60205260409020600201546001600160a01b031690565b34801561076657600080fd5b506102c16107753660046128c6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b3480156107af57600080fd5b5061031361138a565b3480156107c457600080fd5b506103406107d33660046128f4565b61141c565b60006001600160a01b03831661085b5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b14806108b557506001600160e01b031982166303a24d0760e21b145b8061087e57506301ffc9a760e01b6001600160e01b031983161461087e565b60408051606081018252600080825260208201819052918101919091526000828152600a602052604081206001015460ff1690036109255760405163a8e3a97360e01b815260040160405180910390fd5b506000908152600a6020908152604091829020825160608101845260019091015460ff808216835261010082048116938301939093526201000090049091169181019190915290565b6005805461097b9061295d565b80601f01602080910402602001604051908101604052809291908181526020018280546109a79061295d565b80156109f45780601f106109c9576101008083540402835291602001916109f4565b820191906000526020600020905b8154815290600101906020018083116109d757829003601f168201915b505050505081565b3360009081526004602052604090205460ff16610a2c576040516349e27cff60e01b815260040160405180910390fd5b6000918252600a602052604090912060030155565b600081815260036020526040902054606090610a7057604051634a1850bf60e11b815260040160405180910390fd5b6007610a7b83610d63565b604051602001610a8c9291906129ad565b6040516020818303038152906040529050919050565b3360009081526004602052604090205460ff16610ad2576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260046020526040808220805460ff191660011790555133917f619792ba07bec101df538ab277befa333e4cf1c0274f11de7be2a9507b9c9a0691a350565b3360009081526004602052604090205460ff16610b4f576040516349e27cff60e01b815260040160405180910390fd5b6000828152600a602090815260409091208251610b6e9284019061210a565b505050565b3360009081526004602052604090205460ff16610ba3576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260046020526040808220805460ff191690555133917fc191551a88c5609788f3532bd94c06479b61b0040eec65f9cd985428ffea643091a350565b3360009081526004602052604090205460ff16610c1d576040516349e27cff60e01b815260040160405180910390fd5b33610c2757600080fd5b60008581526003602052604090205415610c54576040516387cf36d160e01b815260040160405180910390fd5b610c5e8585610b1f565b610c688584610f50565b610c728583611106565b610c7c85826109fc565b610c87856000610fa3565b505050600091825250600a602090815260408083206005018054600160ff199182168117909255600b909352922080549091169091179055565b6001600160a01b038516331480610cdd5750610cdd8533610775565b610d4f5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f76656400000000000000000000000000006064820152608401610852565b610d5c85858585856114b7565b5050505050565b6000818152600a60205260409020805460609190610d809061295d565b80601f0160208091040260200160405190810160405280929190818152602001828054610dac9061295d565b8015610df95780601f10610dce57610100808354040283529160200191610df9565b820191906000526020600020905b815481529060010190602001808311610ddc57829003601f168201915b50505050509050919050565b60608151835114610e7e5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d6174636800000000000000000000000000000000000000000000006064820152608401610852565b6000835167ffffffffffffffff811115610e9a57610e9a61230f565b604051908082528060200260200182016040528015610ec3578160200160208202803683370190505b50905060005b8451811015610f3b57610f0e858281518110610ee757610ee7612a53565b6020026020010151858381518110610f0157610f01612a53565b60200260200101516107d8565b828281518110610f2057610f20612a53565b6020908102919091010152610f3481612a7f565b9050610ec9565b509392505050565b6007805461097b9061295d565b3360009081526004602052604090205460ff16610f80576040516349e27cff60e01b815260040160405180910390fd5b6000828152600a602052604090208190600101610f9d8282612aab565b50505050565b3360009081526004602052604090205460ff16610fd3576040516349e27cff60e01b815260040160405180910390fd5b33610fdd57600080fd5b6000918252600a602052604090912060040155565b3360009081526004602052604090205460ff16611022576040516349e27cff60e01b815260040160405180910390fd5b6009805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b3360009081526004602052604090205460ff16611081576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b03821661109457600080fd5b61109d81611723565b6110c682826001604051806040016040528060048152602001630307830360e41b81525061179b565b5050565b3360009081526004602052604090205460ff166110fa576040516349e27cff60e01b815260040160405180910390fd5b610f9d848484846118ab565b3360009081526004602052604090205460ff16611136576040516349e27cff60e01b815260040160405180910390fd5b6000918252600a6020526040909120600201805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03909216919091179055565b6006805461097b9061295d565b3360009081526004602052604090205460ff166111b1576040516349e27cff60e01b815260040160405180910390fd5b600855565b3360009081526004602052604090205460ff166111e6576040516349e27cff60e01b815260040160405180910390fd5b60008581526003602052604090205461121257604051634a1850bf60e11b815260040160405180910390fd5b61121c85826109fc565b6112268585610b1f565b6112308584610f50565b61123a8583611106565b610d5c856000610fa3565b6110c6338383611a80565b3360009081526004602052604090205460ff16611280576040516349e27cff60e01b815260040160405180910390fd5b80516110c690600790602084019061210a565b600a602052600090815260409020805481906112ae9061295d565b80601f01602080910402602001604051908101604052809291908181526020018280546112da9061295d565b80156113275780601f106112fc57610100808354040283529160200191611327565b820191906000526020600020905b81548152906001019060200180831161130a57829003601f168201915b505060408051606081018252600187015460ff808216835261010082048116602084015262010000909104811692820192909252600287015460038801546004890154600590990154979892976001600160a01b03909216965094509092501686565b6060600780546113999061295d565b80601f01602080910402602001604051908101604052809291908181526020018280546113c59061295d565b80156114125780601f106113e757610100808354040283529160200191611412565b820191906000526020600020905b8154815290600101906020018083116113f557829003601f168201915b5050505050905090565b6001600160a01b03851633148061143857506114388533610775565b6114aa5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f76656400000000000000000000000000000000000000000000006064820152608401610852565b610d5c8585858585611b74565b81518351146115195760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610852565b6001600160a01b03841661157d5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610852565b3361158c818787878787611d12565b60005b84518110156116b55760008582815181106115ac576115ac612a53565b6020026020010151905060008583815181106115ca576115ca612a53565b602090810291909101810151600084815280835260408082206001600160a01b038e16835290935291909120549091508181101561165d5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610852565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b1682528120805484929061169a908490612b0a565b92505081905550505050806116ae90612a7f565b905061158f565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051611705929190612b22565b60405180910390a461171b818787878787611e1e565b505050505050565b80158061174b57506000818152600a6020908152604080832060039081015492529091205410155b1561176957604051636aa2a93760e01b815260040160405180910390fd5b6000818152600b602052604090205460ff1661179857604051636aa2a93760e01b815260040160405180910390fd5b50565b6001600160a01b0384166117fb5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610852565b3361181b8160008761180c88611fc3565b61181588611fc3565b87611d12565b6000848152602081815260408083206001600160a01b03891684529091528120805485929061184b908490612b0a565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610d5c8160008787878761200e565b6001600160a01b03841661190b5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610852565b815183511461196d5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610852565b3361197d81600087878787611d12565b60005b8451811015611a185783818151811061199b5761199b612a53565b60200260200101516000808784815181106119b8576119b8612a53565b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b031681526020019081526020016000206000828254611a009190612b0a565b90915550819050611a1081612a7f565b915050611980565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051611a69929190612b22565b60405180910390a4610d5c81600087878787611e1e565b816001600160a01b0316836001600160a01b031603611b075760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c6600000000000000000000000000000000000000000000006064820152608401610852565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416611bd85760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610852565b33611be881878761180c88611fc3565b6000848152602081815260408083206001600160a01b038a16845290915290205483811015611c6c5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610852565b6000858152602081815260408083206001600160a01b038b8116855292528083208785039055908816825281208054869290611ca9908490612b0a565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4611d0982888888888861200e565b50505050505050565b6001600160a01b038516611d995760005b8351811015611d9757828181518110611d3e57611d3e612a53565b602002602001015160036000868481518110611d5c57611d5c612a53565b602002602001015181526020019081526020016000206000828254611d819190612b0a565b90915550611d90905081612a7f565b9050611d23565b505b6001600160a01b03841661171b5760005b8351811015611d0957828181518110611dc557611dc5612a53565b602002602001015160036000868481518110611de357611de3612a53565b602002602001015181526020019081526020016000206000828254611e089190612b47565b90915550611e17905081612a7f565b9050611daa565b6001600160a01b0384163b1561171b5760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190611e629089908990889088908890600401612b5e565b6020604051808303816000875af1925050508015611e9d575060408051601f3d908101601f19168201909252611e9a91810190612bbc565b60015b611f5257611ea9612bd9565b806308c379a003611ee25750611ebd612bf5565b80611ec85750611ee4565b8060405162461bcd60e51b815260040161085291906122bd565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e7465720000000000000000000000006064820152608401610852565b6001600160e01b0319811663bc197c8160e01b14611d095760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610852565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110611ffd57611ffd612a53565b602090810291909101015292915050565b6001600160a01b0384163b1561171b5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906120529089908990889088908890600401612c7f565b6020604051808303816000875af192505050801561208d575060408051601f3d908101601f1916820190925261208a91810190612bbc565b60015b61209957611ea9612bd9565b6001600160e01b0319811663f23a6e6160e01b14611d095760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610852565b8280546121169061295d565b90600052602060002090601f016020900481019282612138576000855561217e565b82601f1061215157805160ff191683800117855561217e565b8280016001018555821561217e579182015b8281111561217e578251825591602001919060010190612163565b5061218a92915061218e565b5090565b5b8082111561218a576000815560010161218f565b6001600160a01b038116811461179857600080fd5b600080604083850312156121cb57600080fd5b82356121d6816121a3565b946020939093013593505050565b6001600160e01b03198116811461179857600080fd5b60006020828403121561220c57600080fd5b8135612217816121e4565b9392505050565b60006020828403121561223057600080fd5b5035919050565b6060810161087e828460ff815116825260ff602082015116602083015260ff60408201511660408301525050565b60005b83811015612280578181015183820152602001612268565b83811115610f9d5750506000910152565b600081518084526122a9816020860160208601612265565b601f01601f19169290920160200192915050565b6020815260006122176020830184612291565b600080604083850312156122e357600080fd5b50508035926020909101359150565b60006020828403121561230457600080fd5b8135612217816121a3565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff8111828210171561234b5761234b61230f565b6040525050565b600082601f83011261236357600080fd5b813567ffffffffffffffff81111561237d5761237d61230f565b604051612394601f8301601f191660200182612325565b8181528460208386010111156123a957600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156123d957600080fd5b82359150602083013567ffffffffffffffff8111156123f757600080fd5b61240385828601612352565b9150509250929050565b60006060828403121561241f57600080fd5b50919050565b600080600080600060e0868803121561243d57600080fd5b85359450602086013567ffffffffffffffff81111561245b57600080fd5b61246788828901612352565b945050612477876040880161240d565b925060a0860135612487816121a3565b9497939650919460c0013592915050565b600067ffffffffffffffff8211156124b2576124b261230f565b5060051b60200190565b600082601f8301126124cd57600080fd5b813560206124da82612498565b6040516124e78282612325565b83815260059390931b850182019282810191508684111561250757600080fd5b8286015b84811015612522578035835291830191830161250b565b509695505050505050565b600080600080600060a0868803121561254557600080fd5b8535612550816121a3565b94506020860135612560816121a3565b9350604086013567ffffffffffffffff8082111561257d57600080fd5b61258989838a016124bc565b9450606088013591508082111561259f57600080fd5b6125ab89838a016124bc565b935060808801359150808211156125c157600080fd5b506125ce88828901612352565b9150509295509295909350565b600080604083850312156125ee57600080fd5b823567ffffffffffffffff8082111561260657600080fd5b818501915085601f83011261261a57600080fd5b8135602061262782612498565b6040516126348282612325565b83815260059390931b850182019282810191508984111561265457600080fd5b948201945b8386101561267b57853561266c816121a3565b82529482019490820190612659565b9650508601359250508082111561269157600080fd5b50612403858286016124bc565b600081518084526020808501945080840160005b838110156126ce578151875295820195908201906001016126b2565b509495945050505050565b602081526000612217602083018461269e565b600080608083850312156126ff57600080fd5b82359150612710846020850161240d565b90509250929050565b6000806000806080858703121561272f57600080fd5b843561273a816121a3565b9350602085013567ffffffffffffffff8082111561275757600080fd5b612763888389016124bc565b9450604087013591508082111561277957600080fd5b612785888389016124bc565b9350606087013591508082111561279b57600080fd5b506127a887828801612352565b91505092959194509250565b600080604083850312156127c757600080fd5b8235915060208301356127d9816121a3565b809150509250929050565b600080604083850312156127f757600080fd5b8235612802816121a3565b9150602083013580151581146127d957600080fd5b60006020828403121561282957600080fd5b813567ffffffffffffffff81111561284057600080fd5b61284c84828501612352565b949350505050565b60006101008083526128688184018a612291565b915050612898602083018860ff815116825260ff602082015116602083015260ff60408201511660408301525050565b6001600160a01b03861660808301528460a08301528360c083015282151560e0830152979650505050505050565b600080604083850312156128d957600080fd5b82356128e4816121a3565b915060208301356127d9816121a3565b600080600080600060a0868803121561290c57600080fd5b8535612917816121a3565b94506020860135612927816121a3565b93506040860135925060608601359150608086013567ffffffffffffffff81111561295157600080fd5b6125ce88828901612352565b600181811c9082168061297157607f821691505b60208210810361241f57634e487b7160e01b600052602260045260246000fd5b600081516129a3818560208601612265565b9290920192915050565b600080845481600182811c9150808316806129c957607f831692505b602080841082036129e857634e487b7160e01b86526022600452602486fd5b8180156129fc5760018114612a0d57612a3a565b60ff19861689528489019650612a3a565b60008b81526020902060005b86811015612a325781548b820152908501908301612a19565b505084890196505b505050505050612a4a8185612991565b95945050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201612a9157612a91612a69565b5060010190565b6000813560ff8116811461087e57600080fd5b60ff612ab683612a98565b1681548160ff19821617835561ff00612ad160208601612a98565b60081b16808361ffff1984161717845562ff0000612af160408701612a98565b60101b168362ffffff1984161782171784555050505050565b60008219821115612b1d57612b1d612a69565b500190565b604081526000612b35604083018561269e565b8281036020840152612a4a818561269e565b600082821015612b5957612b59612a69565b500390565b60006001600160a01b03808816835280871660208401525060a06040830152612b8a60a083018661269e565b8281036060840152612b9c818661269e565b90508281036080840152612bb08185612291565b98975050505050505050565b600060208284031215612bce57600080fd5b8151612217816121e4565b600060033d1115612bf25760046000803e5060005160e01c5b90565b600060443d1015612c035790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715612c3357505050505090565b8285019150815181811115612c4b5750505050505090565b843d8701016020828501011115612c655750505050505090565b612c7460208286010187612325565b509095945050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a06080830152612cb760a0830184612291565b97965050505050505056fea164736f6c634300080d000a";

type PhiObjectConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PhiObjectConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PhiObject__factory extends ContractFactory {
  constructor(...args: PhiObjectConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _treasuryAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PhiObject> {
    return super.deploy(
      _treasuryAddress,
      overrides || {}
    ) as Promise<PhiObject>;
  }
  override getDeployTransaction(
    _treasuryAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_treasuryAddress, overrides || {});
  }
  override attach(address: string): PhiObject {
    return super.attach(address) as PhiObject;
  }
  override connect(signer: Signer): PhiObject__factory {
    return super.connect(signer) as PhiObject__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PhiObjectInterface {
    return new utils.Interface(_abi) as PhiObjectInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PhiObject {
    return new Contract(address, _abi, signerOrProvider) as PhiObject;
  }
}
