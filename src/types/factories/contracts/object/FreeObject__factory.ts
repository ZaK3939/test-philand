/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  FreeObject,
  FreeObjectInterface,
} from "../../../contracts/object/FreeObject";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_treasuryAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ExistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTokenID",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSetTokenSize",
    type: "error",
  },
  {
    inputs: [],
    name: "NonExistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Sale",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allObjects",
    outputs: [
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxClaimed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "forSale",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseMetadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newPrice",
        type: "uint256",
      },
    ],
    name: "changeTokenPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "_size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
    ],
    name: "createObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "created",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseMetadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getCreator",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getFreeObject",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getMaxClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getSize",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "_size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
    ],
    name: "initObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mintBatchObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetAddress",
        type: "address",
      },
    ],
    name: "owner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
    ],
    name: "removeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "royalityFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
    ],
    name: "setCreator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newMaxClaimed",
        type: "uint256",
      },
    ],
    name: "setMaxClaimed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_royalityFee",
        type: "uint256",
      },
    ],
    name: "setRoyalityFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "_size",
        type: "tuple",
      },
    ],
    name: "setSize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "setTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_treasuryAddress",
        type: "address",
      },
    ],
    name: "setTreasuryAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "baseuri",
        type: "string",
      },
    ],
    name: "setbaseMetadataURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasuryAddress",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002ecc38038062002ecc8339810160408190526200003491620001f8565b6040805160208101909152600081526200004e8162000139565b5033600090815260046020908152604091829020805460ff191660011790558151808301909252600b8083526a467265654f626a6563747360a81b929091019182526200009e9160059162000152565b5060408051808201909152600380825262464f5360e81b6020909201918252620000cb9160069162000152565b506040805180820190915260188082527f68747470733a2f2f7777772e617277656176652e6e65742f00000000000000006020909201918252620001129160079162000152565b50600980546001600160a01b0319166001600160a01b039290921691909117905562000266565b80516200014e90600290602084019062000152565b5050565b82805462000160906200022a565b90600052602060002090601f016020900481019282620001845760008555620001cf565b82601f106200019f57805160ff1916838001178555620001cf565b82800160010185558215620001cf579182015b82811115620001cf578251825591602001919060010190620001b2565b50620001dd929150620001e1565b5090565b5b80821115620001dd5760008155600101620001e2565b6000602082840312156200020b57600080fd5b81516001600160a01b03811681146200022357600080fd5b9392505050565b600181811c908216806200023f57607f821691505b6020821081036200026057634e487b7160e01b600052602260045260246000fd5b50919050565b612c5680620002766000396000f3fe6080604052600436106102695760003560e01c80636605bfda11610153578063ab231c32116100cb578063cf467b431161007f578063e985e9c511610064578063e985e9c51461075a578063ea2fe3cb146107a3578063f242432a146107b857600080fd5b8063cf467b4314610701578063d48e638a1461072157600080fd5b8063bd85b039116100b0578063bd85b0391461066a578063c5f956af14610697578063cbdac710146106cf57600080fd5b8063ab231c3214610637578063b6ed6da91461064a57600080fd5b806391686f53116101225780639733faa5116101075780639733faa5146105c757806398f24682146105f7578063a22cb4651461061757600080fd5b806391686f531461059257806395d89b41146105b257600080fd5b80636605bfda146104e9578063666e1b3914610509578063697436d91461054257806382cb6b721461056257600080fd5b80632eb2c2d6116101e65780634e1273f4116101b55780635b2bd79e1161019a5780635b2bd79e14610494578063604c7f80146104a957806362e8e8ac146104c957600080fd5b80634e1273f4146104385780634f558e791461046557600080fd5b80632eb2c2d6146103c2578063326bb4ad146103e25780633bb3a24d146103f85780633e545f021461041857600080fd5b80630d09308e1161023d57806313af40351161022257806313af403514610362578063162094c414610382578063173825d9146103a257600080fd5b80630d09308e146103205780630e89341c1461034257600080fd5b8062fdd58e1461026e57806301ffc9a7146102a1578063023c23db146102d157806306fdde03146102fe575b600080fd5b34801561027a57600080fd5b5061028e610289366004612147565b6107d8565b6040519081526020015b60405180910390f35b3480156102ad57600080fd5b506102c16102bc366004612189565b610884565b6040519015158152602001610298565b3480156102dd57600080fd5b506102f16102ec3660046121ad565b6108d4565b60405161029891906121c6565b34801561030a57600080fd5b5061031361096e565b604051610298919061224c565b34801561032c57600080fd5b5061034061033b36600461225f565b6109fc565b005b34801561034e57600080fd5b5061031361035d3660046121ad565b610a41565b34801561036e57600080fd5b5061034061037d366004612281565b610aa2565b34801561038e57600080fd5b5061034061039d366004612355565b610b1f565b3480156103ae57600080fd5b506103406103bd366004612281565b610b73565b3480156103ce57600080fd5b506103406103dd366004612431565b610bed565b3480156103ee57600080fd5b5061028e60085481565b34801561040457600080fd5b506103136104133660046121ad565b610c8f565b34801561042457600080fd5b506103406104333660046124f7565b610d31565b34801561044457600080fd5b50610458610453366004612562565b610dfa565b6040516102989190612660565b34801561047157600080fd5b506102c16104803660046121ad565b600090815260036020526040902054151590565b3480156104a057600080fd5b50610313610f38565b3480156104b557600080fd5b506103406104c4366004612673565b610f45565b3480156104d557600080fd5b506103406104e436600461225f565b610f98565b3480156104f557600080fd5b50610340610504366004612281565b610fe7565b34801561051557600080fd5b506102c1610524366004612281565b6001600160a01b031660009081526004602052604090205460ff1690565b34801561054e57600080fd5b5061034061055d3660046126a0565b611046565b34801561056e57600080fd5b506102c161057d3660046121ad565b600b6020526000908152604090205460ff1681565b34801561059e57600080fd5b506103406105ad36600461273b565b611082565b3480156105be57600080fd5b506103136110f0565b3480156105d357600080fd5b5061028e6105e23660046121ad565b6000908152600a602052604090206003015490565b34801561060357600080fd5b506103406106123660046121ad565b6110fd565b34801561062357600080fd5b5061034061063236600461276b565b611132565b6103406106453660046121ad565b611141565b34801561065657600080fd5b5061034061066536600461279e565b6111a6565b34801561067657600080fd5b5061028e6106853660046121ad565b60009081526003602052604090205490565b3480156106a357600080fd5b506009546106b7906001600160a01b031681565b6040516001600160a01b039091168152602001610298565b3480156106db57600080fd5b506106ef6106ea3660046121ad565b6111e9565b604051610298969594939291906127db565b34801561070d57600080fd5b5061034061071c3660046124f7565b6112e0565b34801561072d57600080fd5b506106b761073c3660046121ad565b6000908152600a60205260409020600201546001600160a01b031690565b34801561076657600080fd5b506102c161077536600461284d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b3480156107af57600080fd5b50610313611391565b3480156107c457600080fd5b506103406107d336600461287b565b611423565b60006001600160a01b03831661085b5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b14806108b557506001600160e01b031982166303a24d0760e21b145b8061087e57506301ffc9a760e01b6001600160e01b031983161461087e565b60408051606081018252600080825260208201819052918101919091526000828152600a602052604081206001015460ff1690036109255760405163a8e3a97360e01b815260040160405180910390fd5b506000908152600a6020908152604091829020825160608101845260019091015460ff808216835261010082048116938301939093526201000090049091169181019190915290565b6005805461097b906128e4565b80601f01602080910402602001604051908101604052809291908181526020018280546109a7906128e4565b80156109f45780601f106109c9576101008083540402835291602001916109f4565b820191906000526020600020905b8154815290600101906020018083116109d757829003601f168201915b505050505081565b3360009081526004602052604090205460ff16610a2c576040516349e27cff60e01b815260040160405180910390fd5b6000918252600a602052604090912060030155565b600081815260036020526040902054606090610a7057604051634a1850bf60e11b815260040160405180910390fd5b6007610a7b83610c8f565b604051602001610a8c929190612934565b6040516020818303038152906040529050919050565b3360009081526004602052604090205460ff16610ad2576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260046020526040808220805460ff191660011790555133917f619792ba07bec101df538ab277befa333e4cf1c0274f11de7be2a9507b9c9a0691a350565b3360009081526004602052604090205460ff16610b4f576040516349e27cff60e01b815260040160405180910390fd5b6000828152600a602090815260409091208251610b6e92840190612099565b505050565b3360009081526004602052604090205460ff16610ba3576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260046020526040808220805460ff191690555133917fc191551a88c5609788f3532bd94c06479b61b0040eec65f9cd985428ffea643091a350565b6001600160a01b038516331480610c095750610c098533610775565b610c7b5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f76656400000000000000000000000000006064820152608401610852565b610c8885858585856114be565b5050505050565b6000818152600a60205260409020805460609190610cac906128e4565b80601f0160208091040260200160405190810160405280929190818152602001828054610cd8906128e4565b8015610d255780601f10610cfa57610100808354040283529160200191610d25565b820191906000526020600020905b815481529060010190602001808311610d0857829003601f168201915b50505050509050919050565b3360009081526004602052604090205460ff16610d61576040516349e27cff60e01b815260040160405180910390fd5b33610d6b57600080fd5b60008481526003602052604090205415610d98576040516387cf36d160e01b815260040160405180910390fd5b610da28484610b1f565b610dac8483610f45565b610db68482611082565b610dc1846000610f98565b5050506000908152600a602090815260408083206005018054600160ff199182168117909255600b909352922080549091169091179055565b60608151835114610e735760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d6174636800000000000000000000000000000000000000000000006064820152608401610852565b6000835167ffffffffffffffff811115610e8f57610e8f61229e565b604051908082528060200260200182016040528015610eb8578160200160208202803683370190505b50905060005b8451811015610f3057610f03858281518110610edc57610edc6129da565b6020026020010151858381518110610ef657610ef66129da565b60200260200101516107d8565b828281518110610f1557610f156129da565b6020908102919091010152610f2981612a06565b9050610ebe565b509392505050565b6007805461097b906128e4565b3360009081526004602052604090205460ff16610f75576040516349e27cff60e01b815260040160405180910390fd5b6000828152600a602052604090208190600101610f928282612a32565b50505050565b3360009081526004602052604090205460ff16610fc8576040516349e27cff60e01b815260040160405180910390fd5b33610fd257600080fd5b6000918252600a602052604090912060040155565b3360009081526004602052604090205460ff16611017576040516349e27cff60e01b815260040160405180910390fd5b6009805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b3360009081526004602052604090205460ff16611076576040516349e27cff60e01b815260040160405180910390fd5b610f928484848461172a565b3360009081526004602052604090205460ff166110b2576040516349e27cff60e01b815260040160405180910390fd5b6000918252600a6020526040909120600201805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03909216919091179055565b6006805461097b906128e4565b3360009081526004602052604090205460ff1661112d576040516349e27cff60e01b815260040160405180910390fd5b600855565b61113d3383836118ff565b5050565b3361114b57600080fd5b6000818152600b602052604090205460ff1661117a57604051636aa2a93760e01b815260040160405180910390fd5b6111a333826001604051806040016040528060048152602001630307830360e41b8152506119f3565b50565b3360009081526004602052604090205460ff166111d6576040516349e27cff60e01b815260040160405180910390fd5b805161113d906007906020840190612099565b600a60205260009081526040902080548190611204906128e4565b80601f0160208091040260200160405190810160405280929190818152602001828054611230906128e4565b801561127d5780601f106112525761010080835404028352916020019161127d565b820191906000526020600020905b81548152906001019060200180831161126057829003601f168201915b505060408051606081018252600187015460ff808216835261010082048116602084015262010000909104811692820192909252600287015460038801546004890154600590990154979892976001600160a01b03909216965094509092501686565b3360009081526004602052604090205460ff16611310576040516349e27cff60e01b815260040160405180910390fd5b60008481526003602052604090205461133c57604051634a1850bf60e11b815260040160405180910390fd5b61134a846305f5e0ff6109fc565b6113548484610b1f565b61135e8483610f45565b6113688482611082565b611373846000610f98565b5050506000908152600b60205260409020805460ff19166001179055565b6060600780546113a0906128e4565b80601f01602080910402602001604051908101604052809291908181526020018280546113cc906128e4565b80156114195780601f106113ee57610100808354040283529160200191611419565b820191906000526020600020905b8154815290600101906020018083116113fc57829003601f168201915b5050505050905090565b6001600160a01b03851633148061143f575061143f8533610775565b6114b15760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f76656400000000000000000000000000000000000000000000006064820152608401610852565b610c888585858585611b03565b81518351146115205760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610852565b6001600160a01b0384166115845760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610852565b33611593818787878787611ca1565b60005b84518110156116bc5760008582815181106115b3576115b36129da565b6020026020010151905060008583815181106115d1576115d16129da565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156116645760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610852565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906116a1908490612a91565b92505081905550505050806116b590612a06565b9050611596565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161170c929190612aa9565b60405180910390a4611722818787878787611dad565b505050505050565b6001600160a01b03841661178a5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610852565b81518351146117ec5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610852565b336117fc81600087878787611ca1565b60005b84518110156118975783818151811061181a5761181a6129da565b6020026020010151600080878481518110611837576118376129da565b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b03168152602001908152602001600020600082825461187f9190612a91565b9091555081905061188f81612a06565b9150506117ff565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516118e8929190612aa9565b60405180910390a4610c8881600087878787611dad565b816001600160a01b0316836001600160a01b0316036119865760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c6600000000000000000000000000000000000000000000006064820152608401610852565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416611a535760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610852565b33611a7381600087611a6488611f52565b611a6d88611f52565b87611ca1565b6000848152602081815260408083206001600160a01b038916845290915281208054859290611aa3908490612a91565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610c8881600087878787611f9d565b6001600160a01b038416611b675760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610852565b33611b77818787611a6488611f52565b6000848152602081815260408083206001600160a01b038a16845290915290205483811015611bfb5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610852565b6000858152602081815260408083206001600160a01b038b8116855292528083208785039055908816825281208054869290611c38908490612a91565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4611c98828888888888611f9d565b50505050505050565b6001600160a01b038516611d285760005b8351811015611d2657828181518110611ccd57611ccd6129da565b602002602001015160036000868481518110611ceb57611ceb6129da565b602002602001015181526020019081526020016000206000828254611d109190612a91565b90915550611d1f905081612a06565b9050611cb2565b505b6001600160a01b0384166117225760005b8351811015611c9857828181518110611d5457611d546129da565b602002602001015160036000868481518110611d7257611d726129da565b602002602001015181526020019081526020016000206000828254611d979190612ace565b90915550611da6905081612a06565b9050611d39565b6001600160a01b0384163b156117225760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190611df19089908990889088908890600401612ae5565b6020604051808303816000875af1925050508015611e2c575060408051601f3d908101601f19168201909252611e2991810190612b43565b60015b611ee157611e38612b60565b806308c379a003611e715750611e4c612b7c565b80611e575750611e73565b8060405162461bcd60e51b8152600401610852919061224c565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e7465720000000000000000000000006064820152608401610852565b6001600160e01b0319811663bc197c8160e01b14611c985760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610852565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110611f8c57611f8c6129da565b602090810291909101015292915050565b6001600160a01b0384163b156117225760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190611fe19089908990889088908890600401612c06565b6020604051808303816000875af192505050801561201c575060408051601f3d908101601f1916820190925261201991810190612b43565b60015b61202857611e38612b60565b6001600160e01b0319811663f23a6e6160e01b14611c985760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610852565b8280546120a5906128e4565b90600052602060002090601f0160209004810192826120c7576000855561210d565b82601f106120e057805160ff191683800117855561210d565b8280016001018555821561210d579182015b8281111561210d5782518255916020019190600101906120f2565b5061211992915061211d565b5090565b5b80821115612119576000815560010161211e565b6001600160a01b03811681146111a357600080fd5b6000806040838503121561215a57600080fd5b823561216581612132565b946020939093013593505050565b6001600160e01b0319811681146111a357600080fd5b60006020828403121561219b57600080fd5b81356121a681612173565b9392505050565b6000602082840312156121bf57600080fd5b5035919050565b6060810161087e828460ff815116825260ff602082015116602083015260ff60408201511660408301525050565b60005b8381101561220f5781810151838201526020016121f7565b83811115610f925750506000910152565b600081518084526122388160208601602086016121f4565b601f01601f19169290920160200192915050565b6020815260006121a66020830184612220565b6000806040838503121561227257600080fd5b50508035926020909101359150565b60006020828403121561229357600080fd5b81356121a681612132565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff811182821017156122da576122da61229e565b6040525050565b600082601f8301126122f257600080fd5b813567ffffffffffffffff81111561230c5761230c61229e565b604051612323601f8301601f1916602001826122b4565b81815284602083860101111561233857600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561236857600080fd5b82359150602083013567ffffffffffffffff81111561238657600080fd5b612392858286016122e1565b9150509250929050565b600067ffffffffffffffff8211156123b6576123b661229e565b5060051b60200190565b600082601f8301126123d157600080fd5b813560206123de8261239c565b6040516123eb82826122b4565b83815260059390931b850182019282810191508684111561240b57600080fd5b8286015b84811015612426578035835291830191830161240f565b509695505050505050565b600080600080600060a0868803121561244957600080fd5b853561245481612132565b9450602086013561246481612132565b9350604086013567ffffffffffffffff8082111561248157600080fd5b61248d89838a016123c0565b945060608801359150808211156124a357600080fd5b6124af89838a016123c0565b935060808801359150808211156124c557600080fd5b506124d2888289016122e1565b9150509295509295909350565b6000606082840312156124f157600080fd5b50919050565b60008060008060c0858703121561250d57600080fd5b84359350602085013567ffffffffffffffff81111561252b57600080fd5b612537878288016122e1565b93505061254786604087016124df565b915060a085013561255781612132565b939692955090935050565b6000806040838503121561257557600080fd5b823567ffffffffffffffff8082111561258d57600080fd5b818501915085601f8301126125a157600080fd5b813560206125ae8261239c565b6040516125bb82826122b4565b83815260059390931b85018201928281019150898411156125db57600080fd5b948201945b838610156126025785356125f381612132565b825294820194908201906125e0565b9650508601359250508082111561261857600080fd5b50612392858286016123c0565b600081518084526020808501945080840160005b8381101561265557815187529582019590820190600101612639565b509495945050505050565b6020815260006121a66020830184612625565b6000806080838503121561268657600080fd5b8235915061269784602085016124df565b90509250929050565b600080600080608085870312156126b657600080fd5b84356126c181612132565b9350602085013567ffffffffffffffff808211156126de57600080fd5b6126ea888389016123c0565b9450604087013591508082111561270057600080fd5b61270c888389016123c0565b9350606087013591508082111561272257600080fd5b5061272f878288016122e1565b91505092959194509250565b6000806040838503121561274e57600080fd5b82359150602083013561276081612132565b809150509250929050565b6000806040838503121561277e57600080fd5b823561278981612132565b91506020830135801515811461276057600080fd5b6000602082840312156127b057600080fd5b813567ffffffffffffffff8111156127c757600080fd5b6127d3848285016122e1565b949350505050565b60006101008083526127ef8184018a612220565b91505061281f602083018860ff815116825260ff602082015116602083015260ff60408201511660408301525050565b6001600160a01b03861660808301528460a08301528360c083015282151560e0830152979650505050505050565b6000806040838503121561286057600080fd5b823561286b81612132565b9150602083013561276081612132565b600080600080600060a0868803121561289357600080fd5b853561289e81612132565b945060208601356128ae81612132565b93506040860135925060608601359150608086013567ffffffffffffffff8111156128d857600080fd5b6124d2888289016122e1565b600181811c908216806128f857607f821691505b6020821081036124f157634e487b7160e01b600052602260045260246000fd5b6000815161292a8185602086016121f4565b9290920192915050565b600080845481600182811c91508083168061295057607f831692505b6020808410820361296f57634e487b7160e01b86526022600452602486fd5b8180156129835760018114612994576129c1565b60ff198616895284890196506129c1565b60008b81526020902060005b868110156129b95781548b8201529085019083016129a0565b505084890196505b5050505050506129d18185612918565b95945050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201612a1857612a186129f0565b5060010190565b6000813560ff8116811461087e57600080fd5b60ff612a3d83612a1f565b1681548160ff19821617835561ff00612a5860208601612a1f565b60081b16808361ffff1984161717845562ff0000612a7860408701612a1f565b60101b168362ffffff1984161782171784555050505050565b60008219821115612aa457612aa46129f0565b500190565b604081526000612abc6040830185612625565b82810360208401526129d18185612625565b600082821015612ae057612ae06129f0565b500390565b60006001600160a01b03808816835280871660208401525060a06040830152612b1160a0830186612625565b8281036060840152612b238186612625565b90508281036080840152612b378185612220565b98975050505050505050565b600060208284031215612b5557600080fd5b81516121a681612173565b600060033d1115612b795760046000803e5060005160e01c5b90565b600060443d1015612b8a5790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715612bba57505050505090565b8285019150815181811115612bd25750505050505090565b843d8701016020828501011115612bec5750505050505090565b612bfb602082860101876122b4565b509095945050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a06080830152612c3e60a0830184612220565b97965050505050505056fea164736f6c634300080d000a";

type FreeObjectConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FreeObjectConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FreeObject__factory extends ContractFactory {
  constructor(...args: FreeObjectConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _treasuryAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FreeObject> {
    return super.deploy(
      _treasuryAddress,
      overrides || {}
    ) as Promise<FreeObject>;
  }
  override getDeployTransaction(
    _treasuryAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_treasuryAddress, overrides || {});
  }
  override attach(address: string): FreeObject {
    return super.attach(address) as FreeObject;
  }
  override connect(signer: Signer): FreeObject__factory {
    return super.connect(signer) as FreeObject__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FreeObjectInterface {
    return new utils.Interface(_abi) as FreeObjectInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FreeObject {
    return new Contract(address, _abi, signerOrProvider) as FreeObject;
  }
}
