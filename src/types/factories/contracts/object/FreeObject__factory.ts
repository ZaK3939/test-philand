/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  FreeObject,
  FreeObjectInterface,
} from "../../../contracts/object/FreeObject";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_treasuryAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ExistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTokenID",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSetTokenSize",
    type: "error",
  },
  {
    inputs: [],
    name: "NonExistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "PaymentBalanceZero",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_newPrice",
        type: "uint256",
      },
    ],
    name: "ChangeTokenPrice",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentReceivedOwner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentWithdrawnOwner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
    ],
    name: "SetCreator",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newMaxClaimed",
        type: "uint256",
      },
    ],
    name: "SetMaxClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_royalityFee",
        type: "uint256",
      },
    ],
    name: "SetRoyalityFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_secondaryRoyalty",
        type: "uint256",
      },
    ],
    name: "SetSecondaryRoyalityFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "x",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "y",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "z",
        type: "uint8",
      },
    ],
    name: "SetSize",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "SetTokenURI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address payable",
        name: "_treasuryAddress",
        type: "address",
      },
    ],
    name: "SetTreasuryAddress",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "baseuri",
        type: "string",
      },
    ],
    name: "SetbaseMetadataURI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allObjects",
    outputs: [
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxClaimed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "forSale",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseMetadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "batchGetFreeObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newPrice",
        type: "uint256",
      },
    ],
    name: "changeTokenPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "_size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
    ],
    name: "createObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "created",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseMetadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getCreator",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getFreeObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getMaxClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getSize",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "_size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
    ],
    name: "initObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mintBatchObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetAddress",
        type: "address",
      },
    ],
    name: "owner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paymentBalanceOwner",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
    ],
    name: "removeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "royalityFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "secondaryRoyalty",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
    ],
    name: "setCreator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newMaxClaimed",
        type: "uint256",
      },
    ],
    name: "setMaxClaimed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_royalityFee",
        type: "uint256",
      },
    ],
    name: "setRoyalityFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_secondaryRoyalty",
        type: "uint256",
      },
    ],
    name: "setSecondaryRoyalityFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "_size",
        type: "tuple",
      },
    ],
    name: "setSize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "setTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_treasuryAddress",
        type: "address",
      },
    ],
    name: "setTreasuryAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseMetadataURI",
        type: "string",
      },
    ],
    name: "setbaseMetadataURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasuryAddress",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "withdrawTo",
        type: "address",
      },
    ],
    name: "withdrawOwnerBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200369c3803806200369c8339810160408190526200003491620001fe565b604080516020808201835260008083523381529081905291909120805460ff1916600117905562000065816200013f565b50600160055560408051808201909152600b8082526a467265654f626a6563747360a81b60209092019182526200009f9160069162000158565b5060408051808201909152600380825262464f5360e81b6020909201918252620000cc9160079162000158565b506040805180820190915260188082527f68747470733a2f2f7777772e617277656176652e6e65742f00000000000000006020909201918252620001139160089162000158565b50600980546001600160a01b0319166001600160a01b03929092169190911790556064600b556200026c565b80516200015490600390602084019062000158565b5050565b828054620001669062000230565b90600052602060002090601f0160209004810192826200018a5760008555620001d5565b82601f10620001a557805160ff1916838001178555620001d5565b82800160010185558215620001d5579182015b82811115620001d5578251825591602001919060010190620001b8565b50620001e3929150620001e7565b5090565b5b80821115620001e35760008155600101620001e8565b6000602082840312156200021157600080fd5b81516001600160a01b03811681146200022957600080fd5b9392505050565b600181811c908216806200024557607f821691505b6020821081036200026657634e487b7160e01b600052602260045260246000fd5b50919050565b613420806200027c6000396000f3fe6080604052600436106102ea5760003560e01c8063666e1b3911610184578063ab231c32116100d6578063cbdac7101161008a578063e985e9c511610064578063e985e9c5146108f1578063ea2fe3cb1461093a578063f242432a1461094f57600080fd5b8063cbdac71014610866578063cf467b4314610898578063d48e638a146108b857600080fd5b8063bd85b039116100bb578063bd85b039146107d1578063c457fb37146107fe578063c5f956af1461082e57600080fd5b8063ab231c3214610791578063b6ed6da9146107b157600080fd5b806391686f53116101385780639733faa5116101125780639733faa51461072157806398f2468214610751578063a22cb4651461077157600080fd5b806391686f53146106d65780639291671a146106f657806395d89b411461070c57600080fd5b8063697436d911610169578063697436d9146106665780637061d4861461068657806382cb6b72146106a657600080fd5b8063666e1b391461060d57806367478a351461064657600080fd5b80632a55205a1161023d5780634e1273f4116101f1578063604c7f80116101cb578063604c7f80146105ad57806362e8e8ac146105cd5780636605bfda146105ed57600080fd5b80634e1273f41461053c5780634f558e79146105695780635b2bd79e1461059857600080fd5b8063326bb4ad11610222578063326bb4ad146104e65780633bb3a24d146104fc5780633e545f021461051c57600080fd5b80632a55205a146104875780632eb2c2d6146104c657600080fd5b80630d09308e1161029f578063162094c411610279578063162094c414610431578063173825d9146104515780631e4c78871461047157600080fd5b80630d09308e146103d15780630e89341c146103f157806313af40351461041157600080fd5b806301ffc9a7116102d057806301ffc9a714610352578063023c23db1461038257806306fdde03146103af57600080fd5b8062fdd58e146102ff578063013bc6c51461033257600080fd5b366102fa576102f83461096f565b005b600080fd5b34801561030b57600080fd5b5061031f61031a366004612871565b6109bc565b6040519081526020015b60405180910390f35b34801561033e57600080fd5b506102f861034d366004612975565b610a6a565b34801561035e57600080fd5b5061037261036d3660046129c8565b610aae565b6040519015158152602001610329565b34801561038e57600080fd5b506103a261039d3660046129ec565b610afe565b6040516103299190612a05565b3480156103bb57600080fd5b506103c4610b98565b6040516103299190612a8b565b3480156103dd57600080fd5b506102f86103ec366004612a9e565b610c26565b3480156103fd57600080fd5b506103c461040c3660046129ec565b610ca9565b34801561041d57600080fd5b506102f861042c366004612ac0565b610d0d565b34801561043d57600080fd5b506102f861044c366004612b51565b610d8a565b34801561045d57600080fd5b506102f861046c366004612ac0565b610e0b565b34801561047d57600080fd5b5061031f600c5481565b34801561049357600080fd5b506104a76104a2366004612a9e565b610e85565b604080516001600160a01b039093168352602083019190915201610329565b3480156104d257600080fd5b506102f86104e1366004612b98565b610eaf565b3480156104f257600080fd5b5061031f600a5481565b34801561050857600080fd5b506103c46105173660046129ec565b610f51565b34801561052857600080fd5b506102f8610537366004612c46565b610ff3565b34801561054857600080fd5b5061055c610557366004612cbc565b6110bb565b6040516103299190612dba565b34801561057557600080fd5b506103726105843660046129ec565b600090815260046020526040902054151590565b3480156105a457600080fd5b506103c46111f9565b3480156105b957600080fd5b506102f86105c8366004612e52565b611206565b3480156105d957600080fd5b506102f86105e8366004612a9e565b6112c8565b3480156105f957600080fd5b506102f8610608366004612ac0565b611343565b34801561061957600080fd5b50610372610628366004612ac0565b6001600160a01b031660009081526020819052604090205460ff1690565b34801561065257600080fd5b506102f8610661366004612ac0565b6113d5565b34801561067257600080fd5b506102f8610681366004612e7f565b611538565b34801561069257600080fd5b506102f86106a13660046129ec565b61157a565b3480156106b257600080fd5b506103726106c13660046129ec565b600e6020526000908152604090205460ff1681565b3480156106e257600080fd5b506102f86106f1366004612f1a565b6115df565b34801561070257600080fd5b5061031f600b5481565b34801561071857600080fd5b506103c461167e565b34801561072d57600080fd5b5061031f61073c3660046129ec565b6000908152600d602052604090206003015490565b34801561075d57600080fd5b506102f861076c3660046129ec565b61168b565b34801561077d57600080fd5b506102f861078c366004612f4a565b6116f0565b34801561079d57600080fd5b506102f86107ac3660046129ec565b6116fb565b3480156107bd57600080fd5b506102f86107cc366004612f7d565b611781565b3480156107dd57600080fd5b5061031f6107ec3660046129ec565b60009081526004602052604090205490565b34801561080a57600080fd5b5061031f6108193660046129ec565b6000908152600d602052604090206004015490565b34801561083a57600080fd5b5060095461084e906001600160a01b031681565b6040516001600160a01b039091168152602001610329565b34801561087257600080fd5b506108866108813660046129ec565b6117f4565b60405161032996959493929190612fb2565b3480156108a457600080fd5b506102f86108b3366004612c46565b6118eb565b3480156108c457600080fd5b5061084e6108d33660046129ec565b6000908152600d60205260409020600201546001600160a01b031690565b3480156108fd57600080fd5b5061037261090c366004613024565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205460ff1690565b34801561094657600080fd5b506103c461198b565b34801561095b57600080fd5b506102f861096a366004613052565b611a1d565b6040518181527faab58724194bfb12b018298382453c333764e73d19ec73cb98d26f8dd10d29cc9060200160405180910390a180600c60008282546109b491906130d1565b909155505050565b60006001600160a01b038316610a3f5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b5060008181526001602090815260408083206001600160a01b03861684529091529020545b92915050565b60005b8151811015610aaa57610a98828281518110610a8b57610a8b6130e9565b60200260200101516116fb565b80610aa2816130ff565b915050610a6d565b5050565b60006001600160e01b03198216636cdb3d1360e11b1480610adf57506001600160e01b031982166303a24d0760e21b145b80610a6457506301ffc9a760e01b6001600160e01b0319831614610a64565b60408051606081018252600080825260208201819052918101919091526000828152600d602052604081206001015460ff169003610b4f5760405163a8e3a97360e01b815260040160405180910390fd5b506000908152600d6020908152604091829020825160608101845260019091015460ff808216835261010082048116938301939093526201000090049091169181019190915290565b60068054610ba590613118565b80601f0160208091040260200160405190810160405280929190818152602001828054610bd190613118565b8015610c1e5780601f10610bf357610100808354040283529160200191610c1e565b820191906000526020600020905b815481529060010190602001808311610c0157829003601f168201915b505050505081565b3360009081526020819052604090205460ff16610c56576040516349e27cff60e01b815260040160405180910390fd5b6000828152600d602090815260409182902060030183905581518481529081018390527fad41bb8f5516e8c7946d99bc48fd3ff0a07239c8ffcf2d103a0612b9ab44a60a91015b60405180910390a15050565b6000818152600e602052604090205460609060ff16610cdb57604051636aa2a93760e01b815260040160405180910390fd5b6008610ce683610f51565b604051602001610cf792919061316e565b6040516020818303038152906040529050919050565b3360009081526020819052604090205460ff16610d3d576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260208190526040808220805460ff191660011790555133917f619792ba07bec101df538ab277befa333e4cf1c0274f11de7be2a9507b9c9a0691a350565b3360009081526020819052604090205460ff16610dba576040516349e27cff60e01b815260040160405180910390fd5b6000828152600d602090815260409091208251610dd9928401906127c3565b507fd2d827dddfc9c9a02afc5fc68d3251684b36e213a7999ebd90a861f25df4077e8282604051610c9d929190613214565b3360009081526020819052604090205460ff16610e3b576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260208190526040808220805460ff191690555133917fc191551a88c5609788f3532bd94c06479b61b0040eec65f9cd985428ffea643091a350565b60008030612710600b5485610e9a919061322d565b610ea4919061324c565b915091509250929050565b6001600160a01b038516331480610ecb5750610ecb853361090c565b610f3d5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f76656400000000000000000000000000006064820152608401610a36565b610f4a8585858585611ab8565b5050505050565b6000818152600d60205260409020805460609190610f6e90613118565b80601f0160208091040260200160405190810160405280929190818152602001828054610f9a90613118565b8015610fe75780601f10610fbc57610100808354040283529160200191610fe7565b820191906000526020600020905b815481529060010190602001808311610fca57829003601f168201915b50505050509050919050565b3360009081526020819052604090205460ff16611023576040516349e27cff60e01b815260040160405180910390fd5b60008481526004602052604090205415611050576040516387cf36d160e01b815260040160405180910390fd5b61105a8484610d8a565b61106d846105c83685900385018561326e565b61107784826115df565b6110828460006112c8565b5050506000908152600d602090815260408083206005018054600160ff199182168117909255600e909352922080549091169091179055565b606081518351146111345760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d6174636800000000000000000000000000000000000000000000006064820152608401610a36565b6000835167ffffffffffffffff8111156111505761115061289d565b604051908082528060200260200182016040528015611179578160200160208202803683370190505b50905060005b84518110156111f1576111c485828151811061119d5761119d6130e9565b60200260200101518583815181106111b7576111b76130e9565b60200260200101516109bc565b8282815181106111d6576111d66130e9565b60209081029190910101526111ea816130ff565b905061117f565b509392505050565b60088054610ba590613118565b3360009081526020819052604090205460ff16611236576040516349e27cff60e01b815260040160405180910390fd5b6000828152600d6020908152604091829020835160019091018054858401518686015160ff94851661ffff1990931683176101009286169283021762ff000019166201000095909116948502179092558451878152938401529282019290925260608101919091527fd8e7c8605fecaf6228c6b5f990bc7f1e865694cc587ef62fe729b926915ef7e090608001610c9d565b3360009081526020819052604090205460ff166112f8576040516349e27cff60e01b815260040160405180910390fd5b6000828152600d602090815260409182902060040183905581518481529081018390527f415cf995faccaec43ce108f2713ebcdb2812b0e0689a8fa7dfdcabf78109ebbb9101610c9d565b3360009081526020819052604090205460ff16611373576040516349e27cff60e01b815260040160405180910390fd5b6009805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527feee016301a2725a577c64816adf35ccf644d07439731069a31748ec3b9102c60906020015b60405180910390a150565b3360009081526020819052604090205460ff16611405576040516349e27cff60e01b815260040160405180910390fd5b6002600554036114575760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610a36565b6002600555600c5460000361147f57604051632f31015b60e11b815260040160405180910390fd5b600c80546000918290556040519091906001600160a01b0384169083908381818185875af1925050503d80600081146114d4576040519150601f19603f3d011682016040523d82523d6000602084013e6114d9565b606091505b50509050806114fb57604051632f31015b60e11b815260040160405180910390fd5b6040518281527f2d5923adf91dd211e633a33f2e27918338e6a33e3b3f386e9d466d1bc52eba799060200160405180910390a15050600160055550565b3360009081526020819052604090205460ff16611568576040516349e27cff60e01b815260040160405180910390fd5b61157484848484611d27565b50505050565b3360009081526020819052604090205460ff166115aa576040516349e27cff60e01b815260040160405180910390fd5b600b8190556040518181527fb69fdb7c7f7b0e17f64074ea1590642f14193039b234aae7a3c68b26ed055adf906020016113ca565b3360009081526020819052604090205460ff1661160f576040516349e27cff60e01b815260040160405180910390fd5b6000828152600d6020908152604091829020600201805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0385169081179091558251858152918201527f02df56823aeec019d75f2c2396e2a9c68868b26ccc5a4cd9412b2a78f8602f739101610c9d565b60078054610ba590613118565b3360009081526020819052604090205460ff166116bb576040516349e27cff60e01b815260040160405180910390fd5b600a8190556040518181527f184fa17d2176718ea1955f61782c763ce239e39e790340793f227b0ba5db53e1906020016113ca565b610aaa338383611efd565b3361170557600080fd5b6000818152600d602052604090206005015460ff1661172357600080fd5b61172c81611ff1565b6000818152600d6020908152604080832060030154600490925290912054111561175557600080fd5b61177e33826001604051806040016040528060048152602001630307830360e41b815250612067565b50565b3360009081526020819052604090205460ff166117b1576040516349e27cff60e01b815260040160405180910390fd5b80516117c49060089060208401906127c3565b507ffa52149a99a7016c4576d7bb33adefe5c4372aeded2a98a40f46d6ef33109c4d816040516113ca9190612a8b565b600d6020526000908152604090208054819061180f90613118565b80601f016020809104026020016040519081016040528092919081815260200182805461183b90613118565b80156118885780601f1061185d57610100808354040283529160200191611888565b820191906000526020600020905b81548152906001019060200180831161186b57829003601f168201915b505060408051606081018252600187015460ff808216835261010082048116602084015262010000909104811692820192909252600287015460038801546004890154600590990154979892976001600160a01b03909216965094509092501686565b3360009081526020819052604090205460ff1661191b576040516349e27cff60e01b815260040160405180910390fd5b6000848152600e602052604090205460ff1661194a57604051636aa2a93760e01b815260040160405180910390fd5b611959846402540be3ff610c26565b6119638484610d8a565b611976846105c83685900385018561326e565b61198084826115df565b6115748460006112c8565b60606008805461199a90613118565b80601f01602080910402602001604051908101604052809291908181526020018280546119c690613118565b8015611a135780601f106119e857610100808354040283529160200191611a13565b820191906000526020600020905b8154815290600101906020018083116119f657829003601f168201915b5050505050905090565b6001600160a01b038516331480611a395750611a39853361090c565b611aab5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f76656400000000000000000000000000000000000000000000006064820152608401610a36565b610f4a858585858561218c565b8151835114611b1a5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610a36565b6001600160a01b038416611b7e5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610a36565b33611b8d818787878787612349565b60005b8451811015611cb9576000858281518110611bad57611bad6130e9565b602002602001015190506000858381518110611bcb57611bcb6130e9565b60209081029190910181015160008481526001835260408082206001600160a01b038e168352909352919091205490915081811015611c5f5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610a36565b60008381526001602090815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290611c9e9084906130d1565b9250508190555050505080611cb2906130ff565b9050611b90565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051611d0992919061328a565b60405180910390a4611d1f8187878787876124d7565b505050505050565b6001600160a01b038416611d875760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610a36565b8151835114611de95760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610a36565b33611df981600087878787612349565b60005b8451811015611e9557838181518110611e1757611e176130e9565b602002602001015160016000878481518110611e3557611e356130e9565b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b031681526020019081526020016000206000828254611e7d91906130d1565b90915550819050611e8d816130ff565b915050611dfc565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051611ee692919061328a565b60405180910390a4610f4a816000878787876124d7565b816001600160a01b0316836001600160a01b031603611f845760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c6600000000000000000000000000000000000000000000006064820152608401610a36565b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b80158061201a57506000818152600d602090815260408083206003015460049092529091205410155b1561203857604051636aa2a93760e01b815260040160405180910390fd5b6000818152600e602052604090205460ff1661177e57604051636aa2a93760e01b815260040160405180910390fd5b6001600160a01b0384166120c75760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610a36565b3360006120d38561267c565b905060006120e08561267c565b90506120f183600089858589612349565b60008681526001602090815260408083206001600160a01b038b168452909152812080548792906121239084906130d1565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4612183836000898989896126c7565b50505050505050565b6001600160a01b0384166121f05760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610a36565b3360006121fc8561267c565b905060006122098561267c565b9050612219838989858589612349565b60008681526001602090815260408083206001600160a01b038c1684529091529020548581101561229f5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610a36565b60008781526001602090815260408083206001600160a01b038d8116855292528083208985039055908a168252812080548892906122de9084906130d1565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461233e848a8a8a8a8a6126c7565b505050505050505050565b6001600160a01b0385166123d05760005b83518110156123ce57828181518110612375576123756130e9565b602002602001015160046000868481518110612393576123936130e9565b6020026020010151815260200190815260200160002060008282546123b891906130d1565b909155506123c79050816130ff565b905061235a565b505b6001600160a01b038416611d1f5760005b83518110156121835760008482815181106123fe576123fe6130e9565b60200260200101519050600084838151811061241c5761241c6130e9565b60200260200101519050600060046000848152602001908152602001600020549050818110156124b45760405162461bcd60e51b815260206004820152602860248201527f455243313135353a206275726e20616d6f756e74206578636565647320746f7460448201527f616c537570706c790000000000000000000000000000000000000000000000006064820152608401610a36565b600092835260046020526040909220910390556124d0816130ff565b90506123e1565b6001600160a01b0384163b15611d1f5760405163bc197c8160e01b81526001600160a01b0385169063bc197c819061251b90899089908890889088906004016132af565b6020604051808303816000875af1925050508015612556575060408051601f3d908101601f191682019092526125539181019061330d565b60015b61260b5761256261332a565b806308c379a00361259b5750612576613346565b80612581575061259d565b8060405162461bcd60e51b8152600401610a369190612a8b565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e7465720000000000000000000000006064820152608401610a36565b6001600160e01b0319811663bc197c8160e01b146121835760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610a36565b604080516001808252818301909252606091600091906020808301908036833701905050905082816000815181106126b6576126b66130e9565b602090810291909101015292915050565b6001600160a01b0384163b15611d1f5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e619061270b90899089908890889088906004016133d0565b6020604051808303816000875af1925050508015612746575060408051601f3d908101601f191682019092526127439181019061330d565b60015b6127525761256261332a565b6001600160e01b0319811663f23a6e6160e01b146121835760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610a36565b8280546127cf90613118565b90600052602060002090601f0160209004810192826127f15760008555612837565b82601f1061280a57805160ff1916838001178555612837565b82800160010185558215612837579182015b8281111561283757825182559160200191906001019061281c565b50612843929150612847565b5090565b5b808211156128435760008155600101612848565b6001600160a01b038116811461177e57600080fd5b6000806040838503121561288457600080fd5b823561288f8161285c565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff811182821017156128d9576128d961289d565b6040525050565b600067ffffffffffffffff8211156128fa576128fa61289d565b5060051b60200190565b600082601f83011261291557600080fd5b81356020612922826128e0565b60405161292f82826128b3565b83815260059390931b850182019282810191508684111561294f57600080fd5b8286015b8481101561296a5780358352918301918301612953565b509695505050505050565b60006020828403121561298757600080fd5b813567ffffffffffffffff81111561299e57600080fd5b6129aa84828501612904565b949350505050565b6001600160e01b03198116811461177e57600080fd5b6000602082840312156129da57600080fd5b81356129e5816129b2565b9392505050565b6000602082840312156129fe57600080fd5b5035919050565b60608101610a64828460ff815116825260ff602082015116602083015260ff60408201511660408301525050565b60005b83811015612a4e578181015183820152602001612a36565b838111156115745750506000910152565b60008151808452612a77816020860160208601612a33565b601f01601f19169290920160200192915050565b6020815260006129e56020830184612a5f565b60008060408385031215612ab157600080fd5b50508035926020909101359150565b600060208284031215612ad257600080fd5b81356129e58161285c565b600082601f830112612aee57600080fd5b813567ffffffffffffffff811115612b0857612b0861289d565b604051612b1f601f8301601f1916602001826128b3565b818152846020838601011115612b3457600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215612b6457600080fd5b82359150602083013567ffffffffffffffff811115612b8257600080fd5b612b8e85828601612add565b9150509250929050565b600080600080600060a08688031215612bb057600080fd5b8535612bbb8161285c565b94506020860135612bcb8161285c565b9350604086013567ffffffffffffffff80821115612be857600080fd5b612bf489838a01612904565b94506060880135915080821115612c0a57600080fd5b612c1689838a01612904565b93506080880135915080821115612c2c57600080fd5b50612c3988828901612add565b9150509295509295909350565b60008060008084860360c0811215612c5d57600080fd5b85359450602086013567ffffffffffffffff811115612c7b57600080fd5b612c8788828901612add565b9450506060603f1982011215612c9c57600080fd5b5060408501915060a0850135612cb18161285c565b939692955090935050565b60008060408385031215612ccf57600080fd5b823567ffffffffffffffff80821115612ce757600080fd5b818501915085601f830112612cfb57600080fd5b81356020612d08826128e0565b604051612d1582826128b3565b83815260059390931b8501820192828101915089841115612d3557600080fd5b948201945b83861015612d5c578535612d4d8161285c565b82529482019490820190612d3a565b96505086013592505080821115612d7257600080fd5b50612b8e85828601612904565b600081518084526020808501945080840160005b83811015612daf57815187529582019590820190600101612d93565b509495945050505050565b6020815260006129e56020830184612d7f565b803560ff81168114612dde57600080fd5b919050565b600060608284031215612df557600080fd5b6040516060810181811067ffffffffffffffff82111715612e1857612e1861289d565b604052905080612e2783612dcd565b8152612e3560208401612dcd565b6020820152612e4660408401612dcd565b60408201525092915050565b60008060808385031215612e6557600080fd5b82359150612e768460208501612de3565b90509250929050565b60008060008060808587031215612e9557600080fd5b8435612ea08161285c565b9350602085013567ffffffffffffffff80821115612ebd57600080fd5b612ec988838901612904565b94506040870135915080821115612edf57600080fd5b612eeb88838901612904565b93506060870135915080821115612f0157600080fd5b50612f0e87828801612add565b91505092959194509250565b60008060408385031215612f2d57600080fd5b823591506020830135612f3f8161285c565b809150509250929050565b60008060408385031215612f5d57600080fd5b8235612f688161285c565b915060208301358015158114612f3f57600080fd5b600060208284031215612f8f57600080fd5b813567ffffffffffffffff811115612fa657600080fd5b6129aa84828501612add565b6000610100808352612fc68184018a612a5f565b915050612ff6602083018860ff815116825260ff602082015116602083015260ff60408201511660408301525050565b6001600160a01b03861660808301528460a08301528360c083015282151560e0830152979650505050505050565b6000806040838503121561303757600080fd5b82356130428161285c565b91506020830135612f3f8161285c565b600080600080600060a0868803121561306a57600080fd5b85356130758161285c565b945060208601356130858161285c565b93506040860135925060608601359150608086013567ffffffffffffffff8111156130af57600080fd5b612c3988828901612add565b634e487b7160e01b600052601160045260246000fd5b600082198211156130e4576130e46130bb565b500190565b634e487b7160e01b600052603260045260246000fd5b600060018201613111576131116130bb565b5060010190565b600181811c9082168061312c57607f821691505b60208210810361314c57634e487b7160e01b600052602260045260246000fd5b50919050565b60008151613164818560208601612a33565b9290920192915050565b600080845481600182811c91508083168061318a57607f831692505b602080841082036131a957634e487b7160e01b86526022600452602486fd5b8180156131bd57600181146131ce576131fb565b60ff198616895284890196506131fb565b60008b81526020902060005b868110156131f35781548b8201529085019083016131da565b505084890196505b50505050505061320b8185613152565b95945050505050565b8281526040602082015260006129aa6040830184612a5f565b6000816000190483118215151615613247576132476130bb565b500290565b60008261326957634e487b7160e01b600052601260045260246000fd5b500490565b60006060828403121561328057600080fd5b6129e58383612de3565b60408152600061329d6040830185612d7f565b828103602084015261320b8185612d7f565b60006001600160a01b03808816835280871660208401525060a060408301526132db60a0830186612d7f565b82810360608401526132ed8186612d7f565b905082810360808401526133018185612a5f565b98975050505050505050565b60006020828403121561331f57600080fd5b81516129e5816129b2565b600060033d11156133435760046000803e5060005160e01c5b90565b600060443d10156133545790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561338457505050505090565b828501915081518181111561339c5750505050505090565b843d87010160208285010111156133b65750505050505090565b6133c5602082860101876128b3565b509095945050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261340860a0830184612a5f565b97965050505050505056fea164736f6c634300080d000a";

type FreeObjectConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FreeObjectConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FreeObject__factory extends ContractFactory {
  constructor(...args: FreeObjectConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _treasuryAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FreeObject> {
    return super.deploy(
      _treasuryAddress,
      overrides || {}
    ) as Promise<FreeObject>;
  }
  override getDeployTransaction(
    _treasuryAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_treasuryAddress, overrides || {});
  }
  override attach(address: string): FreeObject {
    return super.attach(address) as FreeObject;
  }
  override connect(signer: Signer): FreeObject__factory {
    return super.connect(signer) as FreeObject__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FreeObjectInterface {
    return new utils.Interface(_abi) as FreeObjectInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FreeObject {
    return new Contract(address, _abi, signerOrProvider) as FreeObject;
  }
}
