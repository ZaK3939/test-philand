/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  FreeObject,
  FreeObjectInterface,
} from "../../../contracts/object/FreeObject";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_royalityFee",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ExistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTokenID",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSetTokenSize",
    type: "error",
  },
  {
    inputs: [],
    name: "NonExistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Sale",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allObjects",
    outputs: [
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct FreeObject.Size",
        name: "size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "creator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "forSale",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseMetadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct FreeObject.Size",
        name: "_size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
    ],
    name: "createObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "created",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseMetadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getCreator",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getFreeObject",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getSize",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct FreeObject.Size",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct FreeObject.Size",
        name: "_size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
    ],
    name: "initObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetAddress",
        type: "address",
      },
    ],
    name: "owner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
    ],
    name: "removeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "royalityFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
    ],
    name: "setCreator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_royalityFee",
        type: "uint256",
      },
    ],
    name: "setRoyalityFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct FreeObject.Size",
        name: "_size",
        type: "tuple",
      },
    ],
    name: "setSize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "setTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_treasuryAddress",
        type: "address",
      },
    ],
    name: "setTreasuryAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "baseuri",
        type: "string",
      },
    ],
    name: "setbaseMetadataURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002c3a38038062002c3a8339810160408190526200003491620001db565b6040805160208101909152600081526200004e816200011c565b5033600090815260046020908152604091829020805460ff191660011790558151808301909252600b8083526a467265654f626a6563747360a81b929091019182526200009e9160059162000135565b5060408051808201909152600380825262464f5360e81b6020909201918252620000cb9160069162000135565b506040805180820190915260188082527f68747470733a2f2f7777772e617277656176652e6e65742f00000000000000006020909201918252620001129160079162000135565b5060085562000231565b80516200013190600290602084019062000135565b5050565b8280546200014390620001f5565b90600052602060002090601f016020900481019282620001675760008555620001b2565b82601f106200018257805160ff1916838001178555620001b2565b82800160010185558215620001b2579182015b82811115620001b257825182559160200191906001019062000195565b50620001c0929150620001c4565b5090565b5b80821115620001c05760008155600101620001c5565b600060208284031215620001ee57600080fd5b5051919050565b600181811c908216806200020a57607f821691505b6020821081036200022b57634e487b7160e01b600052602260045260246000fd5b50919050565b6129f980620002416000396000f3fe6080604052600436106101e25760003560e01c80636605bfda11610102578063b6ed6da911610095578063d48e638a11610064578063d48e638a146105d0578063e985e9c514610608578063ea2fe3cb14610651578063f242432a1461066657600080fd5b8063b6ed6da914610533578063bd85b03914610553578063cbdac71014610580578063cf467b43146105b057600080fd5b806395d89b41116100d157806395d89b41146104cb57806398f24682146104e0578063a22cb46514610500578063ab231c321461052057600080fd5b80636605bfda14610422578063666e1b391461044257806382cb6b721461047b57806391686f53146104ab57600080fd5b80632eb2c2d61161017a5780634e1273f4116101495780634e1273f4146103915780634f558e79146103be5780635b2bd79e146103ed578063604c7f801461040257600080fd5b80632eb2c2d61461031b578063326bb4ad1461033b5780633bb3a24d146103515780633e545f021461037157600080fd5b80630e89341c116101b65780630e89341c1461029957806313af4035146102b9578063162094c4146102db578063173825d9146102fb57600080fd5b8062fdd58e146101e757806301ffc9a71461021a578063023c23db1461024a57806306fdde0314610277575b600080fd5b3480156101f357600080fd5b50610207610202366004611f76565b610686565b6040519081526020015b60405180910390f35b34801561022657600080fd5b5061023a610235366004611fb8565b610732565b6040519015158152602001610211565b34801561025657600080fd5b5061026a610265366004611fdc565b610782565b6040516102119190611ff5565b34801561028357600080fd5b5061028c610845565b604051610211919061207b565b3480156102a557600080fd5b5061028c6102b4366004611fdc565b6108d3565b3480156102c557600080fd5b506102d96102d436600461208e565b610934565b005b3480156102e757600080fd5b506102d96102f6366004612162565b6109b1565b34801561030757600080fd5b506102d961031636600461208e565b610a31565b34801561032757600080fd5b506102d961033636600461223e565b610aab565b34801561034757600080fd5b5061020760085481565b34801561035d57600080fd5b5061028c61036c366004611fdc565b610b4d565b34801561037d57600080fd5b506102d961038c366004612304565b610c1a565b34801561039d57600080fd5b506103b16103ac36600461236f565b610cbd565b604051610211919061246d565b3480156103ca57600080fd5b5061023a6103d9366004611fdc565b600090815260036020526040902054151590565b3480156103f957600080fd5b5061028c610dfb565b34801561040e57600080fd5b506102d961041d366004612480565b610e08565b34801561042e57600080fd5b506102d961043d36600461208e565b610e87565b34801561044e57600080fd5b5061023a61045d36600461208e565b6001600160a01b031660009081526004602052604090205460ff1690565b34801561048757600080fd5b5061023a610496366004611fdc565b600b6020526000908152604090205460ff1681565b3480156104b757600080fd5b506102d96104c63660046124ad565b610ee6565b3480156104d757600080fd5b5061028c610f80565b3480156104ec57600080fd5b506102d96104fb366004611fdc565b610f8d565b34801561050c57600080fd5b506102d961051b3660046124dd565b610fc2565b6102d961052e366004611fdc565b610fd1565b34801561053f57600080fd5b506102d961054e366004612510565b611036565b34801561055f57600080fd5b5061020761056e366004611fdc565b60009081526003602052604090205490565b34801561058c57600080fd5b506105a061059b366004611fdc565b611079565b604051610211949392919061254d565b3480156105bc57600080fd5b506102d96105cb366004612304565b611176565b3480156105dc57600080fd5b506105f06105eb366004611fdc565b6111d2565b6040516001600160a01b039091168152602001610211565b34801561061457600080fd5b5061023a6106233660046125af565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b34801561065d57600080fd5b5061028c61121d565b34801561067257600080fd5b506102d96106813660046125dd565b6112af565b60006001600160a01b0383166107095760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b148061076357506001600160e01b031982166303a24d0760e21b145b8061072c57506301ffc9a760e01b6001600160e01b031983161461072c565b60408051606081018252600080825260208083018290528284018290528482526003905291909120546107c857604051634a1850bf60e11b815260040160405180910390fd5b6000828152600a602052604081206001015460ff1690036107fc5760405163a8e3a97360e01b815260040160405180910390fd5b506000908152600a6020908152604091829020825160608101845260019091015460ff808216835261010082048116938301939093526201000090049091169181019190915290565b6005805461085290612646565b80601f016020809104026020016040519081016040528092919081815260200182805461087e90612646565b80156108cb5780601f106108a0576101008083540402835291602001916108cb565b820191906000526020600020905b8154815290600101906020018083116108ae57829003601f168201915b505050505081565b60008181526003602052604090205460609061090257604051634a1850bf60e11b815260040160405180910390fd5b600761090d83610b4d565b60405160200161091e929190612696565b6040516020818303038152906040529050919050565b3360009081526004602052604090205460ff16610964576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260046020526040808220805460ff191660011790555133917f619792ba07bec101df538ab277befa333e4cf1c0274f11de7be2a9507b9c9a0691a350565b3360009081526004602052604090205460ff166109e1576040516349e27cff60e01b815260040160405180910390fd5b600082815260036020526040902054610a0d57604051634a1850bf60e11b815260040160405180910390fd5b6000828152600a602090815260409091208251610a2c92840190611ec8565b505050565b3360009081526004602052604090205460ff16610a61576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260046020526040808220805460ff191690555133917fc191551a88c5609788f3532bd94c06479b61b0040eec65f9cd985428ffea643091a350565b6001600160a01b038516331480610ac75750610ac78533610623565b610b395760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f76656400000000000000000000000000006064820152608401610700565b610b4685858585856112c7565b5050505050565b600081815260036020526040902054606090610b7c57604051634a1850bf60e11b815260040160405180910390fd5b6000828152600a602052604090208054610b9590612646565b80601f0160208091040260200160405190810160405280929190818152602001828054610bc190612646565b8015610c0e5780601f10610be357610100808354040283529160200191610c0e565b820191906000526020600020905b815481529060010190602001808311610bf157829003601f168201915b50505050509050919050565b3360009081526004602052604090205460ff16610c4a576040516349e27cff60e01b815260040160405180910390fd5b33610c5457600080fd5b60008481526003602052604090205415610c81576040516387cf36d160e01b815260040160405180910390fd5b610c8b84846109b1565b610c958483610e08565b610c9f8482610ee6565b5050506000908152600b60205260409020805460ff19166001179055565b60608151835114610d365760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d6174636800000000000000000000000000000000000000000000006064820152608401610700565b6000835167ffffffffffffffff811115610d5257610d526120ab565b604051908082528060200260200182016040528015610d7b578160200160208202803683370190505b50905060005b8451811015610df357610dc6858281518110610d9f57610d9f61273c565b6020026020010151858381518110610db957610db961273c565b6020026020010151610686565b828281518110610dd857610dd861273c565b6020908102919091010152610dec81612768565b9050610d81565b509392505050565b6007805461085290612646565b3360009081526004602052604090205460ff16610e38576040516349e27cff60e01b815260040160405180910390fd5b600082815260036020526040902054610e6457604051634a1850bf60e11b815260040160405180910390fd5b6000828152600a602052604090208190600101610e818282612794565b50505050565b3360009081526004602052604090205460ff16610eb7576040516349e27cff60e01b815260040160405180910390fd5b6009805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b3360009081526004602052604090205460ff16610f16576040516349e27cff60e01b815260040160405180910390fd5b600082815260036020526040902054610f4257604051634a1850bf60e11b815260040160405180910390fd5b6000918252600a6020526040909120600201805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03909216919091179055565b6006805461085290612646565b3360009081526004602052604090205460ff16610fbd576040516349e27cff60e01b815260040160405180910390fd5b600855565b610fcd338383611548565b5050565b33610fdb57600080fd5b6000818152600b602052604090205460ff1661100a57604051636aa2a93760e01b815260040160405180910390fd5b61103333826001604051806040016040528060048152602001630307830360e41b81525061163c565b50565b3360009081526004602052604090205460ff16611066576040516349e27cff60e01b815260040160405180910390fd5b8051610fcd906007906020840190611ec8565b600a6020526000908152604090208054819061109490612646565b80601f01602080910402602001604051908101604052809291908181526020018280546110c090612646565b801561110d5780601f106110e25761010080835404028352916020019161110d565b820191906000526020600020905b8154815290600101906020018083116110f057829003601f168201915b505060408051606081018252600187015460ff8082168352610100820481166020840152620100009091048116928201929092526002909601549495946001600160a01b0381169450740100000000000000000000000000000000000000009004169150859050565b3360009081526004602052604090205460ff166111a6576040516349e27cff60e01b815260040160405180910390fd5b600084815260036020526040902054610c8157604051634a1850bf60e11b815260040160405180910390fd5b6000818152600360205260408120546111fe57604051634a1850bf60e11b815260040160405180910390fd5b506000908152600a60205260409020600201546001600160a01b031690565b60606007805461122c90612646565b80601f016020809104026020016040519081016040528092919081815260200182805461125890612646565b80156112a55780601f1061127a576101008083540402835291602001916112a5565b820191906000526020600020905b81548152906001019060200180831161128857829003601f168201915b5050505050905090565b6112ba85858561174c565b610b468585858585611897565b815183511461133e5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d617463680000000000000000000000000000000000000000000000006064820152608401610700565b6001600160a01b0384166113a25760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610700565b336113b1818787878787611932565b60005b84518110156114da5760008582815181106113d1576113d161273c565b6020026020010151905060008583815181106113ef576113ef61273c565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156114825760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610700565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906114bf9084906127f3565b92505081905550505050806114d390612768565b90506113b4565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161152a92919061280b565b60405180910390a4611540818787878787611a47565b505050505050565b816001600160a01b0316836001600160a01b0316036115cf5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c6600000000000000000000000000000000000000000000006064820152608401610700565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b03841661169c5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610700565b336116bc816000876116ad88611bec565b6116b688611bec565b87611932565b6000848152602081815260408083206001600160a01b0389168452909152812080548592906116ec9084906127f3565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610b4681600087878787611c37565b3415610a2c5760006064600854346117649190612830565b61176e919061284f565b6000838152600a602052604080822060020154905192935090916001600160a01b039091169083908381818185875af1925050503d80600081146117ce576040519150601f19603f3d011682016040523d82523d6000602084013e6117d3565b606091505b50509050806117e157600080fd5b60006001600160a01b0386166117f78434612871565b604051600081818185875af1925050503d8060008114611833576040519150601f19603f3d011682016040523d82523d6000602084013e611838565b606091505b505090508061184657600080fd5b604080516001600160a01b03888116825287166020820152348183015290517f3f3483d0995db4c081e0101ef6753bef457833c20605cd871de61dcb48085a9a9181900360600190a1505050505050565b6001600160a01b0385163314806118b357506118b38533610623565b6119255760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f76656400000000000000000000000000000000000000000000006064820152608401610700565b610b468585858585611d33565b6001600160a01b0385166119b95760005b83518110156119b75782818151811061195e5761195e61273c565b60200260200101516003600086848151811061197c5761197c61273c565b6020026020010151815260200190815260200160002060008282546119a191906127f3565b909155506119b0905081612768565b9050611943565b505b6001600160a01b0384166115405760005b8351811015611a3e578281815181106119e5576119e561273c565b602002602001015160036000868481518110611a0357611a0361273c565b602002602001015181526020019081526020016000206000828254611a289190612871565b90915550611a37905081612768565b90506119ca565b50505050505050565b6001600160a01b0384163b156115405760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190611a8b9089908990889088908890600401612888565b6020604051808303816000875af1925050508015611ac6575060408051601f3d908101601f19168201909252611ac3918101906128e6565b60015b611b7b57611ad2612903565b806308c379a003611b0b5750611ae661291f565b80611af15750611b0d565b8060405162461bcd60e51b8152600401610700919061207b565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e7465720000000000000000000000006064820152608401610700565b6001600160e01b0319811663bc197c8160e01b14611a3e5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610700565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110611c2657611c2661273c565b602090810291909101015292915050565b6001600160a01b0384163b156115405760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190611c7b90899089908890889088906004016129a9565b6020604051808303816000875af1925050508015611cb6575060408051601f3d908101601f19168201909252611cb3918101906128e6565b60015b611cc257611ad2612903565b6001600160e01b0319811663f23a6e6160e01b14611a3e5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610700565b6001600160a01b038416611d975760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610700565b33611da78187876116ad88611bec565b6000848152602081815260408083206001600160a01b038a16845290915290205483811015611e2b5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610700565b6000858152602081815260408083206001600160a01b038b8116855292528083208785039055908816825281208054869290611e689084906127f3565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4611a3e828888888888611c37565b828054611ed490612646565b90600052602060002090601f016020900481019282611ef65760008555611f3c565b82601f10611f0f57805160ff1916838001178555611f3c565b82800160010185558215611f3c579182015b82811115611f3c578251825591602001919060010190611f21565b50611f48929150611f4c565b5090565b5b80821115611f485760008155600101611f4d565b6001600160a01b038116811461103357600080fd5b60008060408385031215611f8957600080fd5b8235611f9481611f61565b946020939093013593505050565b6001600160e01b03198116811461103357600080fd5b600060208284031215611fca57600080fd5b8135611fd581611fa2565b9392505050565b600060208284031215611fee57600080fd5b5035919050565b6060810161072c828460ff815116825260ff602082015116602083015260ff60408201511660408301525050565b60005b8381101561203e578181015183820152602001612026565b83811115610e815750506000910152565b60008151808452612067816020860160208601612023565b601f01601f19169290920160200192915050565b602081526000611fd5602083018461204f565b6000602082840312156120a057600080fd5b8135611fd581611f61565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff811182821017156120e7576120e76120ab565b6040525050565b600082601f8301126120ff57600080fd5b813567ffffffffffffffff811115612119576121196120ab565b604051612130601f8301601f1916602001826120c1565b81815284602083860101111561214557600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561217557600080fd5b82359150602083013567ffffffffffffffff81111561219357600080fd5b61219f858286016120ee565b9150509250929050565b600067ffffffffffffffff8211156121c3576121c36120ab565b5060051b60200190565b600082601f8301126121de57600080fd5b813560206121eb826121a9565b6040516121f882826120c1565b83815260059390931b850182019282810191508684111561221857600080fd5b8286015b84811015612233578035835291830191830161221c565b509695505050505050565b600080600080600060a0868803121561225657600080fd5b853561226181611f61565b9450602086013561227181611f61565b9350604086013567ffffffffffffffff8082111561228e57600080fd5b61229a89838a016121cd565b945060608801359150808211156122b057600080fd5b6122bc89838a016121cd565b935060808801359150808211156122d257600080fd5b506122df888289016120ee565b9150509295509295909350565b6000606082840312156122fe57600080fd5b50919050565b60008060008060c0858703121561231a57600080fd5b84359350602085013567ffffffffffffffff81111561233857600080fd5b612344878288016120ee565b93505061235486604087016122ec565b915060a085013561236481611f61565b939692955090935050565b6000806040838503121561238257600080fd5b823567ffffffffffffffff8082111561239a57600080fd5b818501915085601f8301126123ae57600080fd5b813560206123bb826121a9565b6040516123c882826120c1565b83815260059390931b85018201928281019150898411156123e857600080fd5b948201945b8386101561240f57853561240081611f61565b825294820194908201906123ed565b9650508601359250508082111561242557600080fd5b5061219f858286016121cd565b600081518084526020808501945080840160005b8381101561246257815187529582019590820190600101612446565b509495945050505050565b602081526000611fd56020830184612432565b6000806080838503121561249357600080fd5b823591506124a484602085016122ec565b90509250929050565b600080604083850312156124c057600080fd5b8235915060208301356124d281611f61565b809150509250929050565b600080604083850312156124f057600080fd5b82356124fb81611f61565b9150602083013580151581146124d257600080fd5b60006020828403121561252257600080fd5b813567ffffffffffffffff81111561253957600080fd5b612545848285016120ee565b949350505050565b60c08152600061256060c083018761204f565b905061258f602083018660ff815116825260ff602082015116602083015260ff60408201511660408301525050565b6001600160a01b038416608083015282151560a083015295945050505050565b600080604083850312156125c257600080fd5b82356125cd81611f61565b915060208301356124d281611f61565b600080600080600060a086880312156125f557600080fd5b853561260081611f61565b9450602086013561261081611f61565b93506040860135925060608601359150608086013567ffffffffffffffff81111561263a57600080fd5b6122df888289016120ee565b600181811c9082168061265a57607f821691505b6020821081036122fe57634e487b7160e01b600052602260045260246000fd5b6000815161268c818560208601612023565b9290920192915050565b600080845481600182811c9150808316806126b257607f831692505b602080841082036126d157634e487b7160e01b86526022600452602486fd5b8180156126e557600181146126f657612723565b60ff19861689528489019650612723565b60008b81526020902060005b8681101561271b5781548b820152908501908301612702565b505084890196505b505050505050612733818561267a565b95945050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161277a5761277a612752565b5060010190565b6000813560ff8116811461072c57600080fd5b60ff61279f83612781565b1681548160ff19821617835561ff006127ba60208601612781565b60081b16808361ffff1984161717845562ff00006127da60408701612781565b60101b168362ffffff1984161782171784555050505050565b6000821982111561280657612806612752565b500190565b60408152600061281e6040830185612432565b82810360208401526127338185612432565b600081600019048311821515161561284a5761284a612752565b500290565b60008261286c57634e487b7160e01b600052601260045260246000fd5b500490565b60008282101561288357612883612752565b500390565b60006001600160a01b03808816835280871660208401525060a060408301526128b460a0830186612432565b82810360608401526128c68186612432565b905082810360808401526128da818561204f565b98975050505050505050565b6000602082840312156128f857600080fd5b8151611fd581611fa2565b600060033d111561291c5760046000803e5060005160e01c5b90565b600060443d101561292d5790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561295d57505050505090565b82850191508151818111156129755750505050505090565b843d870101602082850101111561298f5750505050505090565b61299e602082860101876120c1565b509095945050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a060808301526129e160a083018461204f565b97965050505050505056fea164736f6c634300080d000a";

type FreeObjectConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FreeObjectConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FreeObject__factory extends ContractFactory {
  constructor(...args: FreeObjectConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _royalityFee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FreeObject> {
    return super.deploy(_royalityFee, overrides || {}) as Promise<FreeObject>;
  }
  override getDeployTransaction(
    _royalityFee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_royalityFee, overrides || {});
  }
  override attach(address: string): FreeObject {
    return super.attach(address) as FreeObject;
  }
  override connect(signer: Signer): FreeObject__factory {
    return super.connect(signer) as FreeObject__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FreeObjectInterface {
    return new utils.Interface(_abi) as FreeObjectInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FreeObject {
    return new Contract(address, _abi, signerOrProvider) as FreeObject;
  }
}
