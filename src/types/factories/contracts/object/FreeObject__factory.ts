/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  FreeObject,
  FreeObjectInterface,
} from "../../../contracts/object/FreeObject";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_treasuryAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ExistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTokenID",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSetTokenSize",
    type: "error",
  },
  {
    inputs: [],
    name: "NonExistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_newPrice",
        type: "uint256",
      },
    ],
    name: "ChangeTokenPrice",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
    ],
    name: "SetCreator",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newMaxClaimed",
        type: "uint256",
      },
    ],
    name: "SetMaxClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_royalityFee",
        type: "uint256",
      },
    ],
    name: "SetRoyalityFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct BaseObject.Size",
        name: "_size",
        type: "tuple",
      },
    ],
    name: "SetSize",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "SetTokenURI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address payable",
        name: "_treasuryAddress",
        type: "address",
      },
    ],
    name: "SetTreasuryAddress",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "baseuri",
        type: "string",
      },
    ],
    name: "SetbaseMetadataURI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allObjects",
    outputs: [
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxClaimed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "forSale",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseMetadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newPrice",
        type: "uint256",
      },
    ],
    name: "changeTokenPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "_size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
    ],
    name: "createObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "created",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseMetadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getCreator",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getFreeObject",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getMaxClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getSize",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "_size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
    ],
    name: "initObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mintBatchObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetAddress",
        type: "address",
      },
    ],
    name: "owner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
    ],
    name: "removeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "royalityFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
    ],
    name: "setCreator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newMaxClaimed",
        type: "uint256",
      },
    ],
    name: "setMaxClaimed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_royalityFee",
        type: "uint256",
      },
    ],
    name: "setRoyalityFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "_size",
        type: "tuple",
      },
    ],
    name: "setSize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "setTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_treasuryAddress",
        type: "address",
      },
    ],
    name: "setTreasuryAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "baseuri",
        type: "string",
      },
    ],
    name: "setbaseMetadataURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasuryAddress",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620031cc380380620031cc8339810160408190526200003491620001f8565b6040805160208101909152600081526200004e8162000139565b5033600090815260046020908152604091829020805460ff191660011790558151808301909252600b8083526a467265654f626a6563747360a81b929091019182526200009e9160059162000152565b5060408051808201909152600380825262464f5360e81b6020909201918252620000cb9160069162000152565b506040805180820190915260188082527f68747470733a2f2f7777772e617277656176652e6e65742f00000000000000006020909201918252620001129160079162000152565b50600980546001600160a01b0319166001600160a01b039290921691909117905562000266565b80516200014e90600290602084019062000152565b5050565b82805462000160906200022a565b90600052602060002090601f016020900481019282620001845760008555620001cf565b82601f106200019f57805160ff1916838001178555620001cf565b82800160010185558215620001cf579182015b82811115620001cf578251825591602001919060010190620001b2565b50620001dd929150620001e1565b5090565b5b80821115620001dd5760008155600101620001e2565b6000602082840312156200020b57600080fd5b81516001600160a01b03811681146200022357600080fd5b9392505050565b600181811c908216806200023f57607f821691505b6020821081036200026057634e487b7160e01b600052602260045260246000fd5b50919050565b612f5680620002766000396000f3fe6080604052600436106102845760003560e01c8063666e1b3911610153578063b6ed6da9116100cb578063cf467b431161007f578063e985e9c511610064578063e985e9c5146107a5578063ea2fe3cb146107ee578063f242432a1461080357600080fd5b8063cf467b431461074c578063d48e638a1461076c57600080fd5b8063c457fb37116100b0578063c457fb37146106b2578063c5f956af146106e2578063cbdac7101461071a57600080fd5b8063b6ed6da914610665578063bd85b0391461068557600080fd5b806395d89b411161012257806398f246821161010757806398f2468214610612578063a22cb46514610632578063ab231c321461065257600080fd5b806395d89b41146105cd5780639733faa5146105e257600080fd5b8063666e1b3914610524578063697436d91461055d57806382cb6b721461057d57806391686f53146105ad57600080fd5b80632eb2c2d6116102015780634f558e79116101b5578063604c7f801161019a578063604c7f80146104c457806362e8e8ac146104e45780636605bfda1461050457600080fd5b80634f558e79146104805780635b2bd79e146104af57600080fd5b80633bb3a24d116101e65780633bb3a24d146104135780633e545f02146104335780634e1273f41461045357600080fd5b80632eb2c2d6146103dd578063326bb4ad146103fd57600080fd5b80630d09308e1161025857806313af40351161023d57806313af40351461037d578063162094c41461039d578063173825d9146103bd57600080fd5b80630d09308e1461033b5780630e89341c1461035d57600080fd5b8062fdd58e1461028957806301ffc9a7146102bc578063023c23db146102ec57806306fdde0314610319575b600080fd5b34801561029557600080fd5b506102a96102a43660046123d2565b610823565b6040519081526020015b60405180910390f35b3480156102c857600080fd5b506102dc6102d7366004612414565b6108cf565b60405190151581526020016102b3565b3480156102f857600080fd5b5061030c610307366004612438565b61091f565b6040516102b39190612451565b34801561032557600080fd5b5061032e6109b9565b6040516102b391906124d7565b34801561034757600080fd5b5061035b6103563660046124ea565b610a47565b005b34801561036957600080fd5b5061032e610378366004612438565b610aca565b34801561038957600080fd5b5061035b61039836600461250c565b610b2e565b3480156103a957600080fd5b5061035b6103b83660046125e0565b610bab565b3480156103c957600080fd5b5061035b6103d836600461250c565b610c2c565b3480156103e957600080fd5b5061035b6103f83660046126bc565b610ca6565b34801561040957600080fd5b506102a960085481565b34801561041f57600080fd5b5061032e61042e366004612438565b610d48565b34801561043f57600080fd5b5061035b61044e36600461276a565b610dea565b34801561045f57600080fd5b5061047361046e3660046127e0565b610ebc565b6040516102b391906128de565b34801561048c57600080fd5b506102dc61049b366004612438565b600090815260036020526040902054151590565b3480156104bb57600080fd5b5061032e610ffa565b3480156104d057600080fd5b5061035b6104df366004612976565b611007565b3480156104f057600080fd5b5061035b6104ff3660046124ea565b6110b7565b34801561051057600080fd5b5061035b61051f36600461250c565b611132565b34801561053057600080fd5b506102dc61053f36600461250c565b6001600160a01b031660009081526004602052604090205460ff1690565b34801561056957600080fd5b5061035b6105783660046129a3565b6111c4565b34801561058957600080fd5b506102dc610598366004612438565b600b6020526000908152604090205460ff1681565b3480156105b957600080fd5b5061035b6105c8366004612a3e565b611206565b3480156105d957600080fd5b5061032e6112a5565b3480156105ee57600080fd5b506102a96105fd366004612438565b6000908152600a602052604090206003015490565b34801561061e57600080fd5b5061035b61062d366004612438565b6112b2565b34801561063e57600080fd5b5061035b61064d366004612a6e565b611317565b61035b610660366004612438565b611326565b34801561067157600080fd5b5061035b610680366004612aa1565b611383565b34801561069157600080fd5b506102a96106a0366004612438565b60009081526003602052604090205490565b3480156106be57600080fd5b506102a96106cd366004612438565b6000908152600a602052604090206004015490565b3480156106ee57600080fd5b50600954610702906001600160a01b031681565b6040516001600160a01b0390911681526020016102b3565b34801561072657600080fd5b5061073a610735366004612438565b6113f6565b6040516102b396959493929190612ade565b34801561075857600080fd5b5061035b61076736600461276a565b6114ed565b34801561077857600080fd5b50610702610787366004612438565b6000908152600a60205260409020600201546001600160a01b031690565b3480156107b157600080fd5b506102dc6107c0366004612b50565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b3480156107fa57600080fd5b5061032e6115a7565b34801561080f57600080fd5b5061035b61081e366004612b7e565b611639565b60006001600160a01b0383166108a65760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b148061090057506001600160e01b031982166303a24d0760e21b145b806108c957506301ffc9a760e01b6001600160e01b03198316146108c9565b60408051606081018252600080825260208201819052918101919091526000828152600a602052604081206001015460ff1690036109705760405163a8e3a97360e01b815260040160405180910390fd5b506000908152600a6020908152604091829020825160608101845260019091015460ff808216835261010082048116938301939093526201000090049091169181019190915290565b600580546109c690612be7565b80601f01602080910402602001604051908101604052809291908181526020018280546109f290612be7565b8015610a3f5780601f10610a1457610100808354040283529160200191610a3f565b820191906000526020600020905b815481529060010190602001808311610a2257829003601f168201915b505050505081565b3360009081526004602052604090205460ff16610a77576040516349e27cff60e01b815260040160405180910390fd5b6000828152600a602090815260409182902060030183905581518481529081018390527fad41bb8f5516e8c7946d99bc48fd3ff0a07239c8ffcf2d103a0612b9ab44a60a91015b60405180910390a15050565b6000818152600b602052604090205460609060ff16610afc57604051636aa2a93760e01b815260040160405180910390fd5b6007610b0783610d48565b604051602001610b18929190612c3d565b6040516020818303038152906040529050919050565b3360009081526004602052604090205460ff16610b5e576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260046020526040808220805460ff191660011790555133917f619792ba07bec101df538ab277befa333e4cf1c0274f11de7be2a9507b9c9a0691a350565b3360009081526004602052604090205460ff16610bdb576040516349e27cff60e01b815260040160405180910390fd5b6000828152600a602090815260409091208251610bfa92840190612324565b507fd2d827dddfc9c9a02afc5fc68d3251684b36e213a7999ebd90a861f25df4077e8282604051610abe929190612ce3565b3360009081526004602052604090205460ff16610c5c576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260046020526040808220805460ff191690555133917fc191551a88c5609788f3532bd94c06479b61b0040eec65f9cd985428ffea643091a350565b6001600160a01b038516331480610cc25750610cc285336107c0565b610d345760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f7665640000000000000000000000000000606482015260840161089d565b610d4185858585856116d4565b5050505050565b6000818152600a60205260409020805460609190610d6590612be7565b80601f0160208091040260200160405190810160405280929190818152602001828054610d9190612be7565b8015610dde5780601f10610db357610100808354040283529160200191610dde565b820191906000526020600020905b815481529060010190602001808311610dc157829003601f168201915b50505050509050919050565b3360009081526004602052604090205460ff16610e1a576040516349e27cff60e01b815260040160405180910390fd5b33610e2457600080fd5b60008481526003602052604090205415610e51576040516387cf36d160e01b815260040160405180910390fd5b610e5b8484610bab565b610e6e846104df36859003850185612cfc565b610e788482611206565b610e838460006110b7565b5050506000908152600a602090815260408083206005018054600160ff199182168117909255600b909352922080549091169091179055565b60608151835114610f355760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d617463680000000000000000000000000000000000000000000000606482015260840161089d565b6000835167ffffffffffffffff811115610f5157610f51612529565b604051908082528060200260200182016040528015610f7a578160200160208202803683370190505b50905060005b8451811015610ff257610fc5858281518110610f9e57610f9e612d18565b6020026020010151858381518110610fb857610fb8612d18565b6020026020010151610823565b828281518110610fd757610fd7612d18565b6020908102919091010152610feb81612d44565b9050610f80565b509392505050565b600780546109c690612be7565b3360009081526004602052604090205460ff16611037576040516349e27cff60e01b815260040160405180910390fd5b6000828152600a6020908152604091829020835160019091018054928501518486015160ff908116620100000262ff0000199282166101000261ffff1990961691909416179390931792909216179055517f83d2c962dbfe1e531221a6c10019100c9fb9eab5926b38eaf133722b6db2210590610abe9084908490612d5d565b3360009081526004602052604090205460ff166110e7576040516349e27cff60e01b815260040160405180910390fd5b6000828152600a602090815260409182902060040183905581518481529081018390527f415cf995faccaec43ce108f2713ebcdb2812b0e0689a8fa7dfdcabf78109ebbb9101610abe565b3360009081526004602052604090205460ff16611162576040516349e27cff60e01b815260040160405180910390fd5b6009805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527feee016301a2725a577c64816adf35ccf644d07439731069a31748ec3b9102c60906020015b60405180910390a150565b3360009081526004602052604090205460ff166111f4576040516349e27cff60e01b815260040160405180910390fd5b61120084848484611940565b50505050565b3360009081526004602052604090205460ff16611236576040516349e27cff60e01b815260040160405180910390fd5b6000828152600a6020908152604091829020600201805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0385169081179091558251858152918201527f02df56823aeec019d75f2c2396e2a9c68868b26ccc5a4cd9412b2a78f8602f739101610abe565b600680546109c690612be7565b3360009081526004602052604090205460ff166112e2576040516349e27cff60e01b815260040160405180910390fd5b60088190556040518181527f184fa17d2176718ea1955f61782c763ce239e39e790340793f227b0ba5db53e1906020016111b9565b611322338383611b15565b5050565b3361133057600080fd5b6000818152600a602052604090206005015460ff1661134e57600080fd5b61135781611c09565b61138033826001604051806040016040528060048152602001630307830360e41b815250611c7e565b50565b3360009081526004602052604090205460ff166113b3576040516349e27cff60e01b815260040160405180910390fd5b80516113c6906007906020840190612324565b507ffa52149a99a7016c4576d7bb33adefe5c4372aeded2a98a40f46d6ef33109c4d816040516111b991906124d7565b600a6020526000908152604090208054819061141190612be7565b80601f016020809104026020016040519081016040528092919081815260200182805461143d90612be7565b801561148a5780601f1061145f5761010080835404028352916020019161148a565b820191906000526020600020905b81548152906001019060200180831161146d57829003601f168201915b505060408051606081018252600187015460ff808216835261010082048116602084015262010000909104811692820192909252600287015460038801546004890154600590990154979892976001600160a01b03909216965094509092501686565b3360009081526004602052604090205460ff1661151d576040516349e27cff60e01b815260040160405180910390fd5b60008481526003602052604090205461154957604051634a1850bf60e11b815260040160405180910390fd5b611557846305f5e0ff610a47565b6115618484610bab565b611574846104df36859003850185612cfc565b61157e8482611206565b6115898460006110b7565b5050506000908152600b60205260409020805460ff19166001179055565b6060600780546115b690612be7565b80601f01602080910402602001604051908101604052809291908181526020018280546115e290612be7565b801561162f5780601f106116045761010080835404028352916020019161162f565b820191906000526020600020905b81548152906001019060200180831161161257829003601f168201915b5050505050905090565b6001600160a01b038516331480611655575061165585336107c0565b6116c75760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f7665640000000000000000000000000000000000000000000000606482015260840161089d565b610d418585858585611d8e565b81518351146117365760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b606482015260840161089d565b6001600160a01b03841661179a5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b606482015260840161089d565b336117a9818787878787611f2c565b60005b84518110156118d25760008582815181106117c9576117c9612d18565b6020026020010151905060008583815181106117e7576117e7612d18565b602090810291909101810151600084815280835260408082206001600160a01b038e16835290935291909120549091508181101561187a5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b606482015260840161089d565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906118b7908490612d91565b92505081905550505050806118cb90612d44565b90506117ac565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051611922929190612da9565b60405180910390a4611938818787878787612038565b505050505050565b6001600160a01b0384166119a05760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b606482015260840161089d565b8151835114611a025760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b606482015260840161089d565b33611a1281600087878787611f2c565b60005b8451811015611aad57838181518110611a3057611a30612d18565b6020026020010151600080878481518110611a4d57611a4d612d18565b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b031681526020019081526020016000206000828254611a959190612d91565b90915550819050611aa581612d44565b915050611a15565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051611afe929190612da9565b60405180910390a4610d4181600087878787612038565b816001600160a01b0316836001600160a01b031603611b9c5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c660000000000000000000000000000000000000000000000606482015260840161089d565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b801580611c3157506000818152600a6020908152604080832060039081015492529091205410155b15611c4f57604051636aa2a93760e01b815260040160405180910390fd5b6000818152600b602052604090205460ff1661138057604051636aa2a93760e01b815260040160405180910390fd5b6001600160a01b038416611cde5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b606482015260840161089d565b33611cfe81600087611cef886121dd565b611cf8886121dd565b87611f2c565b6000848152602081815260408083206001600160a01b038916845290915281208054859290611d2e908490612d91565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610d4181600087878787612228565b6001600160a01b038416611df25760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b606482015260840161089d565b33611e02818787611cef886121dd565b6000848152602081815260408083206001600160a01b038a16845290915290205483811015611e865760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b606482015260840161089d565b6000858152602081815260408083206001600160a01b038b8116855292528083208785039055908816825281208054869290611ec3908490612d91565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4611f23828888888888612228565b50505050505050565b6001600160a01b038516611fb35760005b8351811015611fb157828181518110611f5857611f58612d18565b602002602001015160036000868481518110611f7657611f76612d18565b602002602001015181526020019081526020016000206000828254611f9b9190612d91565b90915550611faa905081612d44565b9050611f3d565b505b6001600160a01b0384166119385760005b8351811015611f2357828181518110611fdf57611fdf612d18565b602002602001015160036000868481518110611ffd57611ffd612d18565b6020026020010151815260200190815260200160002060008282546120229190612dce565b90915550612031905081612d44565b9050611fc4565b6001600160a01b0384163b156119385760405163bc197c8160e01b81526001600160a01b0385169063bc197c819061207c9089908990889088908890600401612de5565b6020604051808303816000875af19250505080156120b7575060408051601f3d908101601f191682019092526120b491810190612e43565b60015b61216c576120c3612e60565b806308c379a0036120fc57506120d7612e7c565b806120e257506120fe565b8060405162461bcd60e51b815260040161089d91906124d7565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e746572000000000000000000000000606482015260840161089d565b6001600160e01b0319811663bc197c8160e01b14611f235760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b606482015260840161089d565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061221757612217612d18565b602090810291909101015292915050565b6001600160a01b0384163b156119385760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e619061226c9089908990889088908890600401612f06565b6020604051808303816000875af19250505080156122a7575060408051601f3d908101601f191682019092526122a491810190612e43565b60015b6122b3576120c3612e60565b6001600160e01b0319811663f23a6e6160e01b14611f235760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b606482015260840161089d565b82805461233090612be7565b90600052602060002090601f0160209004810192826123525760008555612398565b82601f1061236b57805160ff1916838001178555612398565b82800160010185558215612398579182015b8281111561239857825182559160200191906001019061237d565b506123a49291506123a8565b5090565b5b808211156123a457600081556001016123a9565b6001600160a01b038116811461138057600080fd5b600080604083850312156123e557600080fd5b82356123f0816123bd565b946020939093013593505050565b6001600160e01b03198116811461138057600080fd5b60006020828403121561242657600080fd5b8135612431816123fe565b9392505050565b60006020828403121561244a57600080fd5b5035919050565b606081016108c9828460ff815116825260ff602082015116602083015260ff60408201511660408301525050565b60005b8381101561249a578181015183820152602001612482565b838111156112005750506000910152565b600081518084526124c381602086016020860161247f565b601f01601f19169290920160200192915050565b60208152600061243160208301846124ab565b600080604083850312156124fd57600080fd5b50508035926020909101359150565b60006020828403121561251e57600080fd5b8135612431816123bd565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff8111828210171561256557612565612529565b6040525050565b600082601f83011261257d57600080fd5b813567ffffffffffffffff81111561259757612597612529565b6040516125ae601f8301601f19166020018261253f565b8181528460208386010111156125c357600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156125f357600080fd5b82359150602083013567ffffffffffffffff81111561261157600080fd5b61261d8582860161256c565b9150509250929050565b600067ffffffffffffffff82111561264157612641612529565b5060051b60200190565b600082601f83011261265c57600080fd5b8135602061266982612627565b604051612676828261253f565b83815260059390931b850182019282810191508684111561269657600080fd5b8286015b848110156126b1578035835291830191830161269a565b509695505050505050565b600080600080600060a086880312156126d457600080fd5b85356126df816123bd565b945060208601356126ef816123bd565b9350604086013567ffffffffffffffff8082111561270c57600080fd5b61271889838a0161264b565b9450606088013591508082111561272e57600080fd5b61273a89838a0161264b565b9350608088013591508082111561275057600080fd5b5061275d8882890161256c565b9150509295509295909350565b60008060008084860360c081121561278157600080fd5b85359450602086013567ffffffffffffffff81111561279f57600080fd5b6127ab8882890161256c565b9450506060603f19820112156127c057600080fd5b5060408501915060a08501356127d5816123bd565b939692955090935050565b600080604083850312156127f357600080fd5b823567ffffffffffffffff8082111561280b57600080fd5b818501915085601f83011261281f57600080fd5b8135602061282c82612627565b604051612839828261253f565b83815260059390931b850182019282810191508984111561285957600080fd5b948201945b83861015612880578535612871816123bd565b8252948201949082019061285e565b9650508601359250508082111561289657600080fd5b5061261d8582860161264b565b600081518084526020808501945080840160005b838110156128d3578151875295820195908201906001016128b7565b509495945050505050565b60208152600061243160208301846128a3565b803560ff8116811461290257600080fd5b919050565b60006060828403121561291957600080fd5b6040516060810181811067ffffffffffffffff8211171561293c5761293c612529565b60405290508061294b836128f1565b8152612959602084016128f1565b602082015261296a604084016128f1565b60408201525092915050565b6000806080838503121561298957600080fd5b8235915061299a8460208501612907565b90509250929050565b600080600080608085870312156129b957600080fd5b84356129c4816123bd565b9350602085013567ffffffffffffffff808211156129e157600080fd5b6129ed8883890161264b565b94506040870135915080821115612a0357600080fd5b612a0f8883890161264b565b93506060870135915080821115612a2557600080fd5b50612a328782880161256c565b91505092959194509250565b60008060408385031215612a5157600080fd5b823591506020830135612a63816123bd565b809150509250929050565b60008060408385031215612a8157600080fd5b8235612a8c816123bd565b915060208301358015158114612a6357600080fd5b600060208284031215612ab357600080fd5b813567ffffffffffffffff811115612aca57600080fd5b612ad68482850161256c565b949350505050565b6000610100808352612af28184018a6124ab565b915050612b22602083018860ff815116825260ff602082015116602083015260ff60408201511660408301525050565b6001600160a01b03861660808301528460a08301528360c083015282151560e0830152979650505050505050565b60008060408385031215612b6357600080fd5b8235612b6e816123bd565b91506020830135612a63816123bd565b600080600080600060a08688031215612b9657600080fd5b8535612ba1816123bd565b94506020860135612bb1816123bd565b93506040860135925060608601359150608086013567ffffffffffffffff811115612bdb57600080fd5b61275d8882890161256c565b600181811c90821680612bfb57607f821691505b602082108103612c1b57634e487b7160e01b600052602260045260246000fd5b50919050565b60008151612c3381856020860161247f565b9290920192915050565b600080845481600182811c915080831680612c5957607f831692505b60208084108203612c7857634e487b7160e01b86526022600452602486fd5b818015612c8c5760018114612c9d57612cca565b60ff19861689528489019650612cca565b60008b81526020902060005b86811015612cc25781548b820152908501908301612ca9565b505084890196505b505050505050612cda8185612c21565b95945050505050565b828152604060208201526000612ad660408301846124ab565b600060608284031215612d0e57600080fd5b6124318383612907565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201612d5657612d56612d2e565b5060010190565b82815260808101612431602083018460ff815116825260ff602082015116602083015260ff60408201511660408301525050565b60008219821115612da457612da4612d2e565b500190565b604081526000612dbc60408301856128a3565b8281036020840152612cda81856128a3565b600082821015612de057612de0612d2e565b500390565b60006001600160a01b03808816835280871660208401525060a06040830152612e1160a08301866128a3565b8281036060840152612e2381866128a3565b90508281036080840152612e3781856124ab565b98975050505050505050565b600060208284031215612e5557600080fd5b8151612431816123fe565b600060033d1115612e795760046000803e5060005160e01c5b90565b600060443d1015612e8a5790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715612eba57505050505090565b8285019150815181811115612ed25750505050505090565b843d8701016020828501011115612eec5750505050505090565b612efb6020828601018761253f565b509095945050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a06080830152612f3e60a08301846124ab565b97965050505050505056fea164736f6c634300080d000a";

type FreeObjectConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FreeObjectConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FreeObject__factory extends ContractFactory {
  constructor(...args: FreeObjectConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _treasuryAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FreeObject> {
    return super.deploy(
      _treasuryAddress,
      overrides || {}
    ) as Promise<FreeObject>;
  }
  override getDeployTransaction(
    _treasuryAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_treasuryAddress, overrides || {});
  }
  override attach(address: string): FreeObject {
    return super.attach(address) as FreeObject;
  }
  override connect(signer: Signer): FreeObject__factory {
    return super.connect(signer) as FreeObject__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FreeObjectInterface {
    return new utils.Interface(_abi) as FreeObjectInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FreeObject {
    return new Contract(address, _abi, signerOrProvider) as FreeObject;
  }
}
