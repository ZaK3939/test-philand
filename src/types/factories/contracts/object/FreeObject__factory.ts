/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  FreeObject,
  FreeObjectInterface,
} from "../../../contracts/object/FreeObject";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_treasuryAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ExistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTokenID",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSetTokenSize",
    type: "error",
  },
  {
    inputs: [],
    name: "NonExistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "PaymentBalanceZero",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_newPrice",
        type: "uint256",
      },
    ],
    name: "ChangeTokenPrice",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentReceivedOwner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentWithdrawnOwner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
    ],
    name: "SetCreator",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newMaxClaimed",
        type: "uint256",
      },
    ],
    name: "SetMaxClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_royalityFee",
        type: "uint256",
      },
    ],
    name: "SetRoyalityFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_secondaryRoyalty",
        type: "uint256",
      },
    ],
    name: "SetSecondaryRoyalityFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "x",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "y",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "z",
        type: "uint8",
      },
    ],
    name: "SetSize",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "SetTokenURI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address payable",
        name: "_treasuryAddress",
        type: "address",
      },
    ],
    name: "SetTreasuryAddress",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "baseuri",
        type: "string",
      },
    ],
    name: "SetbaseMetadataURI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allObjects",
    outputs: [
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxClaimed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "forSale",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseMetadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "batchGetFreeObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newPrice",
        type: "uint256",
      },
    ],
    name: "changeTokenPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "_size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
    ],
    name: "createObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "created",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseMetadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getCreator",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getFreeObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getMaxClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getSize",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "_size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
    ],
    name: "initObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mintBatchObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetAddress",
        type: "address",
      },
    ],
    name: "owner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paymentBalanceOwner",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
    ],
    name: "removeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "royalityFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "secondaryRoyalty",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
    ],
    name: "setCreator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newMaxClaimed",
        type: "uint256",
      },
    ],
    name: "setMaxClaimed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_royalityFee",
        type: "uint256",
      },
    ],
    name: "setRoyalityFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_secondaryRoyalty",
        type: "uint256",
      },
    ],
    name: "setSecondaryRoyalityFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "_size",
        type: "tuple",
      },
    ],
    name: "setSize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "setTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_treasuryAddress",
        type: "address",
      },
    ],
    name: "setTreasuryAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseMetadataURI",
        type: "string",
      },
    ],
    name: "setbaseMetadataURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasuryAddress",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "withdrawTo",
        type: "address",
      },
    ],
    name: "withdrawOwnerBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200364d3803806200364d8339810160408190526200003491620001fe565b604080516020808201835260008083523381529081905291909120805460ff1916600117905562000065816200013f565b50600160055560408051808201909152600b8082526a467265654f626a6563747360a81b60209092019182526200009f9160069162000158565b5060408051808201909152600380825262464f5360e81b6020909201918252620000cc9160079162000158565b506040805180820190915260188082527f68747470733a2f2f7777772e617277656176652e6e65742f00000000000000006020909201918252620001139160089162000158565b50600980546001600160a01b0319166001600160a01b03929092169190911790556064600b556200026c565b80516200015490600390602084019062000158565b5050565b828054620001669062000230565b90600052602060002090601f0160209004810192826200018a5760008555620001d5565b82601f10620001a557805160ff1916838001178555620001d5565b82800160010185558215620001d5579182015b82811115620001d5578251825591602001919060010190620001b8565b50620001e3929150620001e7565b5090565b5b80821115620001e35760008155600101620001e8565b6000602082840312156200021157600080fd5b81516001600160a01b03811681146200022957600080fd5b9392505050565b600181811c908216806200024557607f821691505b6020821081036200026657634e487b7160e01b600052602260045260246000fd5b50919050565b6133d1806200027c6000396000f3fe6080604052600436106102ea5760003560e01c8063666e1b3911610184578063ab231c32116100d6578063cbdac7101161008a578063e985e9c511610064578063e985e9c5146108f1578063ea2fe3cb1461093a578063f242432a1461094f57600080fd5b8063cbdac71014610866578063cf467b4314610898578063d48e638a146108b857600080fd5b8063bd85b039116100bb578063bd85b039146107d1578063c457fb37146107fe578063c5f956af1461082e57600080fd5b8063ab231c3214610791578063b6ed6da9146107b157600080fd5b806391686f53116101385780639733faa5116101125780639733faa51461072157806398f2468214610751578063a22cb4651461077157600080fd5b806391686f53146106d65780639291671a146106f657806395d89b411461070c57600080fd5b8063697436d911610169578063697436d9146106665780637061d4861461068657806382cb6b72146106a657600080fd5b8063666e1b391461060d57806367478a351461064657600080fd5b80632a55205a1161023d5780634e1273f4116101f1578063604c7f80116101cb578063604c7f80146105ad57806362e8e8ac146105cd5780636605bfda146105ed57600080fd5b80634e1273f41461053c5780634f558e79146105695780635b2bd79e1461059857600080fd5b8063326bb4ad11610222578063326bb4ad146104e65780633bb3a24d146104fc5780633e545f021461051c57600080fd5b80632a55205a146104875780632eb2c2d6146104c657600080fd5b80630d09308e1161029f578063162094c411610279578063162094c414610431578063173825d9146104515780631e4c78871461047157600080fd5b80630d09308e146103d15780630e89341c146103f157806313af40351461041157600080fd5b806301ffc9a7116102d057806301ffc9a714610352578063023c23db1461038257806306fdde03146103af57600080fd5b8062fdd58e146102ff578063013bc6c51461033257600080fd5b366102fa576102f83461096f565b005b600080fd5b34801561030b57600080fd5b5061031f61031a366004612822565b6109bc565b6040519081526020015b60405180910390f35b34801561033e57600080fd5b506102f861034d366004612926565b610a6a565b34801561035e57600080fd5b5061037261036d366004612979565b610aae565b6040519015158152602001610329565b34801561038e57600080fd5b506103a261039d36600461299d565b610afe565b60405161032991906129b6565b3480156103bb57600080fd5b506103c4610b98565b6040516103299190612a3c565b3480156103dd57600080fd5b506102f86103ec366004612a4f565b610c26565b3480156103fd57600080fd5b506103c461040c36600461299d565b610ca9565b34801561041d57600080fd5b506102f861042c366004612a71565b610d0d565b34801561043d57600080fd5b506102f861044c366004612b02565b610d8a565b34801561045d57600080fd5b506102f861046c366004612a71565b610e0b565b34801561047d57600080fd5b5061031f600c5481565b34801561049357600080fd5b506104a76104a2366004612a4f565b610e85565b604080516001600160a01b039093168352602083019190915201610329565b3480156104d257600080fd5b506102f86104e1366004612b49565b610eaf565b3480156104f257600080fd5b5061031f600a5481565b34801561050857600080fd5b506103c461051736600461299d565b610f51565b34801561052857600080fd5b506102f8610537366004612bf7565b610ff3565b34801561054857600080fd5b5061055c610557366004612c6d565b6110bb565b6040516103299190612d6b565b34801561057557600080fd5b5061037261058436600461299d565b600090815260046020526040902054151590565b3480156105a457600080fd5b506103c46111f9565b3480156105b957600080fd5b506102f86105c8366004612e03565b611206565b3480156105d957600080fd5b506102f86105e8366004612a4f565b6112c8565b3480156105f957600080fd5b506102f8610608366004612a71565b611343565b34801561061957600080fd5b50610372610628366004612a71565b6001600160a01b031660009081526020819052604090205460ff1690565b34801561065257600080fd5b506102f8610661366004612a71565b6113d5565b34801561067257600080fd5b506102f8610681366004612e30565b611538565b34801561069257600080fd5b506102f86106a136600461299d565b61157a565b3480156106b257600080fd5b506103726106c136600461299d565b600e6020526000908152604090205460ff1681565b3480156106e257600080fd5b506102f86106f1366004612ecb565b6115df565b34801561070257600080fd5b5061031f600b5481565b34801561071857600080fd5b506103c461167e565b34801561072d57600080fd5b5061031f61073c36600461299d565b6000908152600d602052604090206003015490565b34801561075d57600080fd5b506102f861076c36600461299d565b61168b565b34801561077d57600080fd5b506102f861078c366004612efb565b6116f0565b34801561079d57600080fd5b506102f86107ac36600461299d565b6116fb565b3480156107bd57600080fd5b506102f86107cc366004612f2e565b611758565b3480156107dd57600080fd5b5061031f6107ec36600461299d565b60009081526004602052604090205490565b34801561080a57600080fd5b5061031f61081936600461299d565b6000908152600d602052604090206004015490565b34801561083a57600080fd5b5060095461084e906001600160a01b031681565b6040516001600160a01b039091168152602001610329565b34801561087257600080fd5b5061088661088136600461299d565b6117cb565b60405161032996959493929190612f63565b3480156108a457600080fd5b506102f86108b3366004612bf7565b6118c2565b3480156108c457600080fd5b5061084e6108d336600461299d565b6000908152600d60205260409020600201546001600160a01b031690565b3480156108fd57600080fd5b5061037261090c366004612fd5565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205460ff1690565b34801561094657600080fd5b506103c4611962565b34801561095b57600080fd5b506102f861096a366004613003565b6119f4565b6040518181527faab58724194bfb12b018298382453c333764e73d19ec73cb98d26f8dd10d29cc9060200160405180910390a180600c60008282546109b49190613082565b909155505050565b60006001600160a01b038316610a3f5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b5060008181526001602090815260408083206001600160a01b03861684529091529020545b92915050565b60005b8151811015610aaa57610a98828281518110610a8b57610a8b61309a565b60200260200101516116fb565b80610aa2816130b0565b915050610a6d565b5050565b60006001600160e01b03198216636cdb3d1360e11b1480610adf57506001600160e01b031982166303a24d0760e21b145b80610a6457506301ffc9a760e01b6001600160e01b0319831614610a64565b60408051606081018252600080825260208201819052918101919091526000828152600d602052604081206001015460ff169003610b4f5760405163a8e3a97360e01b815260040160405180910390fd5b506000908152600d6020908152604091829020825160608101845260019091015460ff808216835261010082048116938301939093526201000090049091169181019190915290565b60068054610ba5906130c9565b80601f0160208091040260200160405190810160405280929190818152602001828054610bd1906130c9565b8015610c1e5780601f10610bf357610100808354040283529160200191610c1e565b820191906000526020600020905b815481529060010190602001808311610c0157829003601f168201915b505050505081565b3360009081526020819052604090205460ff16610c56576040516349e27cff60e01b815260040160405180910390fd5b6000828152600d602090815260409182902060030183905581518481529081018390527fad41bb8f5516e8c7946d99bc48fd3ff0a07239c8ffcf2d103a0612b9ab44a60a91015b60405180910390a15050565b6000818152600e602052604090205460609060ff16610cdb57604051636aa2a93760e01b815260040160405180910390fd5b6008610ce683610f51565b604051602001610cf792919061311f565b6040516020818303038152906040529050919050565b3360009081526020819052604090205460ff16610d3d576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260208190526040808220805460ff191660011790555133917f619792ba07bec101df538ab277befa333e4cf1c0274f11de7be2a9507b9c9a0691a350565b3360009081526020819052604090205460ff16610dba576040516349e27cff60e01b815260040160405180910390fd5b6000828152600d602090815260409091208251610dd992840190612774565b507fd2d827dddfc9c9a02afc5fc68d3251684b36e213a7999ebd90a861f25df4077e8282604051610c9d9291906131c5565b3360009081526020819052604090205460ff16610e3b576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260208190526040808220805460ff191690555133917fc191551a88c5609788f3532bd94c06479b61b0040eec65f9cd985428ffea643091a350565b60008030612710600b5485610e9a91906131de565b610ea491906131fd565b915091509250929050565b6001600160a01b038516331480610ecb5750610ecb853361090c565b610f3d5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f76656400000000000000000000000000006064820152608401610a36565b610f4a8585858585611a8f565b5050505050565b6000818152600d60205260409020805460609190610f6e906130c9565b80601f0160208091040260200160405190810160405280929190818152602001828054610f9a906130c9565b8015610fe75780601f10610fbc57610100808354040283529160200191610fe7565b820191906000526020600020905b815481529060010190602001808311610fca57829003601f168201915b50505050509050919050565b3360009081526020819052604090205460ff16611023576040516349e27cff60e01b815260040160405180910390fd5b60008481526004602052604090205415611050576040516387cf36d160e01b815260040160405180910390fd5b61105a8484610d8a565b61106d846105c83685900385018561321f565b61107784826115df565b6110828460006112c8565b5050506000908152600d602090815260408083206005018054600160ff199182168117909255600e909352922080549091169091179055565b606081518351146111345760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d6174636800000000000000000000000000000000000000000000006064820152608401610a36565b6000835167ffffffffffffffff8111156111505761115061284e565b604051908082528060200260200182016040528015611179578160200160208202803683370190505b50905060005b84518110156111f1576111c485828151811061119d5761119d61309a565b60200260200101518583815181106111b7576111b761309a565b60200260200101516109bc565b8282815181106111d6576111d661309a565b60209081029190910101526111ea816130b0565b905061117f565b509392505050565b60088054610ba5906130c9565b3360009081526020819052604090205460ff16611236576040516349e27cff60e01b815260040160405180910390fd5b6000828152600d6020908152604091829020835160019091018054858401518686015160ff94851661ffff1990931683176101009286169283021762ff000019166201000095909116948502179092558451878152938401529282019290925260608101919091527fd8e7c8605fecaf6228c6b5f990bc7f1e865694cc587ef62fe729b926915ef7e090608001610c9d565b3360009081526020819052604090205460ff166112f8576040516349e27cff60e01b815260040160405180910390fd5b6000828152600d602090815260409182902060040183905581518481529081018390527f415cf995faccaec43ce108f2713ebcdb2812b0e0689a8fa7dfdcabf78109ebbb9101610c9d565b3360009081526020819052604090205460ff16611373576040516349e27cff60e01b815260040160405180910390fd5b6009805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527feee016301a2725a577c64816adf35ccf644d07439731069a31748ec3b9102c60906020015b60405180910390a150565b3360009081526020819052604090205460ff16611405576040516349e27cff60e01b815260040160405180910390fd5b6002600554036114575760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610a36565b6002600555600c5460000361147f57604051632f31015b60e11b815260040160405180910390fd5b600c80546000918290556040519091906001600160a01b0384169083908381818185875af1925050503d80600081146114d4576040519150601f19603f3d011682016040523d82523d6000602084013e6114d9565b606091505b50509050806114fb57604051632f31015b60e11b815260040160405180910390fd5b6040518281527f2d5923adf91dd211e633a33f2e27918338e6a33e3b3f386e9d466d1bc52eba799060200160405180910390a15050600160055550565b3360009081526020819052604090205460ff16611568576040516349e27cff60e01b815260040160405180910390fd5b61157484848484611cfe565b50505050565b3360009081526020819052604090205460ff166115aa576040516349e27cff60e01b815260040160405180910390fd5b600b8190556040518181527fb69fdb7c7f7b0e17f64074ea1590642f14193039b234aae7a3c68b26ed055adf906020016113ca565b3360009081526020819052604090205460ff1661160f576040516349e27cff60e01b815260040160405180910390fd5b6000828152600d6020908152604091829020600201805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0385169081179091558251858152918201527f02df56823aeec019d75f2c2396e2a9c68868b26ccc5a4cd9412b2a78f8602f739101610c9d565b60078054610ba5906130c9565b3360009081526020819052604090205460ff166116bb576040516349e27cff60e01b815260040160405180910390fd5b600a8190556040518181527f184fa17d2176718ea1955f61782c763ce239e39e790340793f227b0ba5db53e1906020016113ca565b610aaa338383611ed4565b3361170557600080fd5b6000818152600d602052604090206005015460ff1661172357600080fd5b61172c81611fc8565b61175533826001604051806040016040528060048152602001630307830360e41b815250612018565b50565b3360009081526020819052604090205460ff16611788576040516349e27cff60e01b815260040160405180910390fd5b805161179b906008906020840190612774565b507ffa52149a99a7016c4576d7bb33adefe5c4372aeded2a98a40f46d6ef33109c4d816040516113ca9190612a3c565b600d602052600090815260409020805481906117e6906130c9565b80601f0160208091040260200160405190810160405280929190818152602001828054611812906130c9565b801561185f5780601f106118345761010080835404028352916020019161185f565b820191906000526020600020905b81548152906001019060200180831161184257829003601f168201915b505060408051606081018252600187015460ff808216835261010082048116602084015262010000909104811692820192909252600287015460038801546004890154600590990154979892976001600160a01b03909216965094509092501686565b3360009081526020819052604090205460ff166118f2576040516349e27cff60e01b815260040160405180910390fd5b6000848152600e602052604090205460ff1661192157604051636aa2a93760e01b815260040160405180910390fd5b611930846402540be3ff610c26565b61193a8484610d8a565b61194d846105c83685900385018561321f565b61195784826115df565b6115748460006112c8565b606060088054611971906130c9565b80601f016020809104026020016040519081016040528092919081815260200182805461199d906130c9565b80156119ea5780601f106119bf576101008083540402835291602001916119ea565b820191906000526020600020905b8154815290600101906020018083116119cd57829003601f168201915b5050505050905090565b6001600160a01b038516331480611a105750611a10853361090c565b611a825760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f76656400000000000000000000000000000000000000000000006064820152608401610a36565b610f4a858585858561213d565b8151835114611af15760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610a36565b6001600160a01b038416611b555760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610a36565b33611b648187878787876122fa565b60005b8451811015611c90576000858281518110611b8457611b8461309a565b602002602001015190506000858381518110611ba257611ba261309a565b60209081029190910181015160008481526001835260408082206001600160a01b038e168352909352919091205490915081811015611c365760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610a36565b60008381526001602090815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290611c75908490613082565b9250508190555050505080611c89906130b0565b9050611b67565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051611ce092919061323b565b60405180910390a4611cf6818787878787612488565b505050505050565b6001600160a01b038416611d5e5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610a36565b8151835114611dc05760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610a36565b33611dd0816000878787876122fa565b60005b8451811015611e6c57838181518110611dee57611dee61309a565b602002602001015160016000878481518110611e0c57611e0c61309a565b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b031681526020019081526020016000206000828254611e549190613082565b90915550819050611e64816130b0565b915050611dd3565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051611ebd92919061323b565b60405180910390a4610f4a81600087878787612488565b816001600160a01b0316836001600160a01b031603611f5b5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c6600000000000000000000000000000000000000000000006064820152608401610a36565b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b60008111611fe957604051636aa2a93760e01b815260040160405180910390fd5b6000818152600e602052604090205460ff1661175557604051636aa2a93760e01b815260040160405180910390fd5b6001600160a01b0384166120785760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610a36565b3360006120848561262d565b905060006120918561262d565b90506120a2836000898585896122fa565b60008681526001602090815260408083206001600160a01b038b168452909152812080548792906120d4908490613082565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461213483600089898989612678565b50505050505050565b6001600160a01b0384166121a15760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610a36565b3360006121ad8561262d565b905060006121ba8561262d565b90506121ca8389898585896122fa565b60008681526001602090815260408083206001600160a01b038c168452909152902054858110156122505760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610a36565b60008781526001602090815260408083206001600160a01b038d8116855292528083208985039055908a1682528120805488929061228f908490613082565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46122ef848a8a8a8a8a612678565b505050505050505050565b6001600160a01b0385166123815760005b835181101561237f578281815181106123265761232661309a565b6020026020010151600460008684815181106123445761234461309a565b6020026020010151815260200190815260200160002060008282546123699190613082565b909155506123789050816130b0565b905061230b565b505b6001600160a01b038416611cf65760005b83518110156121345760008482815181106123af576123af61309a565b6020026020010151905060008483815181106123cd576123cd61309a565b60200260200101519050600060046000848152602001908152602001600020549050818110156124655760405162461bcd60e51b815260206004820152602860248201527f455243313135353a206275726e20616d6f756e74206578636565647320746f7460448201527f616c537570706c790000000000000000000000000000000000000000000000006064820152608401610a36565b60009283526004602052604090922091039055612481816130b0565b9050612392565b6001600160a01b0384163b15611cf65760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906124cc9089908990889088908890600401613260565b6020604051808303816000875af1925050508015612507575060408051601f3d908101601f19168201909252612504918101906132be565b60015b6125bc576125136132db565b806308c379a00361254c57506125276132f7565b80612532575061254e565b8060405162461bcd60e51b8152600401610a369190612a3c565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e7465720000000000000000000000006064820152608401610a36565b6001600160e01b0319811663bc197c8160e01b146121345760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610a36565b604080516001808252818301909252606091600091906020808301908036833701905050905082816000815181106126675761266761309a565b602090810291909101015292915050565b6001600160a01b0384163b15611cf65760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906126bc9089908990889088908890600401613381565b6020604051808303816000875af19250505080156126f7575060408051601f3d908101601f191682019092526126f4918101906132be565b60015b612703576125136132db565b6001600160e01b0319811663f23a6e6160e01b146121345760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610a36565b828054612780906130c9565b90600052602060002090601f0160209004810192826127a257600085556127e8565b82601f106127bb57805160ff19168380011785556127e8565b828001600101855582156127e8579182015b828111156127e85782518255916020019190600101906127cd565b506127f49291506127f8565b5090565b5b808211156127f457600081556001016127f9565b6001600160a01b038116811461175557600080fd5b6000806040838503121561283557600080fd5b82356128408161280d565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff8111828210171561288a5761288a61284e565b6040525050565b600067ffffffffffffffff8211156128ab576128ab61284e565b5060051b60200190565b600082601f8301126128c657600080fd5b813560206128d382612891565b6040516128e08282612864565b83815260059390931b850182019282810191508684111561290057600080fd5b8286015b8481101561291b5780358352918301918301612904565b509695505050505050565b60006020828403121561293857600080fd5b813567ffffffffffffffff81111561294f57600080fd5b61295b848285016128b5565b949350505050565b6001600160e01b03198116811461175557600080fd5b60006020828403121561298b57600080fd5b813561299681612963565b9392505050565b6000602082840312156129af57600080fd5b5035919050565b60608101610a64828460ff815116825260ff602082015116602083015260ff60408201511660408301525050565b60005b838110156129ff5781810151838201526020016129e7565b838111156115745750506000910152565b60008151808452612a288160208601602086016129e4565b601f01601f19169290920160200192915050565b6020815260006129966020830184612a10565b60008060408385031215612a6257600080fd5b50508035926020909101359150565b600060208284031215612a8357600080fd5b81356129968161280d565b600082601f830112612a9f57600080fd5b813567ffffffffffffffff811115612ab957612ab961284e565b604051612ad0601f8301601f191660200182612864565b818152846020838601011115612ae557600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215612b1557600080fd5b82359150602083013567ffffffffffffffff811115612b3357600080fd5b612b3f85828601612a8e565b9150509250929050565b600080600080600060a08688031215612b6157600080fd5b8535612b6c8161280d565b94506020860135612b7c8161280d565b9350604086013567ffffffffffffffff80821115612b9957600080fd5b612ba589838a016128b5565b94506060880135915080821115612bbb57600080fd5b612bc789838a016128b5565b93506080880135915080821115612bdd57600080fd5b50612bea88828901612a8e565b9150509295509295909350565b60008060008084860360c0811215612c0e57600080fd5b85359450602086013567ffffffffffffffff811115612c2c57600080fd5b612c3888828901612a8e565b9450506060603f1982011215612c4d57600080fd5b5060408501915060a0850135612c628161280d565b939692955090935050565b60008060408385031215612c8057600080fd5b823567ffffffffffffffff80821115612c9857600080fd5b818501915085601f830112612cac57600080fd5b81356020612cb982612891565b604051612cc68282612864565b83815260059390931b8501820192828101915089841115612ce657600080fd5b948201945b83861015612d0d578535612cfe8161280d565b82529482019490820190612ceb565b96505086013592505080821115612d2357600080fd5b50612b3f858286016128b5565b600081518084526020808501945080840160005b83811015612d6057815187529582019590820190600101612d44565b509495945050505050565b6020815260006129966020830184612d30565b803560ff81168114612d8f57600080fd5b919050565b600060608284031215612da657600080fd5b6040516060810181811067ffffffffffffffff82111715612dc957612dc961284e565b604052905080612dd883612d7e565b8152612de660208401612d7e565b6020820152612df760408401612d7e565b60408201525092915050565b60008060808385031215612e1657600080fd5b82359150612e278460208501612d94565b90509250929050565b60008060008060808587031215612e4657600080fd5b8435612e518161280d565b9350602085013567ffffffffffffffff80821115612e6e57600080fd5b612e7a888389016128b5565b94506040870135915080821115612e9057600080fd5b612e9c888389016128b5565b93506060870135915080821115612eb257600080fd5b50612ebf87828801612a8e565b91505092959194509250565b60008060408385031215612ede57600080fd5b823591506020830135612ef08161280d565b809150509250929050565b60008060408385031215612f0e57600080fd5b8235612f198161280d565b915060208301358015158114612ef057600080fd5b600060208284031215612f4057600080fd5b813567ffffffffffffffff811115612f5757600080fd5b61295b84828501612a8e565b6000610100808352612f778184018a612a10565b915050612fa7602083018860ff815116825260ff602082015116602083015260ff60408201511660408301525050565b6001600160a01b03861660808301528460a08301528360c083015282151560e0830152979650505050505050565b60008060408385031215612fe857600080fd5b8235612ff38161280d565b91506020830135612ef08161280d565b600080600080600060a0868803121561301b57600080fd5b85356130268161280d565b945060208601356130368161280d565b93506040860135925060608601359150608086013567ffffffffffffffff81111561306057600080fd5b612bea88828901612a8e565b634e487b7160e01b600052601160045260246000fd5b600082198211156130955761309561306c565b500190565b634e487b7160e01b600052603260045260246000fd5b6000600182016130c2576130c261306c565b5060010190565b600181811c908216806130dd57607f821691505b6020821081036130fd57634e487b7160e01b600052602260045260246000fd5b50919050565b600081516131158185602086016129e4565b9290920192915050565b600080845481600182811c91508083168061313b57607f831692505b6020808410820361315a57634e487b7160e01b86526022600452602486fd5b81801561316e576001811461317f576131ac565b60ff198616895284890196506131ac565b60008b81526020902060005b868110156131a45781548b82015290850190830161318b565b505084890196505b5050505050506131bc8185613103565b95945050505050565b82815260406020820152600061295b6040830184612a10565b60008160001904831182151516156131f8576131f861306c565b500290565b60008261321a57634e487b7160e01b600052601260045260246000fd5b500490565b60006060828403121561323157600080fd5b6129968383612d94565b60408152600061324e6040830185612d30565b82810360208401526131bc8185612d30565b60006001600160a01b03808816835280871660208401525060a0604083015261328c60a0830186612d30565b828103606084015261329e8186612d30565b905082810360808401526132b28185612a10565b98975050505050505050565b6000602082840312156132d057600080fd5b815161299681612963565b600060033d11156132f45760046000803e5060005160e01c5b90565b600060443d10156133055790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561333557505050505090565b828501915081518181111561334d5750505050505090565b843d87010160208285010111156133675750505050505090565b61337660208286010187612864565b509095945050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a060808301526133b960a0830184612a10565b97965050505050505056fea164736f6c634300080d000a";

type FreeObjectConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FreeObjectConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FreeObject__factory extends ContractFactory {
  constructor(...args: FreeObjectConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _treasuryAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FreeObject> {
    return super.deploy(
      _treasuryAddress,
      overrides || {}
    ) as Promise<FreeObject>;
  }
  override getDeployTransaction(
    _treasuryAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_treasuryAddress, overrides || {});
  }
  override attach(address: string): FreeObject {
    return super.attach(address) as FreeObject;
  }
  override connect(signer: Signer): FreeObject__factory {
    return super.connect(signer) as FreeObject__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FreeObjectInterface {
    return new utils.Interface(_abi) as FreeObjectInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FreeObject {
    return new Contract(address, _abi, signerOrProvider) as FreeObject;
  }
}
