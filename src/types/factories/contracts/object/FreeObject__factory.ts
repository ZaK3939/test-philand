/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  FreeObject,
  FreeObjectInterface,
} from "../../../contracts/object/FreeObject";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_treasuryAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_royalityFee",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ExistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTokenID",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSetTokenSize",
    type: "error",
  },
  {
    inputs: [],
    name: "NonExistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Sale",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allObjects",
    outputs: [
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxClaimed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "forSale",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseMetadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newPrice",
        type: "uint256",
      },
    ],
    name: "changeTokenPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "_size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
    ],
    name: "createObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "created",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseMetadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getCreator",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getFreeObject",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getMaxClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getSize",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "_size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
    ],
    name: "initObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetAddress",
        type: "address",
      },
    ],
    name: "owner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
    ],
    name: "removeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "royalityFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
    ],
    name: "setCreator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newMaxClaimed",
        type: "uint256",
      },
    ],
    name: "setMaxClaimed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_royalityFee",
        type: "uint256",
      },
    ],
    name: "setRoyalityFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "_size",
        type: "tuple",
      },
    ],
    name: "setSize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "setTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_treasuryAddress",
        type: "address",
      },
    ],
    name: "setTreasuryAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "baseuri",
        type: "string",
      },
    ],
    name: "setbaseMetadataURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasuryAddress",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002dac38038062002dac8339810160408190526200003491620001fc565b6040805160208101909152600081526200004e816200013d565b5033600090815260046020908152604091829020805460ff191660011790558151808301909252600b8083526a467265654f626a6563747360a81b929091019182526200009e9160059162000156565b5060408051808201909152600380825262464f5360e81b6020909201918252620000cb9160069162000156565b506040805180820190915260188082527f68747470733a2f2f7777772e617277656176652e6e65742f00000000000000006020909201918252620001129160079162000156565b50600980546001600160a01b0319166001600160a01b03939093169290921790915560085562000274565b80516200015290600290602084019062000156565b5050565b828054620001649062000238565b90600052602060002090601f016020900481019282620001885760008555620001d3565b82601f10620001a357805160ff1916838001178555620001d3565b82800160010185558215620001d3579182015b82811115620001d3578251825591602001919060010190620001b6565b50620001e1929150620001e5565b5090565b5b80821115620001e15760008155600101620001e6565b600080604083850312156200021057600080fd5b82516001600160a01b03811681146200022857600080fd5b6020939093015192949293505050565b600181811c908216806200024d57607f821691505b6020821081036200026e57634e487b7160e01b600052602260045260246000fd5b50919050565b612b2880620002846000396000f3fe60806040526004361061024e5760003560e01c80636605bfda11610138578063b6ed6da9116100b0578063cf467b431161007f578063e985e9c511610064578063e985e9c51461071f578063ea2fe3cb14610768578063f242432a1461077d57600080fd5b8063cf467b43146106c6578063d48e638a146106e657600080fd5b8063b6ed6da91461060f578063bd85b0391461062f578063c5f956af1461065c578063cbdac7101461069457600080fd5b806395d89b411161010757806398f24682116100ec57806398f24682146105bc578063a22cb465146105dc578063ab231c32146105fc57600080fd5b806395d89b41146105775780639733faa51461058c57600080fd5b80636605bfda146104ce578063666e1b39146104ee57806382cb6b721461052757806391686f531461055757600080fd5b80632eb2c2d6116101cb5780634e1273f41161019a5780635b2bd79e1161017f5780635b2bd79e14610479578063604c7f801461048e57806362e8e8ac146104ae57600080fd5b80634e1273f41461041d5780634f558e791461044a57600080fd5b80632eb2c2d6146103a7578063326bb4ad146103c75780633bb3a24d146103dd5780633e545f02146103fd57600080fd5b80630d09308e1161022257806313af40351161020757806313af403514610347578063162094c414610367578063173825d91461038757600080fd5b80630d09308e146103055780630e89341c1461032757600080fd5b8062fdd58e1461025357806301ffc9a714610286578063023c23db146102b657806306fdde03146102e3575b600080fd5b34801561025f57600080fd5b5061027361026e366004612073565b61079d565b6040519081526020015b60405180910390f35b34801561029257600080fd5b506102a66102a13660046120b5565b610849565b604051901515815260200161027d565b3480156102c257600080fd5b506102d66102d13660046120d9565b610899565b60405161027d91906120f2565b3480156102ef57600080fd5b506102f8610933565b60405161027d9190612178565b34801561031157600080fd5b5061032561032036600461218b565b6109c1565b005b34801561033357600080fd5b506102f86103423660046120d9565b610a06565b34801561035357600080fd5b506103256103623660046121ad565b610a67565b34801561037357600080fd5b50610325610382366004612281565b610ae4565b34801561039357600080fd5b506103256103a23660046121ad565b610b38565b3480156103b357600080fd5b506103256103c236600461235d565b610bb2565b3480156103d357600080fd5b5061027360085481565b3480156103e957600080fd5b506102f86103f83660046120d9565b610c54565b34801561040957600080fd5b50610325610418366004612423565b610cf6565b34801561042957600080fd5b5061043d61043836600461248e565b610dbf565b60405161027d919061258c565b34801561045657600080fd5b506102a66104653660046120d9565b600090815260036020526040902054151590565b34801561048557600080fd5b506102f8610efd565b34801561049a57600080fd5b506103256104a936600461259f565b610f0a565b3480156104ba57600080fd5b506103256104c936600461218b565b610f5d565b3480156104da57600080fd5b506103256104e93660046121ad565b610fac565b3480156104fa57600080fd5b506102a66105093660046121ad565b6001600160a01b031660009081526004602052604090205460ff1690565b34801561053357600080fd5b506102a66105423660046120d9565b600b6020526000908152604090205460ff1681565b34801561056357600080fd5b506103256105723660046125cc565b61100b565b34801561058357600080fd5b506102f8611079565b34801561059857600080fd5b506102736105a73660046120d9565b6000908152600a602052604090206003015490565b3480156105c857600080fd5b506103256105d73660046120d9565b611086565b3480156105e857600080fd5b506103256105f73660046125fc565b6110bb565b61032561060a3660046120d9565b6110ca565b34801561061b57600080fd5b5061032561062a36600461262f565b61112f565b34801561063b57600080fd5b5061027361064a3660046120d9565b60009081526003602052604090205490565b34801561066857600080fd5b5060095461067c906001600160a01b031681565b6040516001600160a01b03909116815260200161027d565b3480156106a057600080fd5b506106b46106af3660046120d9565b611172565b60405161027d9695949392919061266c565b3480156106d257600080fd5b506103256106e1366004612423565b611269565b3480156106f257600080fd5b5061067c6107013660046120d9565b6000908152600a60205260409020600201546001600160a01b031690565b34801561072b57600080fd5b506102a661073a3660046126de565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b34801561077457600080fd5b506102f861131a565b34801561078957600080fd5b5061032561079836600461270c565b6113ac565b60006001600160a01b0383166108205760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b148061087a57506001600160e01b031982166303a24d0760e21b145b8061084357506301ffc9a760e01b6001600160e01b0319831614610843565b60408051606081018252600080825260208201819052918101919091526000828152600a602052604081206001015460ff1690036108ea5760405163a8e3a97360e01b815260040160405180910390fd5b506000908152600a6020908152604091829020825160608101845260019091015460ff808216835261010082048116938301939093526201000090049091169181019190915290565b6005805461094090612775565b80601f016020809104026020016040519081016040528092919081815260200182805461096c90612775565b80156109b95780601f1061098e576101008083540402835291602001916109b9565b820191906000526020600020905b81548152906001019060200180831161099c57829003601f168201915b505050505081565b3360009081526004602052604090205460ff166109f1576040516349e27cff60e01b815260040160405180910390fd5b6000918252600a602052604090912060030155565b600081815260036020526040902054606090610a3557604051634a1850bf60e11b815260040160405180910390fd5b6007610a4083610c54565b604051602001610a519291906127c5565b6040516020818303038152906040529050919050565b3360009081526004602052604090205460ff16610a97576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260046020526040808220805460ff191660011790555133917f619792ba07bec101df538ab277befa333e4cf1c0274f11de7be2a9507b9c9a0691a350565b3360009081526004602052604090205460ff16610b14576040516349e27cff60e01b815260040160405180910390fd5b6000828152600a602090815260409091208251610b3392840190611fc5565b505050565b3360009081526004602052604090205460ff16610b68576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260046020526040808220805460ff191690555133917fc191551a88c5609788f3532bd94c06479b61b0040eec65f9cd985428ffea643091a350565b6001600160a01b038516331480610bce5750610bce853361073a565b610c405760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f76656400000000000000000000000000006064820152608401610817565b610c4d85858585856113c4565b5050505050565b6000818152600a60205260409020805460609190610c7190612775565b80601f0160208091040260200160405190810160405280929190818152602001828054610c9d90612775565b8015610cea5780601f10610cbf57610100808354040283529160200191610cea565b820191906000526020600020905b815481529060010190602001808311610ccd57829003601f168201915b50505050509050919050565b3360009081526004602052604090205460ff16610d26576040516349e27cff60e01b815260040160405180910390fd5b33610d3057600080fd5b60008481526003602052604090205415610d5d576040516387cf36d160e01b815260040160405180910390fd5b610d678484610ae4565b610d718483610f0a565b610d7b848261100b565b610d86846000610f5d565b5050506000908152600a602090815260408083206005018054600160ff199182168117909255600b909352922080549091169091179055565b60608151835114610e385760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d6174636800000000000000000000000000000000000000000000006064820152608401610817565b6000835167ffffffffffffffff811115610e5457610e546121ca565b604051908082528060200260200182016040528015610e7d578160200160208202803683370190505b50905060005b8451811015610ef557610ec8858281518110610ea157610ea161286b565b6020026020010151858381518110610ebb57610ebb61286b565b602002602001015161079d565b828281518110610eda57610eda61286b565b6020908102919091010152610eee81612897565b9050610e83565b509392505050565b6007805461094090612775565b3360009081526004602052604090205460ff16610f3a576040516349e27cff60e01b815260040160405180910390fd5b6000828152600a602052604090208190600101610f5782826128c3565b50505050565b3360009081526004602052604090205460ff16610f8d576040516349e27cff60e01b815260040160405180910390fd5b33610f9757600080fd5b6000918252600a602052604090912060040155565b3360009081526004602052604090205460ff16610fdc576040516349e27cff60e01b815260040160405180910390fd5b6009805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b3360009081526004602052604090205460ff1661103b576040516349e27cff60e01b815260040160405180910390fd5b6000918252600a6020526040909120600201805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03909216919091179055565b6006805461094090612775565b3360009081526004602052604090205460ff166110b6576040516349e27cff60e01b815260040160405180910390fd5b600855565b6110c6338383611645565b5050565b336110d457600080fd5b6000818152600b602052604090205460ff1661110357604051636aa2a93760e01b815260040160405180910390fd5b61112c33826001604051806040016040528060048152602001630307830360e41b815250611739565b50565b3360009081526004602052604090205460ff1661115f576040516349e27cff60e01b815260040160405180910390fd5b80516110c6906007906020840190611fc5565b600a6020526000908152604090208054819061118d90612775565b80601f01602080910402602001604051908101604052809291908181526020018280546111b990612775565b80156112065780601f106111db57610100808354040283529160200191611206565b820191906000526020600020905b8154815290600101906020018083116111e957829003601f168201915b505060408051606081018252600187015460ff808216835261010082048116602084015262010000909104811692820192909252600287015460038801546004890154600590990154979892976001600160a01b03909216965094509092501686565b3360009081526004602052604090205460ff16611299576040516349e27cff60e01b815260040160405180910390fd5b6000848152600360205260409020546112c557604051634a1850bf60e11b815260040160405180910390fd5b6112d3846305f5e0ff6109c1565b6112dd8484610ae4565b6112e78483610f0a565b6112f1848261100b565b6112fc846000610f5d565b5050506000908152600b60205260409020805460ff19166001179055565b60606007805461132990612775565b80601f016020809104026020016040519081016040528092919081815260200182805461135590612775565b80156113a25780601f10611377576101008083540402835291602001916113a2565b820191906000526020600020905b81548152906001019060200180831161138557829003601f168201915b5050505050905090565b6113b7858585611849565b610c4d8585858585611994565b815183511461143b5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d617463680000000000000000000000000000000000000000000000006064820152608401610817565b6001600160a01b03841661149f5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610817565b336114ae818787878787611a2f565b60005b84518110156115d75760008582815181106114ce576114ce61286b565b6020026020010151905060008583815181106114ec576114ec61286b565b602090810291909101810151600084815280835260408082206001600160a01b038e16835290935291909120549091508181101561157f5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610817565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906115bc908490612922565b92505081905550505050806115d090612897565b90506114b1565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161162792919061293a565b60405180910390a461163d818787878787611b44565b505050505050565b816001600160a01b0316836001600160a01b0316036116cc5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c6600000000000000000000000000000000000000000000006064820152608401610817565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166117995760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610817565b336117b9816000876117aa88611ce9565b6117b388611ce9565b87611a2f565b6000848152602081815260408083206001600160a01b0389168452909152812080548592906117e9908490612922565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610c4d81600087878787611d34565b3415610b33576000606460085434611861919061295f565b61186b919061297e565b6000838152600a602052604080822060020154905192935090916001600160a01b039091169083908381818185875af1925050503d80600081146118cb576040519150601f19603f3d011682016040523d82523d6000602084013e6118d0565b606091505b50509050806118de57600080fd5b60006001600160a01b0386166118f484346129a0565b604051600081818185875af1925050503d8060008114611930576040519150601f19603f3d011682016040523d82523d6000602084013e611935565b606091505b505090508061194357600080fd5b604080516001600160a01b03888116825287166020820152348183015290517f3f3483d0995db4c081e0101ef6753bef457833c20605cd871de61dcb48085a9a9181900360600190a1505050505050565b6001600160a01b0385163314806119b057506119b0853361073a565b611a225760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f76656400000000000000000000000000000000000000000000006064820152608401610817565b610c4d8585858585611e30565b6001600160a01b038516611ab65760005b8351811015611ab457828181518110611a5b57611a5b61286b565b602002602001015160036000868481518110611a7957611a7961286b565b602002602001015181526020019081526020016000206000828254611a9e9190612922565b90915550611aad905081612897565b9050611a40565b505b6001600160a01b03841661163d5760005b8351811015611b3b57828181518110611ae257611ae261286b565b602002602001015160036000868481518110611b0057611b0061286b565b602002602001015181526020019081526020016000206000828254611b2591906129a0565b90915550611b34905081612897565b9050611ac7565b50505050505050565b6001600160a01b0384163b1561163d5760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190611b8890899089908890889088906004016129b7565b6020604051808303816000875af1925050508015611bc3575060408051601f3d908101601f19168201909252611bc091810190612a15565b60015b611c7857611bcf612a32565b806308c379a003611c085750611be3612a4e565b80611bee5750611c0a565b8060405162461bcd60e51b81526004016108179190612178565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e7465720000000000000000000000006064820152608401610817565b6001600160e01b0319811663bc197c8160e01b14611b3b5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610817565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110611d2357611d2361286b565b602090810291909101015292915050565b6001600160a01b0384163b1561163d5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190611d789089908990889088908890600401612ad8565b6020604051808303816000875af1925050508015611db3575060408051601f3d908101601f19168201909252611db091810190612a15565b60015b611dbf57611bcf612a32565b6001600160e01b0319811663f23a6e6160e01b14611b3b5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610817565b6001600160a01b038416611e945760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610817565b33611ea48187876117aa88611ce9565b6000848152602081815260408083206001600160a01b038a16845290915290205483811015611f285760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610817565b6000858152602081815260408083206001600160a01b038b8116855292528083208785039055908816825281208054869290611f65908490612922565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4611b3b828888888888611d34565b828054611fd190612775565b90600052602060002090601f016020900481019282611ff35760008555612039565b82601f1061200c57805160ff1916838001178555612039565b82800160010185558215612039579182015b8281111561203957825182559160200191906001019061201e565b50612045929150612049565b5090565b5b80821115612045576000815560010161204a565b6001600160a01b038116811461112c57600080fd5b6000806040838503121561208657600080fd5b82356120918161205e565b946020939093013593505050565b6001600160e01b03198116811461112c57600080fd5b6000602082840312156120c757600080fd5b81356120d28161209f565b9392505050565b6000602082840312156120eb57600080fd5b5035919050565b60608101610843828460ff815116825260ff602082015116602083015260ff60408201511660408301525050565b60005b8381101561213b578181015183820152602001612123565b83811115610f575750506000910152565b60008151808452612164816020860160208601612120565b601f01601f19169290920160200192915050565b6020815260006120d2602083018461214c565b6000806040838503121561219e57600080fd5b50508035926020909101359150565b6000602082840312156121bf57600080fd5b81356120d28161205e565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715612206576122066121ca565b6040525050565b600082601f83011261221e57600080fd5b813567ffffffffffffffff811115612238576122386121ca565b60405161224f601f8301601f1916602001826121e0565b81815284602083860101111561226457600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561229457600080fd5b82359150602083013567ffffffffffffffff8111156122b257600080fd5b6122be8582860161220d565b9150509250929050565b600067ffffffffffffffff8211156122e2576122e26121ca565b5060051b60200190565b600082601f8301126122fd57600080fd5b8135602061230a826122c8565b60405161231782826121e0565b83815260059390931b850182019282810191508684111561233757600080fd5b8286015b84811015612352578035835291830191830161233b565b509695505050505050565b600080600080600060a0868803121561237557600080fd5b85356123808161205e565b945060208601356123908161205e565b9350604086013567ffffffffffffffff808211156123ad57600080fd5b6123b989838a016122ec565b945060608801359150808211156123cf57600080fd5b6123db89838a016122ec565b935060808801359150808211156123f157600080fd5b506123fe8882890161220d565b9150509295509295909350565b60006060828403121561241d57600080fd5b50919050565b60008060008060c0858703121561243957600080fd5b84359350602085013567ffffffffffffffff81111561245757600080fd5b6124638782880161220d565b935050612473866040870161240b565b915060a08501356124838161205e565b939692955090935050565b600080604083850312156124a157600080fd5b823567ffffffffffffffff808211156124b957600080fd5b818501915085601f8301126124cd57600080fd5b813560206124da826122c8565b6040516124e782826121e0565b83815260059390931b850182019282810191508984111561250757600080fd5b948201945b8386101561252e57853561251f8161205e565b8252948201949082019061250c565b9650508601359250508082111561254457600080fd5b506122be858286016122ec565b600081518084526020808501945080840160005b8381101561258157815187529582019590820190600101612565565b509495945050505050565b6020815260006120d26020830184612551565b600080608083850312156125b257600080fd5b823591506125c3846020850161240b565b90509250929050565b600080604083850312156125df57600080fd5b8235915060208301356125f18161205e565b809150509250929050565b6000806040838503121561260f57600080fd5b823561261a8161205e565b9150602083013580151581146125f157600080fd5b60006020828403121561264157600080fd5b813567ffffffffffffffff81111561265857600080fd5b6126648482850161220d565b949350505050565b60006101008083526126808184018a61214c565b9150506126b0602083018860ff815116825260ff602082015116602083015260ff60408201511660408301525050565b6001600160a01b03861660808301528460a08301528360c083015282151560e0830152979650505050505050565b600080604083850312156126f157600080fd5b82356126fc8161205e565b915060208301356125f18161205e565b600080600080600060a0868803121561272457600080fd5b853561272f8161205e565b9450602086013561273f8161205e565b93506040860135925060608601359150608086013567ffffffffffffffff81111561276957600080fd5b6123fe8882890161220d565b600181811c9082168061278957607f821691505b60208210810361241d57634e487b7160e01b600052602260045260246000fd5b600081516127bb818560208601612120565b9290920192915050565b600080845481600182811c9150808316806127e157607f831692505b6020808410820361280057634e487b7160e01b86526022600452602486fd5b818015612814576001811461282557612852565b60ff19861689528489019650612852565b60008b81526020902060005b8681101561284a5781548b820152908501908301612831565b505084890196505b50505050505061286281856127a9565b95945050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016128a9576128a9612881565b5060010190565b6000813560ff8116811461084357600080fd5b60ff6128ce836128b0565b1681548160ff19821617835561ff006128e9602086016128b0565b60081b16808361ffff1984161717845562ff0000612909604087016128b0565b60101b168362ffffff1984161782171784555050505050565b6000821982111561293557612935612881565b500190565b60408152600061294d6040830185612551565b82810360208401526128628185612551565b600081600019048311821515161561297957612979612881565b500290565b60008261299b57634e487b7160e01b600052601260045260246000fd5b500490565b6000828210156129b2576129b2612881565b500390565b60006001600160a01b03808816835280871660208401525060a060408301526129e360a0830186612551565b82810360608401526129f58186612551565b90508281036080840152612a09818561214c565b98975050505050505050565b600060208284031215612a2757600080fd5b81516120d28161209f565b600060033d1115612a4b5760046000803e5060005160e01c5b90565b600060443d1015612a5c5790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715612a8c57505050505090565b8285019150815181811115612aa45750505050505090565b843d8701016020828501011115612abe5750505050505090565b612acd602082860101876121e0565b509095945050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a06080830152612b1060a083018461214c565b97965050505050505056fea164736f6c634300080d000a";

type FreeObjectConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FreeObjectConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FreeObject__factory extends ContractFactory {
  constructor(...args: FreeObjectConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _treasuryAddress: string,
    _royalityFee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FreeObject> {
    return super.deploy(
      _treasuryAddress,
      _royalityFee,
      overrides || {}
    ) as Promise<FreeObject>;
  }
  override getDeployTransaction(
    _treasuryAddress: string,
    _royalityFee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _treasuryAddress,
      _royalityFee,
      overrides || {}
    );
  }
  override attach(address: string): FreeObject {
    return super.attach(address) as FreeObject;
  }
  override connect(signer: Signer): FreeObject__factory {
    return super.connect(signer) as FreeObject__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FreeObjectInterface {
    return new utils.Interface(_abi) as FreeObjectInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FreeObject {
    return new Contract(address, _abi, signerOrProvider) as FreeObject;
  }
}
