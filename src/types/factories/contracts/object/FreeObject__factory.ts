/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  FreeObject,
  FreeObjectInterface,
} from "../../../contracts/object/FreeObject";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ExistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSetTokenSize",
    type: "error",
  },
  {
    inputs: [],
    name: "NonExistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allObjects",
    outputs: [
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct FreeObject.Size",
        name: "size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "creator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "forSale",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseMetadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct FreeObject.Size",
        name: "_size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
    ],
    name: "createObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseMetadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getCreator",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getFreeObject",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getSize",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct FreeObject.Size",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetAddress",
        type: "address",
      },
    ],
    name: "owner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
    ],
    name: "removeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
    ],
    name: "setCreator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct FreeObject.Size",
        name: "_size",
        type: "tuple",
      },
    ],
    name: "setSize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "setTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "baseuri",
        type: "string",
      },
    ],
    name: "setbaseMetadataURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040805160208101909152600081526200002c8162000095565b5033600090815260046020908152604091829020805460ff19166001179055815180830190925260188083527f68747470733a2f2f7777772e617277656176652e6e65742f0000000000000000929091019182526200008e91600591620000ae565b5062000190565b8051620000aa906002906020840190620000ae565b5050565b828054620000bc9062000154565b90600052602060002090601f016020900481019282620000e057600085556200012b565b82601f10620000fb57805160ff19168380011785556200012b565b828001600101855582156200012b579182015b828111156200012b5782518255916020019190600101906200010e565b50620001399291506200013d565b5090565b5b808211156200013957600081556001016200013e565b600181811c908216806200016957607f821691505b6020821081036200018a57634e487b7160e01b600052602260045260246000fd5b50919050565b61261880620001a06000396000f3fe6080604052600436106101955760003560e01c80635b2bd79e116100e1578063b6ed6da91161008a578063d48e638a11610064578063d48e638a146104b3578063e985e9c5146104eb578063ea2fe3cb14610534578063f242432a1461054957600080fd5b8063b6ed6da914610436578063bd85b03914610456578063cbdac7101461048357600080fd5b806391686f53116100bb57806391686f53146103e3578063a22cb46514610403578063ab231c321461042357600080fd5b80635b2bd79e14610375578063604c7f801461038a578063666e1b39146103aa57600080fd5b8063173825d9116101435780633e545f021161011d5780633e545f02146102f95780634e1273f4146103195780634f558e791461034657600080fd5b8063173825d9146102995780632eb2c2d6146102b95780633bb3a24d146102d957600080fd5b80630e89341c116101745780630e89341c1461022a57806313af403514610257578063162094c41461027957600080fd5b8062fdd58e1461019a57806301ffc9a7146101cd578063023c23db146101fd575b600080fd5b3480156101a657600080fd5b506101ba6101b5366004611bd6565b610569565b6040519081526020015b60405180910390f35b3480156101d957600080fd5b506101ed6101e8366004611c18565b610615565b60405190151581526020016101c4565b34801561020957600080fd5b5061021d610218366004611c3c565b610665565b6040516101c49190611c55565b34801561023657600080fd5b5061024a610245366004611c3c565b610728565b6040516101c49190611cdb565b34801561026357600080fd5b50610277610272366004611cee565b610789565b005b34801561028557600080fd5b50610277610294366004611dc2565b610806565b3480156102a557600080fd5b506102776102b4366004611cee565b610886565b3480156102c557600080fd5b506102776102d4366004611e9e565b610900565b3480156102e557600080fd5b5061024a6102f4366004611c3c565b6109a2565b34801561030557600080fd5b50610277610314366004611f64565b610a6f565b34801561032557600080fd5b50610339610334366004611fcf565b610afa565b6040516101c491906120cd565b34801561035257600080fd5b506101ed610361366004611c3c565b600090815260036020526040902054151590565b34801561038157600080fd5b5061024a610c38565b34801561039657600080fd5b506102776103a53660046120e0565b610cc6565b3480156103b657600080fd5b506101ed6103c5366004611cee565b6001600160a01b031660009081526004602052604090205460ff1690565b3480156103ef57600080fd5b506102776103fe36600461210d565b610d3f565b34801561040f57600080fd5b5061027761041e36600461213d565b610de4565b610277610431366004611c3c565b610df3565b34801561044257600080fd5b50610277610451366004612170565b610e55565b34801561046257600080fd5b506101ba610471366004611c3c565b60009081526003602052604090205490565b34801561048f57600080fd5b506104a361049e366004611c3c565b610e98565b6040516101c494939291906121ad565b3480156104bf57600080fd5b506104d36104ce366004611c3c565b610f95565b6040516001600160a01b0390911681526020016101c4565b3480156104f757600080fd5b506101ed61050636600461220f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b34801561054057600080fd5b5061024a610fe0565b34801561055557600080fd5b5061027761056436600461223d565b611072565b60006001600160a01b0383166105ec5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b148061064657506001600160e01b031982166303a24d0760e21b145b8061060f57506301ffc9a760e01b6001600160e01b031983161461060f565b60408051606081018252600080825260208083018290528284018290528482526003905291909120546106ab57604051634a1850bf60e11b815260040160405180910390fd5b60008281526007602052604081206001015460ff1690036106df5760405163a8e3a97360e01b815260040160405180910390fd5b50600090815260076020908152604091829020825160608101845260019091015460ff808216835261010082048116938301939093526201000090049091169181019190915290565b60008181526003602052604090205460609061075757604051634a1850bf60e11b815260040160405180910390fd5b6005610762836109a2565b6040516020016107739291906122f6565b6040516020818303038152906040529050919050565b3360009081526004602052604090205460ff166107b9576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260046020526040808220805460ff191660011790555133917f619792ba07bec101df538ab277befa333e4cf1c0274f11de7be2a9507b9c9a0691a350565b3360009081526004602052604090205460ff16610836576040516349e27cff60e01b815260040160405180910390fd5b60008281526003602052604090205461086257604051634a1850bf60e11b815260040160405180910390fd5b6000828152600760209081526040909120825161088192840190611b28565b505050565b3360009081526004602052604090205460ff166108b6576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260046020526040808220805460ff191690555133917fc191551a88c5609788f3532bd94c06479b61b0040eec65f9cd985428ffea643091a350565b6001600160a01b03851633148061091c575061091c8533610506565b61098e5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f766564000000000000000000000000000060648201526084016105e3565b61099b858585858561110d565b5050505050565b6000818152600360205260409020546060906109d157604051634a1850bf60e11b815260040160405180910390fd5b600082815260076020526040902080546109ea906122a6565b80601f0160208091040260200160405190810160405280929190818152602001828054610a16906122a6565b8015610a635780601f10610a3857610100808354040283529160200191610a63565b820191906000526020600020905b815481529060010190602001808311610a4657829003601f168201915b50505050509050919050565b3360009081526004602052604090205460ff16610a9f576040516349e27cff60e01b815260040160405180910390fd5b33610aa957600080fd5b60008481526003602052604090205415610ad6576040516387cf36d160e01b815260040160405180910390fd5b610ae08484610806565b610aea8483610cc6565b610af48482610d3f565b50505050565b60608151835114610b735760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d61746368000000000000000000000000000000000000000000000060648201526084016105e3565b6000835167ffffffffffffffff811115610b8f57610b8f611d0b565b604051908082528060200260200182016040528015610bb8578160200160208202803683370190505b50905060005b8451811015610c3057610c03858281518110610bdc57610bdc61239c565b6020026020010151858381518110610bf657610bf661239c565b6020026020010151610569565b828281518110610c1557610c1561239c565b6020908102919091010152610c29816123c8565b9050610bbe565b509392505050565b60058054610c45906122a6565b80601f0160208091040260200160405190810160405280929190818152602001828054610c71906122a6565b8015610cbe5780601f10610c9357610100808354040283529160200191610cbe565b820191906000526020600020905b815481529060010190602001808311610ca157829003601f168201915b505050505081565b3360009081526004602052604090205460ff16610cf6576040516349e27cff60e01b815260040160405180910390fd5b600082815260036020526040902054610d2257604051634a1850bf60e11b815260040160405180910390fd5b60008281526007602052604090208190600101610af482826123f4565b3360009081526004602052604090205460ff16610d6f576040516349e27cff60e01b815260040160405180910390fd5b600082815260036020526040902054610d9b57604051634a1850bf60e11b815260040160405180910390fd5b60009182526007602052604090912060020180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03909216919091179055565b610def33838361138e565b5050565b33610dfd57600080fd5b600081815260036020526040902054610e2957604051634a1850bf60e11b815260040160405180910390fd5b610e5233826001604051806040016040528060048152602001630307830360e41b815250611482565b50565b3360009081526004602052604090205460ff16610e85576040516349e27cff60e01b815260040160405180910390fd5b8051610def906005906020840190611b28565b600760205260009081526040902080548190610eb3906122a6565b80601f0160208091040260200160405190810160405280929190818152602001828054610edf906122a6565b8015610f2c5780601f10610f0157610100808354040283529160200191610f2c565b820191906000526020600020905b815481529060010190602001808311610f0f57829003601f168201915b505060408051606081018252600187015460ff8082168352610100820481166020840152620100009091048116928201929092526002909601549495946001600160a01b0381169450740100000000000000000000000000000000000000009004169150859050565b600081815260036020526040812054610fc157604051634a1850bf60e11b815260040160405180910390fd5b506000908152600760205260409020600201546001600160a01b031690565b606060058054610fef906122a6565b80601f016020809104026020016040519081016040528092919081815260200182805461101b906122a6565b80156110685780601f1061103d57610100808354040283529160200191611068565b820191906000526020600020905b81548152906001019060200180831161104b57829003601f168201915b5050505050905090565b6001600160a01b03851633148061108e575061108e8533610506565b6111005760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f766564000000000000000000000000000000000000000000000060648201526084016105e3565b61099b8585858585611592565b81518351146111845760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d6174636800000000000000000000000000000000000000000000000060648201526084016105e3565b6001600160a01b0384166111e85760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b60648201526084016105e3565b336111f7818787878787611730565b60005b84518110156113205760008582815181106112175761121761239c565b6020026020010151905060008583815181106112355761123561239c565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156112c85760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b60648201526084016105e3565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290611305908490612453565b9250508190555050505080611319906123c8565b90506111fa565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161137092919061246b565b60405180910390a461138681878787878761183c565b505050505050565b816001600160a01b0316836001600160a01b0316036114155760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c66000000000000000000000000000000000000000000000060648201526084016105e3565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166114e25760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084016105e3565b33611502816000876114f3886119e1565b6114fc886119e1565b87611730565b6000848152602081815260408083206001600160a01b038916845290915281208054859290611532908490612453565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461099b81600087878787611a2c565b6001600160a01b0384166115f65760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b60648201526084016105e3565b336116068187876114f3886119e1565b6000848152602081815260408083206001600160a01b038a1684529091529020548381101561168a5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b60648201526084016105e3565b6000858152602081815260408083206001600160a01b038b81168552925280832087850390559088168252812080548692906116c7908490612453565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4611727828888888888611a2c565b50505050505050565b6001600160a01b0385166117b75760005b83518110156117b55782818151811061175c5761175c61239c565b60200260200101516003600086848151811061177a5761177a61239c565b60200260200101518152602001908152602001600020600082825461179f9190612453565b909155506117ae9050816123c8565b9050611741565b505b6001600160a01b0384166113865760005b8351811015611727578281815181106117e3576117e361239c565b6020026020010151600360008684815181106118015761180161239c565b6020026020010151815260200190815260200160002060008282546118269190612490565b909155506118359050816123c8565b90506117c8565b6001600160a01b0384163b156113865760405163bc197c8160e01b81526001600160a01b0385169063bc197c819061188090899089908890889088906004016124a7565b6020604051808303816000875af19250505080156118bb575060408051601f3d908101601f191682019092526118b891810190612505565b60015b611970576118c7612522565b806308c379a00361190057506118db61253e565b806118e65750611902565b8060405162461bcd60e51b81526004016105e39190611cdb565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e74657200000000000000000000000060648201526084016105e3565b6001600160e01b0319811663bc197c8160e01b146117275760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b60648201526084016105e3565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110611a1b57611a1b61239c565b602090810291909101015292915050565b6001600160a01b0384163b156113865760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190611a7090899089908890889088906004016125c8565b6020604051808303816000875af1925050508015611aab575060408051601f3d908101601f19168201909252611aa891810190612505565b60015b611ab7576118c7612522565b6001600160e01b0319811663f23a6e6160e01b146117275760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b60648201526084016105e3565b828054611b34906122a6565b90600052602060002090601f016020900481019282611b565760008555611b9c565b82601f10611b6f57805160ff1916838001178555611b9c565b82800160010185558215611b9c579182015b82811115611b9c578251825591602001919060010190611b81565b50611ba8929150611bac565b5090565b5b80821115611ba85760008155600101611bad565b6001600160a01b0381168114610e5257600080fd5b60008060408385031215611be957600080fd5b8235611bf481611bc1565b946020939093013593505050565b6001600160e01b031981168114610e5257600080fd5b600060208284031215611c2a57600080fd5b8135611c3581611c02565b9392505050565b600060208284031215611c4e57600080fd5b5035919050565b6060810161060f828460ff815116825260ff602082015116602083015260ff60408201511660408301525050565b60005b83811015611c9e578181015183820152602001611c86565b83811115610af45750506000910152565b60008151808452611cc7816020860160208601611c83565b601f01601f19169290920160200192915050565b602081526000611c356020830184611caf565b600060208284031215611d0057600080fd5b8135611c3581611bc1565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715611d4757611d47611d0b565b6040525050565b600082601f830112611d5f57600080fd5b813567ffffffffffffffff811115611d7957611d79611d0b565b604051611d90601f8301601f191660200182611d21565b818152846020838601011115611da557600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215611dd557600080fd5b82359150602083013567ffffffffffffffff811115611df357600080fd5b611dff85828601611d4e565b9150509250929050565b600067ffffffffffffffff821115611e2357611e23611d0b565b5060051b60200190565b600082601f830112611e3e57600080fd5b81356020611e4b82611e09565b604051611e588282611d21565b83815260059390931b8501820192828101915086841115611e7857600080fd5b8286015b84811015611e935780358352918301918301611e7c565b509695505050505050565b600080600080600060a08688031215611eb657600080fd5b8535611ec181611bc1565b94506020860135611ed181611bc1565b9350604086013567ffffffffffffffff80821115611eee57600080fd5b611efa89838a01611e2d565b94506060880135915080821115611f1057600080fd5b611f1c89838a01611e2d565b93506080880135915080821115611f3257600080fd5b50611f3f88828901611d4e565b9150509295509295909350565b600060608284031215611f5e57600080fd5b50919050565b60008060008060c08587031215611f7a57600080fd5b84359350602085013567ffffffffffffffff811115611f9857600080fd5b611fa487828801611d4e565b935050611fb48660408701611f4c565b915060a0850135611fc481611bc1565b939692955090935050565b60008060408385031215611fe257600080fd5b823567ffffffffffffffff80821115611ffa57600080fd5b818501915085601f83011261200e57600080fd5b8135602061201b82611e09565b6040516120288282611d21565b83815260059390931b850182019282810191508984111561204857600080fd5b948201945b8386101561206f57853561206081611bc1565b8252948201949082019061204d565b9650508601359250508082111561208557600080fd5b50611dff85828601611e2d565b600081518084526020808501945080840160005b838110156120c2578151875295820195908201906001016120a6565b509495945050505050565b602081526000611c356020830184612092565b600080608083850312156120f357600080fd5b823591506121048460208501611f4c565b90509250929050565b6000806040838503121561212057600080fd5b82359150602083013561213281611bc1565b809150509250929050565b6000806040838503121561215057600080fd5b823561215b81611bc1565b91506020830135801515811461213257600080fd5b60006020828403121561218257600080fd5b813567ffffffffffffffff81111561219957600080fd5b6121a584828501611d4e565b949350505050565b60c0815260006121c060c0830187611caf565b90506121ef602083018660ff815116825260ff602082015116602083015260ff60408201511660408301525050565b6001600160a01b038416608083015282151560a083015295945050505050565b6000806040838503121561222257600080fd5b823561222d81611bc1565b9150602083013561213281611bc1565b600080600080600060a0868803121561225557600080fd5b853561226081611bc1565b9450602086013561227081611bc1565b93506040860135925060608601359150608086013567ffffffffffffffff81111561229a57600080fd5b611f3f88828901611d4e565b600181811c908216806122ba57607f821691505b602082108103611f5e57634e487b7160e01b600052602260045260246000fd5b600081516122ec818560208601611c83565b9290920192915050565b600080845481600182811c91508083168061231257607f831692505b6020808410820361233157634e487b7160e01b86526022600452602486fd5b818015612345576001811461235657612383565b60ff19861689528489019650612383565b60008b81526020902060005b8681101561237b5781548b820152908501908301612362565b505084890196505b50505050505061239381856122da565b95945050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016123da576123da6123b2565b5060010190565b6000813560ff8116811461060f57600080fd5b60ff6123ff836123e1565b1681548160ff19821617835561ff0061241a602086016123e1565b60081b16808361ffff1984161717845562ff000061243a604087016123e1565b60101b168362ffffff1984161782171784555050505050565b60008219821115612466576124666123b2565b500190565b60408152600061247e6040830185612092565b82810360208401526123938185612092565b6000828210156124a2576124a26123b2565b500390565b60006001600160a01b03808816835280871660208401525060a060408301526124d360a0830186612092565b82810360608401526124e58186612092565b905082810360808401526124f98185611caf565b98975050505050505050565b60006020828403121561251757600080fd5b8151611c3581611c02565b600060033d111561253b5760046000803e5060005160e01c5b90565b600060443d101561254c5790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561257c57505050505090565b82850191508151818111156125945750505050505090565b843d87010160208285010111156125ae5750505050505090565b6125bd60208286010187611d21565b509095945050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261260060a0830184611caf565b97965050505050505056fea164736f6c634300080d000a";

type FreeObjectConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FreeObjectConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FreeObject__factory extends ContractFactory {
  constructor(...args: FreeObjectConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FreeObject> {
    return super.deploy(overrides || {}) as Promise<FreeObject>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FreeObject {
    return super.attach(address) as FreeObject;
  }
  override connect(signer: Signer): FreeObject__factory {
    return super.connect(signer) as FreeObject__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FreeObjectInterface {
    return new utils.Interface(_abi) as FreeObjectInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FreeObject {
    return new Contract(address, _abi, signerOrProvider) as FreeObject;
  }
}
