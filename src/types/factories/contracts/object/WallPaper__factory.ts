/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  WallPaper,
  WallPaperInterface,
} from "../../../contracts/object/WallPaper";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_treasuryAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ExistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTokenID",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSetTokenSize",
    type: "error",
  },
  {
    inputs: [],
    name: "NonExistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "PaymentBalanceZero",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_newPrice",
        type: "uint256",
      },
    ],
    name: "ChangeTokenPrice",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_uri",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct BaseObject.Size",
        name: "_size",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxClaimed",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "CreateWallPaper",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_uri",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct BaseObject.Size",
        name: "_size",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxClaimed",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "InitWallPaper",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "LogbuyWallPaper",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentReceivedOwner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentWithdrawnOwner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
    ],
    name: "SetCreator",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newMaxClaimed",
        type: "uint256",
      },
    ],
    name: "SetMaxClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_royalityFee",
        type: "uint256",
      },
    ],
    name: "SetRoyalityFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_secondaryRoyalty",
        type: "uint256",
      },
    ],
    name: "SetSecondaryRoyalityFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "x",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "y",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "z",
        type: "uint8",
      },
    ],
    name: "SetSize",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "SetTokenURI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address payable",
        name: "_treasuryAddress",
        type: "address",
      },
    ],
    name: "SetTreasuryAddress",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "baseuri",
        type: "string",
      },
    ],
    name: "SetbaseMetadataURI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allObjects",
    outputs: [
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxClaimed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "forSale",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseMetadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "buyWallPaper",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newPrice",
        type: "uint256",
      },
    ],
    name: "changeTokenPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "_size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxClaimed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "createWallPaper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "created",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseMetadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getCreator",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getFreeWallPaper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getMaxClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getSize",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "_size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxClaimed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "initWallPaper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mintBatchObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetAddress",
        type: "address",
      },
    ],
    name: "owner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paymentBalanceOwner",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
    ],
    name: "removeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "royalityFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "secondaryRoyalty",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
    ],
    name: "setCreator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newMaxClaimed",
        type: "uint256",
      },
    ],
    name: "setMaxClaimed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_royalityFee",
        type: "uint256",
      },
    ],
    name: "setRoyalityFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_secondaryRoyalty",
        type: "uint256",
      },
    ],
    name: "setSecondaryRoyalityFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "_size",
        type: "tuple",
      },
    ],
    name: "setSize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "setTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_treasuryAddress",
        type: "address",
      },
    ],
    name: "setTreasuryAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseMetadataURI",
        type: "string",
      },
    ],
    name: "setbaseMetadataURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasuryAddress",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "withdrawTo",
        type: "address",
      },
    ],
    name: "withdrawOwnerBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620038f5380380620038f5833981016040819052620000349162000205565b604080516020808201835260008083523381529081905291909120805460ff19166001179055620000658162000146565b50600160055560408051808201909152600a8082526957616c6c50617065727360b01b60209092019182526200009e916006916200015f565b506040805180820190915260048082526315d0531360e21b6020909201918252620000cc916007916200015f565b506040805180820190915260188082527f68747470733a2f2f7777772e617277656176652e6e65742f0000000000000000602090920191825262000113916008916200015f565b50600980546001600160a01b0319166001600160a01b0392909216919091179055610bb8600a556101f4600b5562000273565b80516200015b9060039060208401906200015f565b5050565b8280546200016d9062000237565b90600052602060002090601f016020900481019282620001915760008555620001dc565b82601f10620001ac57805160ff1916838001178555620001dc565b82800160010185558215620001dc579182015b82811115620001dc578251825591602001919060010190620001bf565b50620001ea929150620001ee565b5090565b5b80821115620001ea5760008155600101620001ef565b6000602082840312156200021857600080fd5b81516001600160a01b03811681146200023057600080fd5b9392505050565b600181811c908216806200024c57607f821691505b6020821081036200026d57634e487b7160e01b600052602260045260246000fd5b50919050565b61367280620002836000396000f3fe6080604052600436106102ea5760003560e01c806367478a3511610184578063a22cb465116100d6578063c5f956af1161008a578063e985e9c511610064578063e985e9c5146108e4578063ea2fe3cb1461092d578063f242432a1461094257600080fd5b8063c5f956af14610841578063cbdac71014610879578063d48e638a146108ab57600080fd5b8063b6ed6da9116100bb578063b6ed6da9146107c4578063bd85b039146107e4578063c457fb371461081157600080fd5b8063a22cb46514610791578063a422d8e8146107b157600080fd5b806391686f531161013857806395d89b411161011257806395d89b411461072c5780639733faa51461074157806398f246821461077157600080fd5b806391686f53146106d65780639237b185146106f65780639291671a1461071657600080fd5b80637061d486116101695780637061d4861461066657806382cb6b7214610686578063849c5434146106b657600080fd5b806367478a3514610626578063697436d91461064657600080fd5b80632a55205a1161023d5780634f558e79116101f157806362e8e8ac116101cb57806362e8e8ac146105ad5780636605bfda146105cd578063666e1b39146105ed57600080fd5b80634f558e79146105495780635b2bd79e14610578578063604c7f801461058d57600080fd5b8063326bb4ad11610222578063326bb4ad146104e65780633bb3a24d146104fc5780634e1273f41461051c57600080fd5b80632a55205a146104875780632eb2c2d6146104c657600080fd5b80630e89341c1161029f578063162d6cab11610279578063162d6cab14610431578063173825d9146104515780631e4c78871461047157600080fd5b80630e89341c146103d157806313af4035146103f1578063162094c41461041157600080fd5b8063023c23db116102d0578063023c23db1461036257806306fdde031461038f5780630d09308e146103b157600080fd5b8062fdd58e146102ff57806301ffc9a71461033257600080fd5b366102fa576102f834610962565b005b600080fd5b34801561030b57600080fd5b5061031f61031a366004612a85565b6109af565b6040519081526020015b60405180910390f35b34801561033e57600080fd5b5061035261034d366004612ac7565b610a5d565b6040519015158152602001610329565b34801561036e57600080fd5b5061038261037d366004612aeb565b610aad565b6040516103299190612b04565b34801561039b57600080fd5b506103a4610b47565b6040516103299190612b8a565b3480156103bd57600080fd5b506102f86103cc366004612b9d565b610bd5565b3480156103dd57600080fd5b506103a46103ec366004612aeb565b610c58565b3480156103fd57600080fd5b506102f861040c366004612bbf565b610cbc565b34801561041d57600080fd5b506102f861042c366004612c93565b610d39565b34801561043d57600080fd5b506102f861044c366004612d5f565b610dba565b34801561045d57600080fd5b506102f861046c366004612bbf565b610ec7565b34801561047d57600080fd5b5061031f600c5481565b34801561049357600080fd5b506104a76104a2366004612b9d565b610f41565b604080516001600160a01b039093168352602083019190915201610329565b3480156104d257600080fd5b506102f86104e1366004612e72565b610f6b565b3480156104f257600080fd5b5061031f600a5481565b34801561050857600080fd5b506103a4610517366004612aeb565b61100d565b34801561052857600080fd5b5061053c610537366004612f20565b6110af565b604051610329919061301e565b34801561055557600080fd5b50610352610564366004612aeb565b600090815260046020526040902054151590565b34801561058457600080fd5b506103a46111ed565b34801561059957600080fd5b506102f86105a8366004613031565b6111fa565b3480156105b957600080fd5b506102f86105c8366004612b9d565b6112bc565b3480156105d957600080fd5b506102f86105e8366004612bbf565b611337565b3480156105f957600080fd5b50610352610608366004612bbf565b6001600160a01b031660009081526020819052604090205460ff1690565b34801561063257600080fd5b506102f8610641366004612bbf565b6113c9565b34801561065257600080fd5b506102f861066136600461305e565b61152c565b34801561067257600080fd5b506102f8610681366004612aeb565b61156e565b34801561069257600080fd5b506103526106a1366004612aeb565b600e6020526000908152604090205460ff1681565b3480156106c257600080fd5b506102f86106d1366004612d5f565b6115d3565b3480156106e257600080fd5b506102f86106f13660046130f9565b61169d565b34801561070257600080fd5b506102f8610711366004612aeb565b61173c565b34801561072257600080fd5b5061031f600b5481565b34801561073857600080fd5b506103a46117de565b34801561074d57600080fd5b5061031f61075c366004612aeb565b6000908152600d602052604090206003015490565b34801561077d57600080fd5b506102f861078c366004612aeb565b6117eb565b34801561079d57600080fd5b506102f86107ac366004613129565b611850565b6102f86107bf366004612aeb565b61185f565b3480156107d057600080fd5b506102f86107df36600461315c565b611a35565b3480156107f057600080fd5b5061031f6107ff366004612aeb565b60009081526004602052604090205490565b34801561081d57600080fd5b5061031f61082c366004612aeb565b6000908152600d602052604090206004015490565b34801561084d57600080fd5b50600954610861906001600160a01b031681565b6040516001600160a01b039091168152602001610329565b34801561088557600080fd5b50610899610894366004612aeb565b611aa8565b60405161032996959493929190613199565b3480156108b757600080fd5b506108616108c6366004612aeb565b6000908152600d60205260409020600201546001600160a01b031690565b3480156108f057600080fd5b506103526108ff36600461320b565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205460ff1690565b34801561093957600080fd5b506103a4611b9f565b34801561094e57600080fd5b506102f861095d366004613239565b611c31565b6040518181527faab58724194bfb12b018298382453c333764e73d19ec73cb98d26f8dd10d29cc9060200160405180910390a180600c60008282546109a791906132b8565b909155505050565b60006001600160a01b038316610a325760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b5060008181526001602090815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b1480610a8e57506001600160e01b031982166303a24d0760e21b145b80610a5757506301ffc9a760e01b6001600160e01b0319831614610a57565b60408051606081018252600080825260208201819052918101919091526000828152600d602052604081206001015460ff169003610afe5760405163a8e3a97360e01b815260040160405180910390fd5b506000908152600d6020908152604091829020825160608101845260019091015460ff808216835261010082048116938301939093526201000090049091169181019190915290565b60068054610b54906132d0565b80601f0160208091040260200160405190810160405280929190818152602001828054610b80906132d0565b8015610bcd5780601f10610ba257610100808354040283529160200191610bcd565b820191906000526020600020905b815481529060010190602001808311610bb057829003601f168201915b505050505081565b3360009081526020819052604090205460ff16610c05576040516349e27cff60e01b815260040160405180910390fd5b6000828152600d602090815260409182902060030183905581518481529081018390527fad41bb8f5516e8c7946d99bc48fd3ff0a07239c8ffcf2d103a0612b9ab44a60a91015b60405180910390a15050565b6000818152600e602052604090205460609060ff16610c8a57604051636aa2a93760e01b815260040160405180910390fd5b6008610c958361100d565b604051602001610ca6929190613326565b6040516020818303038152906040529050919050565b3360009081526020819052604090205460ff16610cec576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260208190526040808220805460ff191660011790555133917f619792ba07bec101df538ab277befa333e4cf1c0274f11de7be2a9507b9c9a0691a350565b3360009081526020819052604090205460ff16610d69576040516349e27cff60e01b815260040160405180910390fd5b6000828152600d602090815260409091208251610d88928401906129d7565b507fd2d827dddfc9c9a02afc5fc68d3251684b36e213a7999ebd90a861f25df4077e8282604051610c4c9291906133cc565b3360009081526020819052604090205460ff16610dea576040516349e27cff60e01b815260040160405180910390fd5b60008681526004602052604090205415610e17576040516387cf36d160e01b815260040160405180910390fd5b610e218686610d39565b610e2b86856111fa565b610e35868461169d565b610e3f8683610bd5565b610e4986826112bc565b6000868152600d602090815260408083206005018054600160ff199182168117909255600e9093529281902080549092169092179055517f31f6039824f388e11e1263c1c0517cc34345ba83cd17b29c533bcc39d60d31b090610eb7908890889088908890889088906133e5565b60405180910390a1505050505050565b3360009081526020819052604090205460ff16610ef7576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260208190526040808220805460ff191690555133917fc191551a88c5609788f3532bd94c06479b61b0040eec65f9cd985428ffea643091a350565b60008030612710600b5485610f569190613455565b610f609190613474565b915091509250929050565b6001600160a01b038516331480610f875750610f8785336108ff565b610ff95760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f76656400000000000000000000000000006064820152608401610a29565b6110068585858585611ccc565b5050505050565b6000818152600d6020526040902080546060919061102a906132d0565b80601f0160208091040260200160405190810160405280929190818152602001828054611056906132d0565b80156110a35780601f10611078576101008083540402835291602001916110a3565b820191906000526020600020905b81548152906001019060200180831161108657829003601f168201915b50505050509050919050565b606081518351146111285760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d6174636800000000000000000000000000000000000000000000006064820152608401610a29565b6000835167ffffffffffffffff81111561114457611144612bdc565b60405190808252806020026020018201604052801561116d578160200160208202803683370190505b50905060005b84518110156111e5576111b885828151811061119157611191613496565b60200260200101518583815181106111ab576111ab613496565b60200260200101516109af565b8282815181106111ca576111ca613496565b60209081029190910101526111de816134ac565b9050611173565b509392505050565b60088054610b54906132d0565b3360009081526020819052604090205460ff1661122a576040516349e27cff60e01b815260040160405180910390fd5b6000828152600d6020908152604091829020835160019091018054858401518686015160ff94851661ffff1990931683176101009286169283021762ff000019166201000095909116948502179092558451878152938401529282019290925260608101919091527fd8e7c8605fecaf6228c6b5f990bc7f1e865694cc587ef62fe729b926915ef7e090608001610c4c565b3360009081526020819052604090205460ff166112ec576040516349e27cff60e01b815260040160405180910390fd5b6000828152600d602090815260409182902060040183905581518481529081018390527f415cf995faccaec43ce108f2713ebcdb2812b0e0689a8fa7dfdcabf78109ebbb9101610c4c565b3360009081526020819052604090205460ff16611367576040516349e27cff60e01b815260040160405180910390fd5b6009805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527feee016301a2725a577c64816adf35ccf644d07439731069a31748ec3b9102c60906020015b60405180910390a150565b3360009081526020819052604090205460ff166113f9576040516349e27cff60e01b815260040160405180910390fd5b60026005540361144b5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610a29565b6002600555600c5460000361147357604051632f31015b60e11b815260040160405180910390fd5b600c80546000918290556040519091906001600160a01b0384169083908381818185875af1925050503d80600081146114c8576040519150601f19603f3d011682016040523d82523d6000602084013e6114cd565b606091505b50509050806114ef57604051632f31015b60e11b815260040160405180910390fd5b6040518281527f2d5923adf91dd211e633a33f2e27918338e6a33e3b3f386e9d466d1bc52eba799060200160405180910390a15050600160055550565b3360009081526020819052604090205460ff1661155c576040516349e27cff60e01b815260040160405180910390fd5b61156884848484611f3b565b50505050565b3360009081526020819052604090205460ff1661159e576040516349e27cff60e01b815260040160405180910390fd5b600b8190556040518181527fb69fdb7c7f7b0e17f64074ea1590642f14193039b234aae7a3c68b26ed055adf906020016113be565b3360009081526020819052604090205460ff16611603576040516349e27cff60e01b815260040160405180910390fd5b6000868152600e602052604090205460ff1661163257604051636aa2a93760e01b815260040160405180910390fd5b61163c8683610bd5565b6116468686610d39565b61165086856111fa565b61165a868461169d565b61166486826112bc565b7f32ce0d385c993f843478b1e05a3a00e7095cdcebc37dc0fd4439d9caf4c71cd7868686868686604051610eb7969594939291906133e5565b3360009081526020819052604090205460ff166116cd576040516349e27cff60e01b815260040160405180910390fd5b6000828152600d6020908152604091829020600201805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0385169081179091558251858152918201527f02df56823aeec019d75f2c2396e2a9c68868b26ccc5a4cd9412b2a78f8602f739101610c4c565b3361174657600080fd5b6000818152600d60205260409020600401541561176257600080fd5b6000818152600d602052604090206005015460ff1661178057600080fd5b61178981612111565b6000818152600d602090815260408083206003015460049092529091205411156117b257600080fd5b6117db33826001604051806040016040528060048152602001630307830360e41b815250612187565b50565b60078054610b54906132d0565b3360009081526020819052604090205460ff1661181b576040516349e27cff60e01b815260040160405180910390fd5b600a8190556040518181527f184fa17d2176718ea1955f61782c763ce239e39e790340793f227b0ba5db53e1906020016113be565b61185b3383836122ac565b5050565b3361186957600080fd5b61187281612111565b6000818152600d6020526040902060040154341461188f57600080fd5b6000818152600d602052604090206005015460ff166118ad57600080fd5b6000818152600d602090815260408083206003015460049092529091205411156118d657600080fd5b6000612710600a54346118e99190613455565b6118f39190613474565b6000838152600d602052604080822060020154905192935090916001600160a01b039091169083908381818185875af1925050503d8060008114611953576040519150601f19603f3d011682016040523d82523d6000602084013e611958565b606091505b505090508061196657600080fd5b6009546000906001600160a01b031661197f84346134c5565b604051600081818185875af1925050503d80600081146119bb576040519150601f19603f3d011682016040523d82523d6000602084013e6119c0565b606091505b50509050806119ce57600080fd5b6119f53385600160405180604001604052806002815260200161060f60f31b815250612187565b6040805185815234602082015233917f3d6176a5bd6a4128cf01997eedfaa98d116ee5c518286c9b48aefc7db46afec4910160405180910390a250505050565b3360009081526020819052604090205460ff16611a65576040516349e27cff60e01b815260040160405180910390fd5b8051611a789060089060208401906129d7565b507ffa52149a99a7016c4576d7bb33adefe5c4372aeded2a98a40f46d6ef33109c4d816040516113be9190612b8a565b600d60205260009081526040902080548190611ac3906132d0565b80601f0160208091040260200160405190810160405280929190818152602001828054611aef906132d0565b8015611b3c5780601f10611b1157610100808354040283529160200191611b3c565b820191906000526020600020905b815481529060010190602001808311611b1f57829003601f168201915b505060408051606081018252600187015460ff808216835261010082048116602084015262010000909104811692820192909252600287015460038801546004890154600590990154979892976001600160a01b03909216965094509092501686565b606060088054611bae906132d0565b80601f0160208091040260200160405190810160405280929190818152602001828054611bda906132d0565b8015611c275780601f10611bfc57610100808354040283529160200191611c27565b820191906000526020600020905b815481529060010190602001808311611c0a57829003601f168201915b5050505050905090565b6001600160a01b038516331480611c4d5750611c4d85336108ff565b611cbf5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f76656400000000000000000000000000000000000000000000006064820152608401610a29565b61100685858585856123a0565b8151835114611d2e5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610a29565b6001600160a01b038416611d925760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610a29565b33611da181878787878761255d565b60005b8451811015611ecd576000858281518110611dc157611dc1613496565b602002602001015190506000858381518110611ddf57611ddf613496565b60209081029190910181015160008481526001835260408082206001600160a01b038e168352909352919091205490915081811015611e735760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610a29565b60008381526001602090815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290611eb29084906132b8565b9250508190555050505080611ec6906134ac565b9050611da4565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051611f1d9291906134dc565b60405180910390a4611f338187878787876126eb565b505050505050565b6001600160a01b038416611f9b5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610a29565b8151835114611ffd5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610a29565b3361200d8160008787878761255d565b60005b84518110156120a95783818151811061202b5761202b613496565b60200260200101516001600087848151811061204957612049613496565b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b03168152602001908152602001600020600082825461209191906132b8565b909155508190506120a1816134ac565b915050612010565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516120fa9291906134dc565b60405180910390a4611006816000878787876126eb565b80158061213a57506000818152600d602090815260408083206003015460049092529091205410155b1561215857604051636aa2a93760e01b815260040160405180910390fd5b6000818152600e602052604090205460ff166117db57604051636aa2a93760e01b815260040160405180910390fd5b6001600160a01b0384166121e75760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610a29565b3360006121f385612890565b9050600061220085612890565b90506122118360008985858961255d565b60008681526001602090815260408083206001600160a01b038b168452909152812080548792906122439084906132b8565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46122a3836000898989896128db565b50505050505050565b816001600160a01b0316836001600160a01b0316036123335760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c6600000000000000000000000000000000000000000000006064820152608401610a29565b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166124045760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610a29565b33600061241085612890565b9050600061241d85612890565b905061242d83898985858961255d565b60008681526001602090815260408083206001600160a01b038c168452909152902054858110156124b35760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610a29565b60008781526001602090815260408083206001600160a01b038d8116855292528083208985039055908a168252812080548892906124f29084906132b8565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4612552848a8a8a8a8a6128db565b505050505050505050565b6001600160a01b0385166125e45760005b83518110156125e25782818151811061258957612589613496565b6020026020010151600460008684815181106125a7576125a7613496565b6020026020010151815260200190815260200160002060008282546125cc91906132b8565b909155506125db9050816134ac565b905061256e565b505b6001600160a01b038416611f335760005b83518110156122a357600084828151811061261257612612613496565b60200260200101519050600084838151811061263057612630613496565b60200260200101519050600060046000848152602001908152602001600020549050818110156126c85760405162461bcd60e51b815260206004820152602860248201527f455243313135353a206275726e20616d6f756e74206578636565647320746f7460448201527f616c537570706c790000000000000000000000000000000000000000000000006064820152608401610a29565b600092835260046020526040909220910390556126e4816134ac565b90506125f5565b6001600160a01b0384163b15611f335760405163bc197c8160e01b81526001600160a01b0385169063bc197c819061272f9089908990889088908890600401613501565b6020604051808303816000875af192505050801561276a575060408051601f3d908101601f191682019092526127679181019061355f565b60015b61281f5761277661357c565b806308c379a0036127af575061278a613598565b8061279557506127b1565b8060405162461bcd60e51b8152600401610a299190612b8a565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e7465720000000000000000000000006064820152608401610a29565b6001600160e01b0319811663bc197c8160e01b146122a35760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610a29565b604080516001808252818301909252606091600091906020808301908036833701905050905082816000815181106128ca576128ca613496565b602090810291909101015292915050565b6001600160a01b0384163b15611f335760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e619061291f9089908990889088908890600401613622565b6020604051808303816000875af192505050801561295a575060408051601f3d908101601f191682019092526129579181019061355f565b60015b6129665761277661357c565b6001600160e01b0319811663f23a6e6160e01b146122a35760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610a29565b8280546129e3906132d0565b90600052602060002090601f016020900481019282612a055760008555612a4b565b82601f10612a1e57805160ff1916838001178555612a4b565b82800160010185558215612a4b579182015b82811115612a4b578251825591602001919060010190612a30565b50612a57929150612a5b565b5090565b5b80821115612a575760008155600101612a5c565b6001600160a01b03811681146117db57600080fd5b60008060408385031215612a9857600080fd5b8235612aa381612a70565b946020939093013593505050565b6001600160e01b0319811681146117db57600080fd5b600060208284031215612ad957600080fd5b8135612ae481612ab1565b9392505050565b600060208284031215612afd57600080fd5b5035919050565b60608101610a57828460ff815116825260ff602082015116602083015260ff60408201511660408301525050565b60005b83811015612b4d578181015183820152602001612b35565b838111156115685750506000910152565b60008151808452612b76816020860160208601612b32565b601f01601f19169290920160200192915050565b602081526000612ae46020830184612b5e565b60008060408385031215612bb057600080fd5b50508035926020909101359150565b600060208284031215612bd157600080fd5b8135612ae481612a70565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715612c1857612c18612bdc565b6040525050565b600082601f830112612c3057600080fd5b813567ffffffffffffffff811115612c4a57612c4a612bdc565b604051612c61601f8301601f191660200182612bf2565b818152846020838601011115612c7657600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215612ca657600080fd5b82359150602083013567ffffffffffffffff811115612cc457600080fd5b612cd085828601612c1f565b9150509250929050565b803560ff81168114612ceb57600080fd5b919050565b600060608284031215612d0257600080fd5b6040516060810181811067ffffffffffffffff82111715612d2557612d25612bdc565b604052905080612d3483612cda565b8152612d4260208401612cda565b6020820152612d5360408401612cda565b60408201525092915050565b6000806000806000806101008789031215612d7957600080fd5b86359550602087013567ffffffffffffffff811115612d9757600080fd5b612da389828a01612c1f565b955050612db38860408901612cf0565b935060a0870135612dc381612a70565b9598949750929560c08101359460e0909101359350915050565b600067ffffffffffffffff821115612df757612df7612bdc565b5060051b60200190565b600082601f830112612e1257600080fd5b81356020612e1f82612ddd565b604051612e2c8282612bf2565b83815260059390931b8501820192828101915086841115612e4c57600080fd5b8286015b84811015612e675780358352918301918301612e50565b509695505050505050565b600080600080600060a08688031215612e8a57600080fd5b8535612e9581612a70565b94506020860135612ea581612a70565b9350604086013567ffffffffffffffff80821115612ec257600080fd5b612ece89838a01612e01565b94506060880135915080821115612ee457600080fd5b612ef089838a01612e01565b93506080880135915080821115612f0657600080fd5b50612f1388828901612c1f565b9150509295509295909350565b60008060408385031215612f3357600080fd5b823567ffffffffffffffff80821115612f4b57600080fd5b818501915085601f830112612f5f57600080fd5b81356020612f6c82612ddd565b604051612f798282612bf2565b83815260059390931b8501820192828101915089841115612f9957600080fd5b948201945b83861015612fc0578535612fb181612a70565b82529482019490820190612f9e565b96505086013592505080821115612fd657600080fd5b50612cd085828601612e01565b600081518084526020808501945080840160005b8381101561301357815187529582019590820190600101612ff7565b509495945050505050565b602081526000612ae46020830184612fe3565b6000806080838503121561304457600080fd5b823591506130558460208501612cf0565b90509250929050565b6000806000806080858703121561307457600080fd5b843561307f81612a70565b9350602085013567ffffffffffffffff8082111561309c57600080fd5b6130a888838901612e01565b945060408701359150808211156130be57600080fd5b6130ca88838901612e01565b935060608701359150808211156130e057600080fd5b506130ed87828801612c1f565b91505092959194509250565b6000806040838503121561310c57600080fd5b82359150602083013561311e81612a70565b809150509250929050565b6000806040838503121561313c57600080fd5b823561314781612a70565b91506020830135801515811461311e57600080fd5b60006020828403121561316e57600080fd5b813567ffffffffffffffff81111561318557600080fd5b61319184828501612c1f565b949350505050565b60006101008083526131ad8184018a612b5e565b9150506131dd602083018860ff815116825260ff602082015116602083015260ff60408201511660408301525050565b6001600160a01b03861660808301528460a08301528360c083015282151560e0830152979650505050505050565b6000806040838503121561321e57600080fd5b823561322981612a70565b9150602083013561311e81612a70565b600080600080600060a0868803121561325157600080fd5b853561325c81612a70565b9450602086013561326c81612a70565b93506040860135925060608601359150608086013567ffffffffffffffff81111561329657600080fd5b612f1388828901612c1f565b634e487b7160e01b600052601160045260246000fd5b600082198211156132cb576132cb6132a2565b500190565b600181811c908216806132e457607f821691505b60208210810361330457634e487b7160e01b600052602260045260246000fd5b50919050565b6000815161331c818560208601612b32565b9290920192915050565b600080845481600182811c91508083168061334257607f831692505b6020808410820361336157634e487b7160e01b86526022600452602486fd5b8180156133755760018114613386576133b3565b60ff198616895284890196506133b3565b60008b81526020902060005b868110156133ab5781548b820152908501908301613392565b505084890196505b5050505050506133c3818561330a565b95945050505050565b8281526040602082015260006131916040830184612b5e565b60006101008883528060208401526133ff81840189612b5e565b91505061342f604083018760ff815116825260ff602082015116602083015260ff60408201511660408301525050565b6001600160a01b03851660a08301528360c08301528260e0830152979650505050505050565b600081600019048311821515161561346f5761346f6132a2565b500290565b60008261349157634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b6000600182016134be576134be6132a2565b5060010190565b6000828210156134d7576134d76132a2565b500390565b6040815260006134ef6040830185612fe3565b82810360208401526133c38185612fe3565b60006001600160a01b03808816835280871660208401525060a0604083015261352d60a0830186612fe3565b828103606084015261353f8186612fe3565b905082810360808401526135538185612b5e565b98975050505050505050565b60006020828403121561357157600080fd5b8151612ae481612ab1565b600060033d11156135955760046000803e5060005160e01c5b90565b600060443d10156135a65790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156135d657505050505090565b82850191508151818111156135ee5750505050505090565b843d87010160208285010111156136085750505050505090565b61361760208286010187612bf2565b509095945050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261365a60a0830184612b5e565b97965050505050505056fea164736f6c634300080d000a";

type WallPaperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WallPaperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WallPaper__factory extends ContractFactory {
  constructor(...args: WallPaperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _treasuryAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WallPaper> {
    return super.deploy(
      _treasuryAddress,
      overrides || {}
    ) as Promise<WallPaper>;
  }
  override getDeployTransaction(
    _treasuryAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_treasuryAddress, overrides || {});
  }
  override attach(address: string): WallPaper {
    return super.attach(address) as WallPaper;
  }
  override connect(signer: Signer): WallPaper__factory {
    return super.connect(signer) as WallPaper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WallPaperInterface {
    return new utils.Interface(_abi) as WallPaperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WallPaper {
    return new Contract(address, _abi, signerOrProvider) as WallPaper;
  }
}
