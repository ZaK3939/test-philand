/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  WallPaper,
  WallPaperInterface,
} from "../../../contracts/object/WallPaper";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_treasuryAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ExistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTokenID",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSetTokenSize",
    type: "error",
  },
  {
    inputs: [],
    name: "NonExistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "PaymentBalanceZero",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_newPrice",
        type: "uint256",
      },
    ],
    name: "ChangeTokenPrice",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_uri",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct BaseObject.Size",
        name: "_size",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxClaimed",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "CreateWallPaper",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_uri",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct BaseObject.Size",
        name: "_size",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxClaimed",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "InitWallPaper",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "LogbuyWallPaper",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentReceivedOwner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentWithdrawnOwner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
    ],
    name: "SetCreator",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "exp",
        type: "uint256",
      },
    ],
    name: "SetExp",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newMaxClaimed",
        type: "uint256",
      },
    ],
    name: "SetMaxClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_royalityFee",
        type: "uint256",
      },
    ],
    name: "SetRoyalityFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_secondaryRoyalty",
        type: "uint256",
      },
    ],
    name: "SetSecondaryRoyalityFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "x",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "y",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "z",
        type: "uint8",
      },
    ],
    name: "SetSize",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "SetTokenURI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address payable",
        name: "_treasuryAddress",
        type: "address",
      },
    ],
    name: "SetTreasuryAddress",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "baseuri",
        type: "string",
      },
    ],
    name: "SetbaseMetadataURI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allObjects",
    outputs: [
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxClaimed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "forSale",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseMetadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "buyWallPaper",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newPrice",
        type: "uint256",
      },
    ],
    name: "changeTokenPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "_size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxClaimed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "createWallPaper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "created",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseMetadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getCreator",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getExp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getFreeWallPaper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getMaxClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getSize",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "_size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxClaimed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "initWallPaper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mintBatchObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetAddress",
        type: "address",
      },
    ],
    name: "owner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paymentBalanceOwner",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
    ],
    name: "removeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "royalityFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "secondaryRoyalty",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
    ],
    name: "setCreator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_exp",
        type: "uint256",
      },
    ],
    name: "setExp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newMaxClaimed",
        type: "uint256",
      },
    ],
    name: "setMaxClaimed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_royalityFee",
        type: "uint256",
      },
    ],
    name: "setRoyalityFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_secondaryRoyalty",
        type: "uint256",
      },
    ],
    name: "setSecondaryRoyalityFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct BaseObject.Size",
        name: "_size",
        type: "tuple",
      },
    ],
    name: "setSize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "setTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_treasuryAddress",
        type: "address",
      },
    ],
    name: "setTreasuryAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseMetadataURI",
        type: "string",
      },
    ],
    name: "setbaseMetadataURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasuryAddress",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "withdrawTo",
        type: "address",
      },
    ],
    name: "withdrawOwnerBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620039e5380380620039e5833981016040819052620000349162000205565b604080516020808201835260008083523381529081905291909120805460ff19166001179055620000658162000146565b50600160055560408051808201909152600a8082526957616c6c50617065727360b01b60209092019182526200009e916006916200015f565b506040805180820190915260048082526315d0531360e21b6020909201918252620000cc916007916200015f565b506040805180820190915260188082527f68747470733a2f2f7777772e617277656176652e6e65742f0000000000000000602090920191825262000113916008916200015f565b50600980546001600160a01b0319166001600160a01b0392909216919091179055610bb8600a556101f4600b5562000273565b80516200015b9060039060208401906200015f565b5050565b8280546200016d9062000237565b90600052602060002090601f016020900481019282620001915760008555620001dc565b82601f10620001ac57805160ff1916838001178555620001dc565b82800160010185558215620001dc579182015b82811115620001dc578251825591602001919060010190620001bf565b50620001ea929150620001ee565b5090565b5b80821115620001ea5760008155600101620001ef565b6000602082840312156200021857600080fd5b81516001600160a01b03811681146200023057600080fd5b9392505050565b600181811c908216806200024c57607f821691505b6020821081036200026d57634e487b7160e01b600052602260045260246000fd5b50919050565b61376280620002836000396000f3fe6080604052600436106103005760003560e01c806367478a351161018f578063a22cb465116100e1578063cbdac7101161008a578063e985e9c511610064578063e985e9c51461094b578063ea2fe3cb14610994578063f242432a146109a957600080fd5b8063cbdac710146108af578063d48e638a146108e2578063e498922f1461091b57600080fd5b8063bd85b039116100bb578063bd85b0391461081a578063c457fb3714610847578063c5f956af1461087757600080fd5b8063a22cb465146107c7578063a422d8e8146107e7578063b6ed6da9146107fa57600080fd5b806391686f531161014357806395d89b411161011d57806395d89b41146107625780639733faa51461077757806398f24682146107a757600080fd5b806391686f531461070c5780639237b1851461072c5780639291671a1461074c57600080fd5b80637061d486116101745780637061d4861461069c57806382cb6b72146106bc578063849c5434146106ec57600080fd5b806367478a351461065c578063697436d91461067c57600080fd5b80631e4c7887116102535780634f558e79116101fc57806362e8e8ac116101d657806362e8e8ac146105e35780636605bfda14610603578063666e1b391461062357600080fd5b80634f558e791461057f5780635b2bd79e146105ae578063604c7f80146105c357600080fd5b8063326bb4ad1161022d578063326bb4ad1461051c5780633bb3a24d146105325780634e1273f41461055257600080fd5b80631e4c7887146104a75780632a55205a146104bd5780632eb2c2d6146104fc57600080fd5b80630d09308e116102b5578063162094c41161028f578063162094c414610447578063162d6cab14610467578063173825d91461048757600080fd5b80630d09308e146103e75780630e89341c1461040757806313af40351461042757600080fd5b8063023c23db116102e6578063023c23db1461037857806306fdde03146103a55780630b68e796146103c757600080fd5b8062fdd58e1461031557806301ffc9a71461034857600080fd5b366103105761030e346109c9565b005b600080fd5b34801561032157600080fd5b50610335610330366004612b6e565b610a16565b6040519081526020015b60405180910390f35b34801561035457600080fd5b50610368610363366004612bb0565b610ac4565b604051901515815260200161033f565b34801561038457600080fd5b50610398610393366004612bd4565b610b14565b60405161033f9190612bed565b3480156103b157600080fd5b506103ba610bae565b60405161033f9190612c73565b3480156103d357600080fd5b5061030e6103e2366004612c86565b610c3c565b3480156103f357600080fd5b5061030e610402366004612c86565b610cbf565b34801561041357600080fd5b506103ba610422366004612bd4565b610d3a565b34801561043357600080fd5b5061030e610442366004612ca8565b610d9e565b34801561045357600080fd5b5061030e610462366004612d7c565b610e1b565b34801561047357600080fd5b5061030e610482366004612e48565b610e9c565b34801561049357600080fd5b5061030e6104a2366004612ca8565b610fa9565b3480156104b357600080fd5b50610335600c5481565b3480156104c957600080fd5b506104dd6104d8366004612c86565b611023565b604080516001600160a01b03909316835260208301919091520161033f565b34801561050857600080fd5b5061030e610517366004612f5b565b61104d565b34801561052857600080fd5b50610335600a5481565b34801561053e57600080fd5b506103ba61054d366004612bd4565b6110ef565b34801561055e57600080fd5b5061057261056d366004613009565b611191565b60405161033f9190613107565b34801561058b57600080fd5b5061036861059a366004612bd4565b600090815260046020526040902054151590565b3480156105ba57600080fd5b506103ba6112cf565b3480156105cf57600080fd5b5061030e6105de36600461311a565b6112dc565b3480156105ef57600080fd5b5061030e6105fe366004612c86565b61139e565b34801561060f57600080fd5b5061030e61061e366004612ca8565b611419565b34801561062f57600080fd5b5061036861063e366004612ca8565b6001600160a01b031660009081526020819052604090205460ff1690565b34801561066857600080fd5b5061030e610677366004612ca8565b6114ab565b34801561068857600080fd5b5061030e610697366004613147565b61160e565b3480156106a857600080fd5b5061030e6106b7366004612bd4565b611650565b3480156106c857600080fd5b506103686106d7366004612bd4565b600e6020526000908152604090205460ff1681565b3480156106f857600080fd5b5061030e610707366004612e48565b6116b5565b34801561071857600080fd5b5061030e6107273660046131e2565b61177f565b34801561073857600080fd5b5061030e610747366004612bd4565b61181e565b34801561075857600080fd5b50610335600b5481565b34801561076e57600080fd5b506103ba6118c0565b34801561078357600080fd5b50610335610792366004612bd4565b6000908152600d602052604090206003015490565b3480156107b357600080fd5b5061030e6107c2366004612bd4565b6118cd565b3480156107d357600080fd5b5061030e6107e2366004613212565b611932565b61030e6107f5366004612bd4565b611941565b34801561080657600080fd5b5061030e610815366004613245565b611b17565b34801561082657600080fd5b50610335610835366004612bd4565b60009081526004602052604090205490565b34801561085357600080fd5b50610335610862366004612bd4565b6000908152600d602052604090206004015490565b34801561088357600080fd5b50600954610897906001600160a01b031681565b6040516001600160a01b03909116815260200161033f565b3480156108bb57600080fd5b506108cf6108ca366004612bd4565b611b8a565b60405161033f9796959493929190613282565b3480156108ee57600080fd5b506108976108fd366004612bd4565b6000908152600d60205260409020600201546001600160a01b031690565b34801561092757600080fd5b50610335610936366004612bd4565b6000908152600d602052604090206005015490565b34801561095757600080fd5b506103686109663660046132fb565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205460ff1690565b3480156109a057600080fd5b506103ba611c88565b3480156109b557600080fd5b5061030e6109c4366004613329565b611d1a565b6040518181527faab58724194bfb12b018298382453c333764e73d19ec73cb98d26f8dd10d29cc9060200160405180910390a180600c6000828254610a0e91906133a8565b909155505050565b60006001600160a01b038316610a995760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b5060008181526001602090815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b1480610af557506001600160e01b031982166303a24d0760e21b145b80610abe57506301ffc9a760e01b6001600160e01b0319831614610abe565b60408051606081018252600080825260208201819052918101919091526000828152600d602052604081206001015460ff169003610b655760405163a8e3a97360e01b815260040160405180910390fd5b506000908152600d6020908152604091829020825160608101845260019091015460ff808216835261010082048116938301939093526201000090049091169181019190915290565b60068054610bbb906133c0565b80601f0160208091040260200160405190810160405280929190818152602001828054610be7906133c0565b8015610c345780601f10610c0957610100808354040283529160200191610c34565b820191906000526020600020905b815481529060010190602001808311610c1757829003601f168201915b505050505081565b3360009081526020819052604090205460ff16610c6c576040516349e27cff60e01b815260040160405180910390fd5b6000828152600d602090815260409182902060050183905581518481529081018390527f1e1ef21dc18e8f45f4e05a47d70fbffe8371dbcc8b4815e8dbca1dbd620c436691015b60405180910390a15050565b3360009081526020819052604090205460ff16610cef576040516349e27cff60e01b815260040160405180910390fd5b6000828152600d602090815260409182902060030183905581518481529081018390527fad41bb8f5516e8c7946d99bc48fd3ff0a07239c8ffcf2d103a0612b9ab44a60a9101610cb3565b6000818152600e602052604090205460609060ff16610d6c57604051636aa2a93760e01b815260040160405180910390fd5b6008610d77836110ef565b604051602001610d88929190613416565b6040516020818303038152906040529050919050565b3360009081526020819052604090205460ff16610dce576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260208190526040808220805460ff191660011790555133917f619792ba07bec101df538ab277befa333e4cf1c0274f11de7be2a9507b9c9a0691a350565b3360009081526020819052604090205460ff16610e4b576040516349e27cff60e01b815260040160405180910390fd5b6000828152600d602090815260409091208251610e6a92840190612ac0565b507fd2d827dddfc9c9a02afc5fc68d3251684b36e213a7999ebd90a861f25df4077e8282604051610cb39291906134bc565b3360009081526020819052604090205460ff16610ecc576040516349e27cff60e01b815260040160405180910390fd5b60008681526004602052604090205415610ef9576040516387cf36d160e01b815260040160405180910390fd5b610f038686610e1b565b610f0d86856112dc565b610f17868461177f565b610f218683610cbf565b610f2b868261139e565b6000868152600d602090815260408083206006018054600160ff199182168117909255600e9093529281902080549092169092179055517f31f6039824f388e11e1263c1c0517cc34345ba83cd17b29c533bcc39d60d31b090610f99908890889088908890889088906134d5565b60405180910390a1505050505050565b3360009081526020819052604090205460ff16610fd9576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260208190526040808220805460ff191690555133917fc191551a88c5609788f3532bd94c06479b61b0040eec65f9cd985428ffea643091a350565b60008030612710600b54856110389190613545565b6110429190613564565b915091509250929050565b6001600160a01b03851633148061106957506110698533610966565b6110db5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f76656400000000000000000000000000006064820152608401610a90565b6110e88585858585611db5565b5050505050565b6000818152600d6020526040902080546060919061110c906133c0565b80601f0160208091040260200160405190810160405280929190818152602001828054611138906133c0565b80156111855780601f1061115a57610100808354040283529160200191611185565b820191906000526020600020905b81548152906001019060200180831161116857829003601f168201915b50505050509050919050565b6060815183511461120a5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d6174636800000000000000000000000000000000000000000000006064820152608401610a90565b6000835167ffffffffffffffff81111561122657611226612cc5565b60405190808252806020026020018201604052801561124f578160200160208202803683370190505b50905060005b84518110156112c75761129a85828151811061127357611273613586565b602002602001015185838151811061128d5761128d613586565b6020026020010151610a16565b8282815181106112ac576112ac613586565b60209081029190910101526112c08161359c565b9050611255565b509392505050565b60088054610bbb906133c0565b3360009081526020819052604090205460ff1661130c576040516349e27cff60e01b815260040160405180910390fd5b6000828152600d6020908152604091829020835160019091018054858401518686015160ff94851661ffff1990931683176101009286169283021762ff000019166201000095909116948502179092558451878152938401529282019290925260608101919091527fd8e7c8605fecaf6228c6b5f990bc7f1e865694cc587ef62fe729b926915ef7e090608001610cb3565b3360009081526020819052604090205460ff166113ce576040516349e27cff60e01b815260040160405180910390fd5b6000828152600d602090815260409182902060040183905581518481529081018390527f415cf995faccaec43ce108f2713ebcdb2812b0e0689a8fa7dfdcabf78109ebbb9101610cb3565b3360009081526020819052604090205460ff16611449576040516349e27cff60e01b815260040160405180910390fd5b6009805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527feee016301a2725a577c64816adf35ccf644d07439731069a31748ec3b9102c60906020015b60405180910390a150565b3360009081526020819052604090205460ff166114db576040516349e27cff60e01b815260040160405180910390fd5b60026005540361152d5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610a90565b6002600555600c5460000361155557604051632f31015b60e11b815260040160405180910390fd5b600c80546000918290556040519091906001600160a01b0384169083908381818185875af1925050503d80600081146115aa576040519150601f19603f3d011682016040523d82523d6000602084013e6115af565b606091505b50509050806115d157604051632f31015b60e11b815260040160405180910390fd5b6040518281527f2d5923adf91dd211e633a33f2e27918338e6a33e3b3f386e9d466d1bc52eba799060200160405180910390a15050600160055550565b3360009081526020819052604090205460ff1661163e576040516349e27cff60e01b815260040160405180910390fd5b61164a84848484612024565b50505050565b3360009081526020819052604090205460ff16611680576040516349e27cff60e01b815260040160405180910390fd5b600b8190556040518181527fb69fdb7c7f7b0e17f64074ea1590642f14193039b234aae7a3c68b26ed055adf906020016114a0565b3360009081526020819052604090205460ff166116e5576040516349e27cff60e01b815260040160405180910390fd5b6000868152600e602052604090205460ff1661171457604051636aa2a93760e01b815260040160405180910390fd5b61171e8683610cbf565b6117288686610e1b565b61173286856112dc565b61173c868461177f565b611746868261139e565b7f32ce0d385c993f843478b1e05a3a00e7095cdcebc37dc0fd4439d9caf4c71cd7868686868686604051610f99969594939291906134d5565b3360009081526020819052604090205460ff166117af576040516349e27cff60e01b815260040160405180910390fd5b6000828152600d6020908152604091829020600201805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0385169081179091558251858152918201527f02df56823aeec019d75f2c2396e2a9c68868b26ccc5a4cd9412b2a78f8602f739101610cb3565b3361182857600080fd5b6000818152600d60205260409020600401541561184457600080fd5b6000818152600d602052604090206006015460ff1661186257600080fd5b61186b816121fa565b6000818152600d6020908152604080832060030154600490925290912054111561189457600080fd5b6118bd33826001604051806040016040528060048152602001630307830360e41b815250612270565b50565b60078054610bbb906133c0565b3360009081526020819052604090205460ff166118fd576040516349e27cff60e01b815260040160405180910390fd5b600a8190556040518181527f184fa17d2176718ea1955f61782c763ce239e39e790340793f227b0ba5db53e1906020016114a0565b61193d338383612395565b5050565b3361194b57600080fd5b611954816121fa565b6000818152600d6020526040902060040154341461197157600080fd5b6000818152600d602052604090206006015460ff1661198f57600080fd5b6000818152600d602090815260408083206003015460049092529091205411156119b857600080fd5b6000612710600a54346119cb9190613545565b6119d59190613564565b6000838152600d602052604080822060020154905192935090916001600160a01b039091169083908381818185875af1925050503d8060008114611a35576040519150601f19603f3d011682016040523d82523d6000602084013e611a3a565b606091505b5050905080611a4857600080fd5b6009546000906001600160a01b0316611a6184346135b5565b604051600081818185875af1925050503d8060008114611a9d576040519150601f19603f3d011682016040523d82523d6000602084013e611aa2565b606091505b5050905080611ab057600080fd5b611ad73385600160405180604001604052806002815260200161060f60f31b815250612270565b6040805185815234602082015233917f3d6176a5bd6a4128cf01997eedfaa98d116ee5c518286c9b48aefc7db46afec4910160405180910390a250505050565b3360009081526020819052604090205460ff16611b47576040516349e27cff60e01b815260040160405180910390fd5b8051611b5a906008906020840190612ac0565b507ffa52149a99a7016c4576d7bb33adefe5c4372aeded2a98a40f46d6ef33109c4d816040516114a09190612c73565b600d60205260009081526040902080548190611ba5906133c0565b80601f0160208091040260200160405190810160405280929190818152602001828054611bd1906133c0565b8015611c1e5780601f10611bf357610100808354040283529160200191611c1e565b820191906000526020600020905b815481529060010190602001808311611c0157829003601f168201915b505060408051606081018252600187015460ff80821683526101008204811660208401526201000090910481169282019290925260028701546003880154600489015460058a01546006909a0154989993986001600160a01b039093169750909550935090911687565b606060088054611c97906133c0565b80601f0160208091040260200160405190810160405280929190818152602001828054611cc3906133c0565b8015611d105780601f10611ce557610100808354040283529160200191611d10565b820191906000526020600020905b815481529060010190602001808311611cf357829003601f168201915b5050505050905090565b6001600160a01b038516331480611d365750611d368533610966565b611da85760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f76656400000000000000000000000000000000000000000000006064820152608401610a90565b6110e88585858585612489565b8151835114611e175760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610a90565b6001600160a01b038416611e7b5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610a90565b33611e8a818787878787612646565b60005b8451811015611fb6576000858281518110611eaa57611eaa613586565b602002602001015190506000858381518110611ec857611ec8613586565b60209081029190910181015160008481526001835260408082206001600160a01b038e168352909352919091205490915081811015611f5c5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610a90565b60008381526001602090815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290611f9b9084906133a8565b9250508190555050505080611faf9061359c565b9050611e8d565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516120069291906135cc565b60405180910390a461201c8187878787876127d4565b505050505050565b6001600160a01b0384166120845760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610a90565b81518351146120e65760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610a90565b336120f681600087878787612646565b60005b84518110156121925783818151811061211457612114613586565b60200260200101516001600087848151811061213257612132613586565b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b03168152602001908152602001600020600082825461217a91906133a8565b9091555081905061218a8161359c565b9150506120f9565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516121e39291906135cc565b60405180910390a46110e8816000878787876127d4565b80158061222357506000818152600d602090815260408083206003015460049092529091205410155b1561224157604051636aa2a93760e01b815260040160405180910390fd5b6000818152600e602052604090205460ff166118bd57604051636aa2a93760e01b815260040160405180910390fd5b6001600160a01b0384166122d05760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610a90565b3360006122dc85612979565b905060006122e985612979565b90506122fa83600089858589612646565b60008681526001602090815260408083206001600160a01b038b1684529091528120805487929061232c9084906133a8565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461238c836000898989896129c4565b50505050505050565b816001600160a01b0316836001600160a01b03160361241c5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c6600000000000000000000000000000000000000000000006064820152608401610a90565b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166124ed5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610a90565b3360006124f985612979565b9050600061250685612979565b9050612516838989858589612646565b60008681526001602090815260408083206001600160a01b038c1684529091529020548581101561259c5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610a90565b60008781526001602090815260408083206001600160a01b038d8116855292528083208985039055908a168252812080548892906125db9084906133a8565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461263b848a8a8a8a8a6129c4565b505050505050505050565b6001600160a01b0385166126cd5760005b83518110156126cb5782818151811061267257612672613586565b60200260200101516004600086848151811061269057612690613586565b6020026020010151815260200190815260200160002060008282546126b591906133a8565b909155506126c490508161359c565b9050612657565b505b6001600160a01b03841661201c5760005b835181101561238c5760008482815181106126fb576126fb613586565b60200260200101519050600084838151811061271957612719613586565b60200260200101519050600060046000848152602001908152602001600020549050818110156127b15760405162461bcd60e51b815260206004820152602860248201527f455243313135353a206275726e20616d6f756e74206578636565647320746f7460448201527f616c537570706c790000000000000000000000000000000000000000000000006064820152608401610a90565b600092835260046020526040909220910390556127cd8161359c565b90506126de565b6001600160a01b0384163b1561201c5760405163bc197c8160e01b81526001600160a01b0385169063bc197c819061281890899089908890889088906004016135f1565b6020604051808303816000875af1925050508015612853575060408051601f3d908101601f191682019092526128509181019061364f565b60015b6129085761285f61366c565b806308c379a0036128985750612873613688565b8061287e575061289a565b8060405162461bcd60e51b8152600401610a909190612c73565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e7465720000000000000000000000006064820152608401610a90565b6001600160e01b0319811663bc197c8160e01b1461238c5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610a90565b604080516001808252818301909252606091600091906020808301908036833701905050905082816000815181106129b3576129b3613586565b602090810291909101015292915050565b6001600160a01b0384163b1561201c5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190612a089089908990889088908890600401613712565b6020604051808303816000875af1925050508015612a43575060408051601f3d908101601f19168201909252612a409181019061364f565b60015b612a4f5761285f61366c565b6001600160e01b0319811663f23a6e6160e01b1461238c5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610a90565b828054612acc906133c0565b90600052602060002090601f016020900481019282612aee5760008555612b34565b82601f10612b0757805160ff1916838001178555612b34565b82800160010185558215612b34579182015b82811115612b34578251825591602001919060010190612b19565b50612b40929150612b44565b5090565b5b80821115612b405760008155600101612b45565b6001600160a01b03811681146118bd57600080fd5b60008060408385031215612b8157600080fd5b8235612b8c81612b59565b946020939093013593505050565b6001600160e01b0319811681146118bd57600080fd5b600060208284031215612bc257600080fd5b8135612bcd81612b9a565b9392505050565b600060208284031215612be657600080fd5b5035919050565b60608101610abe828460ff815116825260ff602082015116602083015260ff60408201511660408301525050565b60005b83811015612c36578181015183820152602001612c1e565b8381111561164a5750506000910152565b60008151808452612c5f816020860160208601612c1b565b601f01601f19169290920160200192915050565b602081526000612bcd6020830184612c47565b60008060408385031215612c9957600080fd5b50508035926020909101359150565b600060208284031215612cba57600080fd5b8135612bcd81612b59565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715612d0157612d01612cc5565b6040525050565b600082601f830112612d1957600080fd5b813567ffffffffffffffff811115612d3357612d33612cc5565b604051612d4a601f8301601f191660200182612cdb565b818152846020838601011115612d5f57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215612d8f57600080fd5b82359150602083013567ffffffffffffffff811115612dad57600080fd5b612db985828601612d08565b9150509250929050565b803560ff81168114612dd457600080fd5b919050565b600060608284031215612deb57600080fd5b6040516060810181811067ffffffffffffffff82111715612e0e57612e0e612cc5565b604052905080612e1d83612dc3565b8152612e2b60208401612dc3565b6020820152612e3c60408401612dc3565b60408201525092915050565b6000806000806000806101008789031215612e6257600080fd5b86359550602087013567ffffffffffffffff811115612e8057600080fd5b612e8c89828a01612d08565b955050612e9c8860408901612dd9565b935060a0870135612eac81612b59565b9598949750929560c08101359460e0909101359350915050565b600067ffffffffffffffff821115612ee057612ee0612cc5565b5060051b60200190565b600082601f830112612efb57600080fd5b81356020612f0882612ec6565b604051612f158282612cdb565b83815260059390931b8501820192828101915086841115612f3557600080fd5b8286015b84811015612f505780358352918301918301612f39565b509695505050505050565b600080600080600060a08688031215612f7357600080fd5b8535612f7e81612b59565b94506020860135612f8e81612b59565b9350604086013567ffffffffffffffff80821115612fab57600080fd5b612fb789838a01612eea565b94506060880135915080821115612fcd57600080fd5b612fd989838a01612eea565b93506080880135915080821115612fef57600080fd5b50612ffc88828901612d08565b9150509295509295909350565b6000806040838503121561301c57600080fd5b823567ffffffffffffffff8082111561303457600080fd5b818501915085601f83011261304857600080fd5b8135602061305582612ec6565b6040516130628282612cdb565b83815260059390931b850182019282810191508984111561308257600080fd5b948201945b838610156130a957853561309a81612b59565b82529482019490820190613087565b965050860135925050808211156130bf57600080fd5b50612db985828601612eea565b600081518084526020808501945080840160005b838110156130fc578151875295820195908201906001016130e0565b509495945050505050565b602081526000612bcd60208301846130cc565b6000806080838503121561312d57600080fd5b8235915061313e8460208501612dd9565b90509250929050565b6000806000806080858703121561315d57600080fd5b843561316881612b59565b9350602085013567ffffffffffffffff8082111561318557600080fd5b61319188838901612eea565b945060408701359150808211156131a757600080fd5b6131b388838901612eea565b935060608701359150808211156131c957600080fd5b506131d687828801612d08565b91505092959194509250565b600080604083850312156131f557600080fd5b82359150602083013561320781612b59565b809150509250929050565b6000806040838503121561322557600080fd5b823561323081612b59565b91506020830135801515811461320757600080fd5b60006020828403121561325757600080fd5b813567ffffffffffffffff81111561326e57600080fd5b61327a84828501612d08565b949350505050565b60006101208083526132968184018b612c47565b9150506132c6602083018960ff815116825260ff602082015116602083015260ff60408201511660408301525050565b6001600160a01b0396909616608082015260a081019490945260c084019290925260e083015215156101009091015292915050565b6000806040838503121561330e57600080fd5b823561331981612b59565b9150602083013561320781612b59565b600080600080600060a0868803121561334157600080fd5b853561334c81612b59565b9450602086013561335c81612b59565b93506040860135925060608601359150608086013567ffffffffffffffff81111561338657600080fd5b612ffc88828901612d08565b634e487b7160e01b600052601160045260246000fd5b600082198211156133bb576133bb613392565b500190565b600181811c908216806133d457607f821691505b6020821081036133f457634e487b7160e01b600052602260045260246000fd5b50919050565b6000815161340c818560208601612c1b565b9290920192915050565b600080845481600182811c91508083168061343257607f831692505b6020808410820361345157634e487b7160e01b86526022600452602486fd5b8180156134655760018114613476576134a3565b60ff198616895284890196506134a3565b60008b81526020902060005b8681101561349b5781548b820152908501908301613482565b505084890196505b5050505050506134b381856133fa565b95945050505050565b82815260406020820152600061327a6040830184612c47565b60006101008883528060208401526134ef81840189612c47565b91505061351f604083018760ff815116825260ff602082015116602083015260ff60408201511660408301525050565b6001600160a01b03851660a08301528360c08301528260e0830152979650505050505050565b600081600019048311821515161561355f5761355f613392565b500290565b60008261358157634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b6000600182016135ae576135ae613392565b5060010190565b6000828210156135c7576135c7613392565b500390565b6040815260006135df60408301856130cc565b82810360208401526134b381856130cc565b60006001600160a01b03808816835280871660208401525060a0604083015261361d60a08301866130cc565b828103606084015261362f81866130cc565b905082810360808401526136438185612c47565b98975050505050505050565b60006020828403121561366157600080fd5b8151612bcd81612b9a565b600060033d11156136855760046000803e5060005160e01c5b90565b600060443d10156136965790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156136c657505050505090565b82850191508151818111156136de5750505050505090565b843d87010160208285010111156136f85750505050505090565b61370760208286010187612cdb565b509095945050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261374a60a0830184612c47565b97965050505050505056fea164736f6c634300080d000a";

type WallPaperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WallPaperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WallPaper__factory extends ContractFactory {
  constructor(...args: WallPaperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _treasuryAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WallPaper> {
    return super.deploy(
      _treasuryAddress,
      overrides || {}
    ) as Promise<WallPaper>;
  }
  override getDeployTransaction(
    _treasuryAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_treasuryAddress, overrides || {});
  }
  override attach(address: string): WallPaper {
    return super.attach(address) as WallPaper;
  }
  override connect(signer: Signer): WallPaper__factory {
    return super.connect(signer) as WallPaper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WallPaperInterface {
    return new utils.Interface(_abi) as WallPaperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WallPaper {
    return new Contract(address, _abi, signerOrProvider) as WallPaper;
  }
}
