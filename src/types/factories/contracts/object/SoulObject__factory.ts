/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  SoulObject,
  SoulObjectInterface,
} from "../../../contracts/object/SoulObject";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ExistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSetTokenSize",
    type: "error",
  },
  {
    inputs: [],
    name: "NonExistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAllowTransfer",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allObjects",
    outputs: [
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct SoulObject.Size",
        name: "size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxClaimed",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "forSale",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseMetadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct SoulObject.Size",
        name: "_size",
        type: "tuple",
      },
      {
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_newMaxClaimed",
        type: "uint256",
      },
    ],
    name: "createObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseMetadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getCreator",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getMaxClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getSize",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct SoulObject.Size",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getSoulObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetAddress",
        type: "address",
      },
    ],
    name: "owner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
    ],
    name: "removeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "_creator",
        type: "address",
      },
    ],
    name: "setCreator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newMaxClaimed",
        type: "uint256",
      },
    ],
    name: "setMaxClaimed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct SoulObject.Size",
        name: "_size",
        type: "tuple",
      },
    ],
    name: "setSize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "setTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "baseuri",
        type: "string",
      },
    ],
    name: "setbaseMetadataURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040805160208101909152600081526200002c8162000095565b5033600090815260046020908152604091829020805460ff19166001179055815180830190925260188083527f68747470733a2f2f7777772e617277656176652e6e65742f0000000000000000929091019182526200008e91600591620000ae565b5062000190565b8051620000aa906002906020840190620000ae565b5050565b828054620000bc9062000154565b90600052602060002090601f016020900481019282620000e057600085556200012b565b82601f10620000fb57805160ff19168380011785556200012b565b828001600101855582156200012b579182015b828111156200012b5782518255916020019190600101906200010e565b50620001399291506200013d565b5090565b5b808211156200013957600081556001016200013e565b600181811c908216806200016957607f821691505b6020821081036200018a57634e487b7160e01b600052602260045260246000fd5b50919050565b61265580620001a06000396000f3fe608060405234801561001057600080fd5b50600436106101b85760003560e01c80635b2bd79e116100f9578063bb90078e11610097578063d48e638a11610071578063d48e638a14610409578063e985e9c514610434578063ea2fe3cb14610470578063f242432a1461047857600080fd5b8063bb90078e146103b2578063bd85b039146103c5578063cbdac710146103e557600080fd5b806391686f53116100d357806391686f53146103565780639733faa514610369578063a22cb4651461038c578063b6ed6da91461039f57600080fd5b80635b2bd79e1461030f578063604c7f8014610317578063666e1b391461032a57600080fd5b8063162094c4116101665780632eb2c2d6116101405780632eb2c2d6146102a75780633bb3a24d146102ba5780634e1273f4146102cd5780634f558e79146102ed57600080fd5b8063162094c41461026e578063173825d9146102815780631cd307d41461029457600080fd5b80630d09308e116101975780630d09308e146102265780630e89341c1461023b57806313af40351461025b57600080fd5b8062fdd58e146101bd57806301ffc9a7146101e3578063023c23db14610206575b600080fd5b6101d06101cb366004611be2565b61048b565b6040519081526020015b60405180910390f35b6101f66101f1366004611c24565b610537565b60405190151581526020016101da565b610219610214366004611c48565b610587565b6040516101da9190611c61565b610239610234366004611c8f565b61064a565b005b61024e610249366004611c48565b6106bb565b6040516101da9190611d09565b610239610269366004611d1c565b61071c565b61023961027c366004611df0565b610799565b61023961028f366004611d1c565b610819565b6102396102a2366004611e4f565b610893565b6102396102b5366004611f57565b610929565b61024e6102c8366004611c48565b6109c4565b6102e06102db366004612005565b610a91565b6040516101da9190612103565b6101f66102fb366004611c48565b600090815260036020526040902054151590565b61024e610bcf565b610239610325366004612116565b610c5d565b6101f6610338366004611d1c565b6001600160a01b031660009081526004602052604090205460ff1690565b610239610364366004612143565b610cdc565b6101d0610377366004611c48565b60009081526007602052604090206003015490565b61023961039a366004612173565b610d81565b6102396103ad3660046121a6565b610d90565b6102396103c0366004611c48565b610dd3565b6101d06103d3366004611c48565b60009081526003602052604090205490565b6103f86103f3366004611c48565b610e65565b6040516101da9594939291906121e3565b61041c610417366004611c48565b610f57565b6040516001600160a01b0390911681526020016101da565b6101f661044236600461224c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b61024e610fa2565b61023961048636600461227a565b611034565b60006001600160a01b03831661050e5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b148061056857506001600160e01b031982166303a24d0760e21b145b8061053157506301ffc9a760e01b6001600160e01b0319831614610531565b60408051606081018252600080825260208083018290528284018290528482526003905291909120546105cd57604051634a1850bf60e11b815260040160405180910390fd5b60008281526007602052604081206001015460ff1690036106015760405163a8e3a97360e01b815260040160405180910390fd5b50600090815260076020908152604091829020825160608101845260019091015460ff808216835261010082048116938301939093526201000090049091169181019190915290565b3360009081526004602052604090205460ff1661067a576040516349e27cff60e01b815260040160405180910390fd5b6000828152600360205260409020546106a657604051634a1850bf60e11b815260040160405180910390fd5b60009182526007602052604090912060030155565b6000818152600360205260409020546060906106ea57604051634a1850bf60e11b815260040160405180910390fd5b60056106f5836109c4565b604051602001610706929190612333565b6040516020818303038152906040529050919050565b3360009081526004602052604090205460ff1661074c576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260046020526040808220805460ff191660011790555133917f619792ba07bec101df538ab277befa333e4cf1c0274f11de7be2a9507b9c9a0691a350565b3360009081526004602052604090205460ff166107c9576040516349e27cff60e01b815260040160405180910390fd5b6000828152600360205260409020546107f557604051634a1850bf60e11b815260040160405180910390fd5b6000828152600760209081526040909120825161081492840190611b34565b505050565b3360009081526004602052604090205460ff16610849576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260046020526040808220805460ff191690555133917fc191551a88c5609788f3532bd94c06479b61b0040eec65f9cd985428ffea643091a350565b3360009081526004602052604090205460ff166108c3576040516349e27cff60e01b815260040160405180910390fd5b336108cd57600080fd5b600085815260036020526040902054156108fa576040516387cf36d160e01b815260040160405180910390fd5b610904858261064a565b61090e8585610799565b6109188584610c5d565b6109228583610cdc565b5050505050565b6001600160a01b03851633148061094557506109458533610442565b6109b75760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f76656400000000000000000000000000006064820152608401610505565b610922858585858561107e565b6000818152600360205260409020546060906109f357604051634a1850bf60e11b815260040160405180910390fd5b60008281526007602052604090208054610a0c906122e3565b80601f0160208091040260200160405190810160405280929190818152602001828054610a38906122e3565b8015610a855780601f10610a5a57610100808354040283529160200191610a85565b820191906000526020600020905b815481529060010190602001808311610a6857829003601f168201915b50505050509050919050565b60608151835114610b0a5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d6174636800000000000000000000000000000000000000000000006064820152608401610505565b6000835167ffffffffffffffff811115610b2657610b26611d39565b604051908082528060200260200182016040528015610b4f578160200160208202803683370190505b50905060005b8451811015610bc757610b9a858281518110610b7357610b736123d9565b6020026020010151858381518110610b8d57610b8d6123d9565b602002602001015161048b565b828281518110610bac57610bac6123d9565b6020908102919091010152610bc081612405565b9050610b55565b509392505050565b60058054610bdc906122e3565b80601f0160208091040260200160405190810160405280929190818152602001828054610c08906122e3565b8015610c555780601f10610c2a57610100808354040283529160200191610c55565b820191906000526020600020905b815481529060010190602001808311610c3857829003601f168201915b505050505081565b3360009081526004602052604090205460ff16610c8d576040516349e27cff60e01b815260040160405180910390fd5b600082815260036020526040902054610cb957604051634a1850bf60e11b815260040160405180910390fd5b60008281526007602052604090208190600101610cd68282612431565b50505050565b3360009081526004602052604090205460ff16610d0c576040516349e27cff60e01b815260040160405180910390fd5b600082815260036020526040902054610d3857604051634a1850bf60e11b815260040160405180910390fd5b60009182526007602052604090912060020180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03909216919091179055565b610d8c3383836112ff565b5050565b3360009081526004602052604090205460ff16610dc0576040516349e27cff60e01b815260040160405180910390fd5b8051610d8c906005906020840190611b34565b3360009081526004602052604090205460ff16610e03576040516349e27cff60e01b815260040160405180910390fd5b33610e0d57600080fd5b600081815260036020526040902054610e3957604051634a1850bf60e11b815260040160405180910390fd5b610e6233826001604051806040016040528060048152602001630307830360e41b8152506113f3565b50565b600760205260009081526040902080548190610e80906122e3565b80601f0160208091040260200160405190810160405280929190818152602001828054610eac906122e3565b8015610ef95780601f10610ece57610100808354040283529160200191610ef9565b820191906000526020600020905b815481529060010190602001808311610edc57829003601f168201915b505060408051606081018252600187015460ff80821683526101008204811660208401526201000090910481169282019290925260028701546003880154600490980154969791966001600160a01b03909116955090935016905085565b600081815260036020526040812054610f8357604051634a1850bf60e11b815260040160405180910390fd5b506000908152600760205260409020600201546001600160a01b031690565b606060058054610fb1906122e3565b80601f0160208091040260200160405190810160405280929190818152602001828054610fdd906122e3565b801561102a5780601f10610fff5761010080835404028352916020019161102a565b820191906000526020600020905b81548152906001019060200180831161100d57829003601f168201915b5050505050905090565b6001600160a01b0385163014158061105357506001600160a01b038416155b156110715760405163d7b1408960e01b815260040160405180910390fd5b6109228585858585611503565b81518351146110f55760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d617463680000000000000000000000000000000000000000000000006064820152608401610505565b6001600160a01b0384166111595760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610505565b3361116881878787878761159e565b60005b8451811015611291576000858281518110611188576111886123d9565b6020026020010151905060008583815181106111a6576111a66123d9565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156112395760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610505565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290611276908490612490565b925050819055505050508061128a90612405565b905061116b565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516112e19291906124a8565b60405180910390a46112f78187878787876116b3565b505050505050565b816001600160a01b0316836001600160a01b0316036113865760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c6600000000000000000000000000000000000000000000006064820152608401610505565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166114535760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610505565b336114738160008761146488611858565b61146d88611858565b8761159e565b6000848152602081815260408083206001600160a01b0389168452909152812080548592906114a3908490612490565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610922816000878787876118a3565b6001600160a01b03851633148061151f575061151f8533610442565b6115915760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f76656400000000000000000000000000000000000000000000006064820152608401610505565b610922858585858561199f565b6001600160a01b0385166116255760005b8351811015611623578281815181106115ca576115ca6123d9565b6020026020010151600360008684815181106115e8576115e86123d9565b60200260200101518152602001908152602001600020600082825461160d9190612490565b9091555061161c905081612405565b90506115af565b505b6001600160a01b0384166112f75760005b83518110156116aa57828181518110611651576116516123d9565b60200260200101516003600086848151811061166f5761166f6123d9565b60200260200101518152602001908152602001600020600082825461169491906124cd565b909155506116a3905081612405565b9050611636565b50505050505050565b6001600160a01b0384163b156112f75760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906116f790899089908890889088906004016124e4565b6020604051808303816000875af1925050508015611732575060408051601f3d908101601f1916820190925261172f91810190612542565b60015b6117e75761173e61255f565b806308c379a003611777575061175261257b565b8061175d5750611779565b8060405162461bcd60e51b81526004016105059190611d09565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e7465720000000000000000000000006064820152608401610505565b6001600160e01b0319811663bc197c8160e01b146116aa5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610505565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110611892576118926123d9565b602090810291909101015292915050565b6001600160a01b0384163b156112f75760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906118e79089908990889088908890600401612605565b6020604051808303816000875af1925050508015611922575060408051601f3d908101601f1916820190925261191f91810190612542565b60015b61192e5761173e61255f565b6001600160e01b0319811663f23a6e6160e01b146116aa5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610505565b6001600160a01b038416611a035760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610505565b33611a1381878761146488611858565b6000848152602081815260408083206001600160a01b038a16845290915290205483811015611a975760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610505565b6000858152602081815260408083206001600160a01b038b8116855292528083208785039055908816825281208054869290611ad4908490612490565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46116aa8288888888886118a3565b828054611b40906122e3565b90600052602060002090601f016020900481019282611b625760008555611ba8565b82601f10611b7b57805160ff1916838001178555611ba8565b82800160010185558215611ba8579182015b82811115611ba8578251825591602001919060010190611b8d565b50611bb4929150611bb8565b5090565b5b80821115611bb45760008155600101611bb9565b6001600160a01b0381168114610e6257600080fd5b60008060408385031215611bf557600080fd5b8235611c0081611bcd565b946020939093013593505050565b6001600160e01b031981168114610e6257600080fd5b600060208284031215611c3657600080fd5b8135611c4181611c0e565b9392505050565b600060208284031215611c5a57600080fd5b5035919050565b60608101610531828460ff815116825260ff602082015116602083015260ff60408201511660408301525050565b60008060408385031215611ca257600080fd5b50508035926020909101359150565b60005b83811015611ccc578181015183820152602001611cb4565b83811115610cd65750506000910152565b60008151808452611cf5816020860160208601611cb1565b601f01601f19169290920160200192915050565b602081526000611c416020830184611cdd565b600060208284031215611d2e57600080fd5b8135611c4181611bcd565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715611d7557611d75611d39565b6040525050565b600082601f830112611d8d57600080fd5b813567ffffffffffffffff811115611da757611da7611d39565b604051611dbe601f8301601f191660200182611d4f565b818152846020838601011115611dd357600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215611e0357600080fd5b82359150602083013567ffffffffffffffff811115611e2157600080fd5b611e2d85828601611d7c565b9150509250929050565b600060608284031215611e4957600080fd5b50919050565b600080600080600060e08688031215611e6757600080fd5b85359450602086013567ffffffffffffffff811115611e8557600080fd5b611e9188828901611d7c565b945050611ea18760408801611e37565b925060a0860135611eb181611bcd565b9497939650919460c0013592915050565b600067ffffffffffffffff821115611edc57611edc611d39565b5060051b60200190565b600082601f830112611ef757600080fd5b81356020611f0482611ec2565b604051611f118282611d4f565b83815260059390931b8501820192828101915086841115611f3157600080fd5b8286015b84811015611f4c5780358352918301918301611f35565b509695505050505050565b600080600080600060a08688031215611f6f57600080fd5b8535611f7a81611bcd565b94506020860135611f8a81611bcd565b9350604086013567ffffffffffffffff80821115611fa757600080fd5b611fb389838a01611ee6565b94506060880135915080821115611fc957600080fd5b611fd589838a01611ee6565b93506080880135915080821115611feb57600080fd5b50611ff888828901611d7c565b9150509295509295909350565b6000806040838503121561201857600080fd5b823567ffffffffffffffff8082111561203057600080fd5b818501915085601f83011261204457600080fd5b8135602061205182611ec2565b60405161205e8282611d4f565b83815260059390931b850182019282810191508984111561207e57600080fd5b948201945b838610156120a557853561209681611bcd565b82529482019490820190612083565b965050860135925050808211156120bb57600080fd5b50611e2d85828601611ee6565b600081518084526020808501945080840160005b838110156120f8578151875295820195908201906001016120dc565b509495945050505050565b602081526000611c4160208301846120c8565b6000806080838503121561212957600080fd5b8235915061213a8460208501611e37565b90509250929050565b6000806040838503121561215657600080fd5b82359150602083013561216881611bcd565b809150509250929050565b6000806040838503121561218657600080fd5b823561219181611bcd565b91506020830135801515811461216857600080fd5b6000602082840312156121b857600080fd5b813567ffffffffffffffff8111156121cf57600080fd5b6121db84828501611d7c565b949350505050565b60e0815260006121f660e0830188611cdd565b9050612225602083018760ff815116825260ff602082015116602083015260ff60408201511660408301525050565b6001600160a01b03851660808301528360a083015282151560c08301529695505050505050565b6000806040838503121561225f57600080fd5b823561226a81611bcd565b9150602083013561216881611bcd565b600080600080600060a0868803121561229257600080fd5b853561229d81611bcd565b945060208601356122ad81611bcd565b93506040860135925060608601359150608086013567ffffffffffffffff8111156122d757600080fd5b611ff888828901611d7c565b600181811c908216806122f757607f821691505b602082108103611e4957634e487b7160e01b600052602260045260246000fd5b60008151612329818560208601611cb1565b9290920192915050565b600080845481600182811c91508083168061234f57607f831692505b6020808410820361236e57634e487b7160e01b86526022600452602486fd5b8180156123825760018114612393576123c0565b60ff198616895284890196506123c0565b60008b81526020902060005b868110156123b85781548b82015290850190830161239f565b505084890196505b5050505050506123d08185612317565b95945050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201612417576124176123ef565b5060010190565b6000813560ff8116811461053157600080fd5b60ff61243c8361241e565b1681548160ff19821617835561ff006124576020860161241e565b60081b16808361ffff1984161717845562ff00006124776040870161241e565b60101b168362ffffff1984161782171784555050505050565b600082198211156124a3576124a36123ef565b500190565b6040815260006124bb60408301856120c8565b82810360208401526123d081856120c8565b6000828210156124df576124df6123ef565b500390565b60006001600160a01b03808816835280871660208401525060a0604083015261251060a08301866120c8565b828103606084015261252281866120c8565b905082810360808401526125368185611cdd565b98975050505050505050565b60006020828403121561255457600080fd5b8151611c4181611c0e565b600060033d11156125785760046000803e5060005160e01c5b90565b600060443d10156125895790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156125b957505050505090565b82850191508151818111156125d15750505050505090565b843d87010160208285010111156125eb5750505050505090565b6125fa60208286010187611d4f565b509095945050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261263d60a0830184611cdd565b97965050505050505056fea164736f6c634300080d000a";

type SoulObjectConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SoulObjectConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SoulObject__factory extends ContractFactory {
  constructor(...args: SoulObjectConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SoulObject> {
    return super.deploy(overrides || {}) as Promise<SoulObject>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SoulObject {
    return super.attach(address) as SoulObject;
  }
  override connect(signer: Signer): SoulObject__factory {
    return super.connect(signer) as SoulObject__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SoulObjectInterface {
    return new utils.Interface(_abi) as SoulObjectInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SoulObject {
    return new Contract(address, _abi, signerOrProvider) as SoulObject;
  }
}
