/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PhiObject, PhiObjectInterface } from "../../contracts/PhiObject";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTokenID",
    type: "error",
  },
  {
    inputs: [],
    name: "NonExistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseMetadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseMetadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMaxClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getSize",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct PhiObject.Size",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenLink",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mintBatchObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mintObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "objectSize",
    outputs: [
      {
        internalType: "uint8",
        name: "x",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "y",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "z",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetAddress",
        type: "address",
      },
    ],
    name: "owner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
    ],
    name: "removeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newMaxClaimed",
        type: "uint256",
      },
    ],
    name: "setMaxClaimed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct PhiObject.Size",
        name: "size",
        type: "tuple",
      },
    ],
    name: "setSize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "setTokenLink",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "baseuri",
        type: "string",
      },
    ],
    name: "setbaseMetadataURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenURL",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526103e86009553480156200001757600080fd5b5060408051602081019091526000815262000032816200009b565b5033600090815260046020908152604091829020805460ff19166001179055815180830190925260188083527f68747470733a2f2f7777772e617277656176652e6e65742f0000000000000000929091019182526200009491600591620000b4565b5062000196565b8051620000b0906002906020840190620000b4565b5050565b828054620000c2906200015a565b90600052602060002090601f016020900481019282620000e6576000855562000131565b82601f106200010157805160ff191683800117855562000131565b8280016001018555821562000131579182015b828111156200013157825182559160200191906001019062000114565b506200013f92915062000143565b5090565b5b808211156200013f576000815560010162000144565b600181811c908216806200016f57607f821691505b6020821081036200019057634e487b7160e01b600052602260045260246000fd5b50919050565b61243a80620001a66000396000f3fe608060405234801561001057600080fd5b50600436106101ad5760003560e01c80635972dbf3116100ee578063a393a97d11610097578063d980f4ae11610071578063d980f4ae14610474578063e985e9c514610487578063ea2fe3cb146104c3578063f242432a146104cb57600080fd5b8063a393a97d146103e7578063b6ed6da914610441578063bd85b0391461045457600080fd5b8063666e1b39116100c8578063666e1b3914610395578063697436d9146103c1578063a22cb465146103d457600080fd5b80635972dbf3146103675780635b2bd79e1461037a578063604c7f801461038257600080fd5b8063173825d91161015b5780632eb2c2d6116101355780632eb2c2d61461030a5780633acae5151461031d5780634e1273f4146103255780634f558e791461034557600080fd5b8063173825d9146102d157806319c9a761146102e45780631c271cc7146102f757600080fd5b80630e89341c1161018c5780630e89341c1461028957806313af4035146102a9578063154e839e146102be57600080fd5b8062fdd58e146101b257806301ffc9a7146101d8578063023c23db146101fb575b600080fd5b6101c56101c0366004611a3c565b6104de565b6040519081526020015b60405180910390f35b6101eb6101e6366004611a7c565b610587565b60405190151581526020016101cf565b61025d610209366004611aa0565b6040805160608082018352600080835260208084018290529284018190529384526006825292829020825193840183525460ff80821685526101008204811692850192909252620100009004169082015290565b60408051825160ff908116825260208085015182169083015292820151909216908201526060016101cf565b61029c610297366004611aa0565b6105d9565b6040516101cf9190611b11565b6102bc6102b7366004611b24565b61063a565b005b61029c6102cc366004611aa0565b6106b7565b6102bc6102df366004611b24565b610751565b6102bc6102f2366004611aa0565b6107cb565b61029c610305366004611aa0565b610800565b6102bc610318366004611c8b565b6108a9565b6009546101c5565b610338610333366004611d35565b61094b565b6040516101cf9190611e3b565b6101eb610353366004611aa0565b600090815260036020526040902054151590565b6102bc610375366004611e4e565b610a89565b61029c610ae6565b6102bc610390366004611e8b565b610af3565b6101eb6103a3366004611b24565b6001600160a01b031660009081526004602052604090205460ff1690565b6102bc6103cf366004611ec3565b610b4c565b6102bc6103e2366004611f5c565b610b88565b61041d6103f5366004611aa0565b60066020526000908152604090205460ff808216916101008104821691620100009091041683565b6040805160ff948516815292841660208401529216918101919091526060016101cf565b6102bc61044f366004611f98565b610b97565b6101c5610462366004611aa0565b60009081526003602052604090205490565b6102bc610482366004611fd5565b610bda565b6101eb61049536600461202a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b61029c610c16565b6102bc6104d936600461205d565b610ca8565b60006001600160a01b0383166105615760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b14806105b857506001600160e01b031982166303a24d0760e21b145b806105d357506301ffc9a760e01b6001600160e01b03198316145b92915050565b60008181526003602052604090205460609061060857604051634a1850bf60e11b815260040160405180910390fd5b600561061383610800565b604051602001610624929190612118565b6040516020818303038152906040529050919050565b3360009081526004602052604090205460ff1661066a576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260046020526040808220805460ff191660011790555133917f619792ba07bec101df538ab277befa333e4cf1c0274f11de7be2a9507b9c9a0691a350565b600760205260009081526040902080546106d0906120c2565b80601f01602080910402602001604051908101604052809291908181526020018280546106fc906120c2565b80156107495780601f1061071e57610100808354040283529160200191610749565b820191906000526020600020905b81548152906001019060200180831161072c57829003601f168201915b505050505081565b3360009081526004602052604090205460ff16610781576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260046020526040808220805460ff191690555133917fc191551a88c5609788f3532bd94c06479b61b0040eec65f9cd985428ffea643091a350565b3360009081526004602052604090205460ff166107fb576040516349e27cff60e01b815260040160405180910390fd5b600955565b606061080b82610cb5565b60008281526007602052604090208054610824906120c2565b80601f0160208091040260200160405190810160405280929190818152602001828054610850906120c2565b801561089d5780601f106108725761010080835404028352916020019161089d565b820191906000526020600020905b81548152906001019060200180831161088057829003601f168201915b50505050509050919050565b6001600160a01b0385163314806108c557506108c58533610495565b6109375760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f76656400000000000000000000000000006064820152608401610558565b6109448585858585610d11565b5050505050565b606081518351146109c45760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d6174636800000000000000000000000000000000000000000000006064820152608401610558565b6000835167ffffffffffffffff8111156109e0576109e0611b3f565b604051908082528060200260200182016040528015610a09578160200160208202803683370190505b50905060005b8451811015610a8157610a54858281518110610a2d57610a2d6121be565b6020026020010151858381518110610a4757610a476121be565b60200260200101516104de565b828281518110610a6657610a666121be565b6020908102919091010152610a7a816121ea565b9050610a0f565b509392505050565b3360009081526004602052604090205460ff16610ab9576040516349e27cff60e01b815260040160405180910390fd5b610ac282610cb5565b60008281526007602090815260409091208251610ae192840190611987565b505050565b600580546106d0906120c2565b3360009081526004602052604090205460ff16610b23576040516349e27cff60e01b815260040160405180910390fd5b610b2c82610cb5565b60008281526006602052604090208190610b468282612216565b50505050565b3360009081526004602052604090205460ff16610b7c576040516349e27cff60e01b815260040160405180910390fd5b610b4684848484610f7d565b610b93338383611152565b5050565b3360009081526004602052604090205460ff16610bc7576040516349e27cff60e01b815260040160405180910390fd5b8051610b93906005906020840190611987565b3360009081526004602052604090205460ff16610c0a576040516349e27cff60e01b815260040160405180910390fd5b610b4684848484611246565b606060058054610c25906120c2565b80601f0160208091040260200160405190810160405280929190818152602001828054610c51906120c2565b8015610c9e5780601f10610c7357610100808354040283529160200191610c9e565b820191906000526020600020905b815481529060010190602001808311610c8157829003601f168201915b5050505050905090565b6109448585858585611356565b801580610cc457506009548110155b15610ce257604051636aa2a93760e01b815260040160405180910390fd5b600081815260036020526040902054610d0e57604051634a1850bf60e11b815260040160405180910390fd5b50565b8151835114610d735760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610558565b6001600160a01b038416610dd75760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610558565b33610de68187878787876113f1565b60005b8451811015610f0f576000858281518110610e0657610e066121be565b602002602001015190506000858381518110610e2457610e246121be565b602090810291909101810151600084815280835260408082206001600160a01b038e168352909352919091205490915081811015610eb75760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610558565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610ef4908490612275565b9250508190555050505080610f08906121ea565b9050610de9565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610f5f92919061228d565b60405180910390a4610f75818787878787611506565b505050505050565b6001600160a01b038416610fdd5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610558565b815183511461103f5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610558565b3361104f816000878787876113f1565b60005b84518110156110ea5783818151811061106d5761106d6121be565b602002602001015160008087848151811061108a5761108a6121be565b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b0316815260200190815260200160002060008282546110d29190612275565b909155508190506110e2816121ea565b915050611052565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161113b92919061228d565b60405180910390a461094481600087878787611506565b816001600160a01b0316836001600160a01b0316036111d95760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c6600000000000000000000000000000000000000000000006064820152608401610558565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166112a65760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610558565b336112c6816000876112b7886116ab565b6112c0886116ab565b876113f1565b6000848152602081815260408083206001600160a01b0389168452909152812080548592906112f6908490612275565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610944816000878787876116f6565b6001600160a01b03851633148061137257506113728533610495565b6113e45760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f76656400000000000000000000000000000000000000000000006064820152608401610558565b61094485858585856117f2565b6001600160a01b0385166114785760005b83518110156114765782818151811061141d5761141d6121be565b60200260200101516003600086848151811061143b5761143b6121be565b6020026020010151815260200190815260200160002060008282546114609190612275565b9091555061146f9050816121ea565b9050611402565b505b6001600160a01b038416610f755760005b83518110156114fd578281815181106114a4576114a46121be565b6020026020010151600360008684815181106114c2576114c26121be565b6020026020010151815260200190815260200160002060008282546114e791906122b2565b909155506114f69050816121ea565b9050611489565b50505050505050565b6001600160a01b0384163b15610f755760405163bc197c8160e01b81526001600160a01b0385169063bc197c819061154a90899089908890889088906004016122c9565b6020604051808303816000875af1925050508015611585575060408051601f3d908101601f1916820190925261158291810190612327565b60015b61163a57611591612344565b806308c379a0036115ca57506115a5612360565b806115b057506115cc565b8060405162461bcd60e51b81526004016105589190611b11565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e7465720000000000000000000000006064820152608401610558565b6001600160e01b0319811663bc197c8160e01b146114fd5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610558565b604080516001808252818301909252606091600091906020808301908036833701905050905082816000815181106116e5576116e56121be565b602090810291909101015292915050565b6001600160a01b0384163b15610f755760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e619061173a90899089908890889088906004016123ea565b6020604051808303816000875af1925050508015611775575060408051601f3d908101601f1916820190925261177291810190612327565b60015b61178157611591612344565b6001600160e01b0319811663f23a6e6160e01b146114fd5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610558565b6001600160a01b0384166118565760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610558565b336118668187876112b7886116ab565b6000848152602081815260408083206001600160a01b038a168452909152902054838110156118ea5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610558565b6000858152602081815260408083206001600160a01b038b8116855292528083208785039055908816825281208054869290611927908490612275565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46114fd8288888888886116f6565b828054611993906120c2565b90600052602060002090601f0160209004810192826119b557600085556119fb565b82601f106119ce57805160ff19168380011785556119fb565b828001600101855582156119fb579182015b828111156119fb5782518255916020019190600101906119e0565b50611a07929150611a0b565b5090565b5b80821115611a075760008155600101611a0c565b80356001600160a01b0381168114611a3757600080fd5b919050565b60008060408385031215611a4f57600080fd5b611a5883611a20565b946020939093013593505050565b6001600160e01b031981168114610d0e57600080fd5b600060208284031215611a8e57600080fd5b8135611a9981611a66565b9392505050565b600060208284031215611ab257600080fd5b5035919050565b60005b83811015611ad4578181015183820152602001611abc565b83811115610b465750506000910152565b60008151808452611afd816020860160208601611ab9565b601f01601f19169290920160200192915050565b602081526000611a996020830184611ae5565b600060208284031215611b3657600080fd5b611a9982611a20565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715611b7b57611b7b611b3f565b6040525050565b600067ffffffffffffffff821115611b9c57611b9c611b3f565b5060051b60200190565b600082601f830112611bb757600080fd5b81356020611bc482611b82565b604051611bd18282611b55565b83815260059390931b8501820192828101915086841115611bf157600080fd5b8286015b84811015611c0c5780358352918301918301611bf5565b509695505050505050565b600082601f830112611c2857600080fd5b813567ffffffffffffffff811115611c4257611c42611b3f565b604051611c59601f8301601f191660200182611b55565b818152846020838601011115611c6e57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215611ca357600080fd5b611cac86611a20565b9450611cba60208701611a20565b9350604086013567ffffffffffffffff80821115611cd757600080fd5b611ce389838a01611ba6565b94506060880135915080821115611cf957600080fd5b611d0589838a01611ba6565b93506080880135915080821115611d1b57600080fd5b50611d2888828901611c17565b9150509295509295909350565b60008060408385031215611d4857600080fd5b823567ffffffffffffffff80821115611d6057600080fd5b818501915085601f830112611d7457600080fd5b81356020611d8182611b82565b604051611d8e8282611b55565b83815260059390931b8501820192828101915089841115611dae57600080fd5b948201945b83861015611dd357611dc486611a20565b82529482019490820190611db3565b96505086013592505080821115611de957600080fd5b50611df685828601611ba6565b9150509250929050565b600081518084526020808501945080840160005b83811015611e3057815187529582019590820190600101611e14565b509495945050505050565b602081526000611a996020830184611e00565b60008060408385031215611e6157600080fd5b82359150602083013567ffffffffffffffff811115611e7f57600080fd5b611df685828601611c17565b6000808284036080811215611e9f57600080fd5b833592506060601f1982011215611eb557600080fd5b506020830190509250929050565b60008060008060808587031215611ed957600080fd5b611ee285611a20565b9350602085013567ffffffffffffffff80821115611eff57600080fd5b611f0b88838901611ba6565b94506040870135915080821115611f2157600080fd5b611f2d88838901611ba6565b93506060870135915080821115611f4357600080fd5b50611f5087828801611c17565b91505092959194509250565b60008060408385031215611f6f57600080fd5b611f7883611a20565b915060208301358015158114611f8d57600080fd5b809150509250929050565b600060208284031215611faa57600080fd5b813567ffffffffffffffff811115611fc157600080fd5b611fcd84828501611c17565b949350505050565b60008060008060808587031215611feb57600080fd5b611ff485611a20565b93506020850135925060408501359150606085013567ffffffffffffffff81111561201e57600080fd5b611f5087828801611c17565b6000806040838503121561203d57600080fd5b61204683611a20565b915061205460208401611a20565b90509250929050565b600080600080600060a0868803121561207557600080fd5b61207e86611a20565b945061208c60208701611a20565b93506040860135925060608601359150608086013567ffffffffffffffff8111156120b657600080fd5b611d2888828901611c17565b600181811c908216806120d657607f821691505b6020821081036120f657634e487b7160e01b600052602260045260246000fd5b50919050565b6000815161210e818560208601611ab9565b9290920192915050565b600080845481600182811c91508083168061213457607f831692505b6020808410820361215357634e487b7160e01b86526022600452602486fd5b8180156121675760018114612178576121a5565b60ff198616895284890196506121a5565b60008b81526020902060005b8681101561219d5781548b820152908501908301612184565b505084890196505b5050505050506121b581856120fc565b95945050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016121fc576121fc6121d4565b5060010190565b6000813560ff811681146105d357600080fd5b60ff61222183612203565b1681548160ff19821617835561ff0061223c60208601612203565b60081b16808361ffff1984161717845562ff000061225c60408701612203565b60101b168362ffffff1984161782171784555050505050565b60008219821115612288576122886121d4565b500190565b6040815260006122a06040830185611e00565b82810360208401526121b58185611e00565b6000828210156122c4576122c46121d4565b500390565b60006001600160a01b03808816835280871660208401525060a060408301526122f560a0830186611e00565b82810360608401526123078186611e00565b9050828103608084015261231b8185611ae5565b98975050505050505050565b60006020828403121561233957600080fd5b8151611a9981611a66565b600060033d111561235d5760046000803e5060005160e01c5b90565b600060443d101561236e5790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561239e57505050505090565b82850191508151818111156123b65750505050505090565b843d87010160208285010111156123d05750505050505090565b6123df60208286010187611b55565b509095945050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261242260a0830184611ae5565b97965050505050505056fea164736f6c634300080d000a";

type PhiObjectConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PhiObjectConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PhiObject__factory extends ContractFactory {
  constructor(...args: PhiObjectConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PhiObject> {
    return super.deploy(overrides || {}) as Promise<PhiObject>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PhiObject {
    return super.attach(address) as PhiObject;
  }
  override connect(signer: Signer): PhiObject__factory {
    return super.connect(signer) as PhiObject__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PhiObjectInterface {
    return new utils.Interface(_abi) as PhiObjectInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PhiObject {
    return new Contract(address, _abi, signerOrProvider) as PhiObject;
  }
}
