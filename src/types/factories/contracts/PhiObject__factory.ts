/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PhiObject, PhiObjectInterface } from "../../contracts/PhiObject";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTokenID",
    type: "error",
  },
  {
    inputs: [],
    name: "NonExistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "OwnershipRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseMetadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseMetadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getMaxClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getSize",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct PhiObject.Size",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenLink",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newMaxClaimed",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct PhiObject.Size",
        name: "size",
        type: "tuple",
      },
    ],
    name: "initToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mintBatchObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mintObject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "objectSize",
    outputs: [
      {
        internalType: "uint8",
        name: "x",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "y",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "z",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetAddress",
        type: "address",
      },
    ],
    name: "owner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
    ],
    name: "removeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newMaxClaimed",
        type: "uint256",
      },
    ],
    name: "setMaxClaimed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "x",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "y",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "z",
            type: "uint8",
          },
        ],
        internalType: "struct PhiObject.Size",
        name: "size",
        type: "tuple",
      },
    ],
    name: "setSize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "setTokenLink",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "baseuri",
        type: "string",
      },
    ],
    name: "setbaseMetadataURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenURL",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040805160208101909152600081526200002c8162000095565b5033600090815260046020908152604091829020805460ff19166001179055815180830190925260188083527f68747470733a2f2f7777772e617277656176652e6e65742f0000000000000000929091019182526200008e91600591620000ae565b5062000190565b8051620000aa906002906020840190620000ae565b5050565b828054620000bc9062000154565b90600052602060002090601f016020900481019282620000e057600085556200012b565b82601f10620000fb57805160ff19168380011785556200012b565b828001600101855582156200012b579182015b828111156200012b5782518255916020019190600101906200010e565b50620001399291506200013d565b5090565b5b808211156200013957600081556001016200013e565b600181811c908216806200016957607f821691505b6020821081036200018a57634e487b7160e01b600052602260045260246000fd5b50919050565b61255f80620001a06000396000f3fe608060405234801561001057600080fd5b50600436106101b85760003560e01c80635b2bd79e116100f9578063a393a97d11610097578063d980f4ae11610071578063d980f4ae146104aa578063e985e9c5146104bd578063ea2fe3cb146104f9578063f242432a1461050157600080fd5b8063a393a97d1461041d578063b6ed6da914610477578063bd85b0391461048a57600080fd5b8063697436d9116100d3578063697436d9146103c457806384c43211146103d75780639733faa5146103ea578063a22cb4651461040a57600080fd5b80635b2bd79e1461037d578063604c7f8014610385578063666e1b391461039857600080fd5b8063154e839e116101665780632eb2c2d6116101405780632eb2c2d6146103155780634e1273f4146103285780634f558e79146103485780635972dbf31461036a57600080fd5b8063154e839e146102dc578063173825d9146102ef5780631c271cc71461030257600080fd5b80630d09308e116101975780630d09308e146102945780630e89341c146102a957806313af4035146102c957600080fd5b8062fdd58e146101bd57806301ffc9a7146101e3578063023c23db14610206575b600080fd5b6101d06101cb366004611adc565b610514565b6040519081526020015b60405180910390f35b6101f66101f1366004611b1f565b6105bd565b60405190151581526020016101da565b610268610214366004611b43565b6040805160608082018352600080835260208084018290529284018190529384526006825292829020825193840183525460ff80821685526101008204811692850192909252620100009004169082015290565b60408051825160ff908116825260208085015182169083015292820151909216908201526060016101da565b6102a76102a2366004611b5c565b61060f565b005b6102bc6102b7366004611b43565b61067d565b6040516101da9190611bd6565b6102a76102d7366004611be9565b6106de565b6102bc6102ea366004611b43565b61075b565b6102a76102fd366004611be9565b6107f5565b6102bc610310366004611b43565b61086f565b6102a7610323366004611d50565b610911565b61033b610336366004611dfa565b6109b3565b6040516101da9190611f00565b6101f6610356366004611b43565b600090815260036020526040902054151590565b6102a7610378366004611f13565b610af1565b6102bc610b71565b6102a7610393366004611f68565b610b7e565b6101f66103a6366004611be9565b6001600160a01b031660009081526004602052604090205460ff1690565b6102a76103d2366004611f95565b610bfa565b6102a76103e536600461202e565b610c36565b6101d06103f8366004611b43565b60009081526009602052604090205490565b6102a7610418366004612090565b610c84565b61045361042b366004611b43565b60066020526000908152604090205460ff808216916101008104821691620100009091041683565b6040805160ff948516815292841660208401529216918101919091526060016101da565b6102a76104853660046120cc565b610c93565b6101d0610498366004611b43565b60009081526003602052604090205490565b6102a76104b8366004612109565b610cd6565b6101f66104cb36600461215e565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6102bc610d12565b6102a761050f366004612188565b610da4565b60006001600160a01b0383166105975760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b14806105ee57506001600160e01b031982166303a24d0760e21b145b8061060957506301ffc9a760e01b6001600160e01b03198316145b92915050565b3360009081526004602052604090205460ff1661063f576040516349e27cff60e01b815260040160405180910390fd5b60008281526003602052604090205461066b57604051634a1850bf60e11b815260040160405180910390fd5b60009182526009602052604090912055565b6000818152600360205260409020546060906106ac57604051634a1850bf60e11b815260040160405180910390fd5b60056106b78361086f565b6040516020016106c892919061223d565b6040516020818303038152906040529050919050565b3360009081526004602052604090205460ff1661070e576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260046020526040808220805460ff191660011790555133917f619792ba07bec101df538ab277befa333e4cf1c0274f11de7be2a9507b9c9a0691a350565b60076020526000908152604090208054610774906121ed565b80601f01602080910402602001604051908101604052809291908181526020018280546107a0906121ed565b80156107ed5780601f106107c2576101008083540402835291602001916107ed565b820191906000526020600020905b8154815290600101906020018083116107d057829003601f168201915b505050505081565b3360009081526004602052604090205460ff16610825576040516349e27cff60e01b815260040160405180910390fd5b6001600160a01b038116600081815260046020526040808220805460ff191690555133917fc191551a88c5609788f3532bd94c06479b61b0040eec65f9cd985428ffea643091a350565b600081815260076020526040902080546060919061088c906121ed565b80601f01602080910402602001604051908101604052809291908181526020018280546108b8906121ed565b80156109055780601f106108da57610100808354040283529160200191610905565b820191906000526020600020905b8154815290600101906020018083116108e857829003601f168201915b50505050509050919050565b6001600160a01b03851633148061092d575061092d85336104cb565b61099f5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f7665640000000000000000000000000000606482015260840161058e565b6109ac8585858585610db1565b5050505050565b60608151835114610a2c5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d617463680000000000000000000000000000000000000000000000606482015260840161058e565b6000835167ffffffffffffffff811115610a4857610a48611c04565b604051908082528060200260200182016040528015610a71578160200160208202803683370190505b50905060005b8451811015610ae957610abc858281518110610a9557610a956122e3565b6020026020010151858381518110610aaf57610aaf6122e3565b6020026020010151610514565b828281518110610ace57610ace6122e3565b6020908102919091010152610ae28161230f565b9050610a77565b509392505050565b3360009081526004602052604090205460ff16610b21576040516349e27cff60e01b815260040160405180910390fd5b600082815260036020526040902054610b4d57604051634a1850bf60e11b815260040160405180910390fd5b60008281526007602090815260409091208251610b6c92840190611a27565b505050565b60058054610774906121ed565b3360009081526004602052604090205460ff16610bae576040516349e27cff60e01b815260040160405180910390fd5b600082815260036020526040902054610bda57604051634a1850bf60e11b815260040160405180910390fd5b60008281526006602052604090208190610bf4828261233b565b50505050565b3360009081526004602052604090205460ff16610c2a576040516349e27cff60e01b815260040160405180910390fd5b610bf48484848461101d565b3360009081526004602052604090205460ff16610c66576040516349e27cff60e01b815260040160405180910390fd5b610c70848461060f565b610c7a8483610af1565b610bf48482610b7e565b610c8f3383836111f2565b5050565b3360009081526004602052604090205460ff16610cc3576040516349e27cff60e01b815260040160405180910390fd5b8051610c8f906005906020840190611a27565b3360009081526004602052604090205460ff16610d06576040516349e27cff60e01b815260040160405180910390fd5b610bf4848484846112e6565b606060058054610d21906121ed565b80601f0160208091040260200160405190810160405280929190818152602001828054610d4d906121ed565b8015610d9a5780601f10610d6f57610100808354040283529160200191610d9a565b820191906000526020600020905b815481529060010190602001808311610d7d57829003601f168201915b5050505050905090565b6109ac85858585856113f6565b8151835114610e135760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b606482015260840161058e565b6001600160a01b038416610e775760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b606482015260840161058e565b33610e86818787878787611491565b60005b8451811015610faf576000858281518110610ea657610ea66122e3565b602002602001015190506000858381518110610ec457610ec46122e3565b602090810291909101810151600084815280835260408082206001600160a01b038e168352909352919091205490915081811015610f575760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b606482015260840161058e565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610f9490849061239a565b9250508190555050505080610fa89061230f565b9050610e89565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610fff9291906123b2565b60405180910390a46110158187878787876115a6565b505050505050565b6001600160a01b03841661107d5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b606482015260840161058e565b81518351146110df5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b606482015260840161058e565b336110ef81600087878787611491565b60005b845181101561118a5783818151811061110d5761110d6122e3565b602002602001015160008087848151811061112a5761112a6122e3565b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b031681526020019081526020016000206000828254611172919061239a565b909155508190506111828161230f565b9150506110f2565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516111db9291906123b2565b60405180910390a46109ac816000878787876115a6565b816001600160a01b0316836001600160a01b0316036112795760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c660000000000000000000000000000000000000000000000606482015260840161058e565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166113465760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b606482015260840161058e565b33611366816000876113578861174b565b6113608861174b565b87611491565b6000848152602081815260408083206001600160a01b03891684529091528120805485929061139690849061239a565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46109ac81600087878787611796565b6001600160a01b038516331480611412575061141285336104cb565b6114845760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f7665640000000000000000000000000000000000000000000000606482015260840161058e565b6109ac8585858585611892565b6001600160a01b0385166115185760005b8351811015611516578281815181106114bd576114bd6122e3565b6020026020010151600360008684815181106114db576114db6122e3565b602002602001015181526020019081526020016000206000828254611500919061239a565b9091555061150f90508161230f565b90506114a2565b505b6001600160a01b0384166110155760005b835181101561159d57828181518110611544576115446122e3565b602002602001015160036000868481518110611562576115626122e3565b60200260200101518152602001908152602001600020600082825461158791906123d7565b9091555061159690508161230f565b9050611529565b50505050505050565b6001600160a01b0384163b156110155760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906115ea90899089908890889088906004016123ee565b6020604051808303816000875af1925050508015611625575060408051601f3d908101601f191682019092526116229181019061244c565b60015b6116da57611631612469565b806308c379a00361166a5750611645612485565b80611650575061166c565b8060405162461bcd60e51b815260040161058e9190611bd6565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e746572000000000000000000000000606482015260840161058e565b6001600160e01b0319811663bc197c8160e01b1461159d5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b606482015260840161058e565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110611785576117856122e3565b602090810291909101015292915050565b6001600160a01b0384163b156110155760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906117da908990899088908890889060040161250f565b6020604051808303816000875af1925050508015611815575060408051601f3d908101601f191682019092526118129181019061244c565b60015b61182157611631612469565b6001600160e01b0319811663f23a6e6160e01b1461159d5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b606482015260840161058e565b6001600160a01b0384166118f65760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b606482015260840161058e565b336119068187876113578861174b565b6000848152602081815260408083206001600160a01b038a1684529091529020548381101561198a5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b606482015260840161058e565b6000858152602081815260408083206001600160a01b038b81168552925280832087850390559088168252812080548692906119c790849061239a565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461159d828888888888611796565b828054611a33906121ed565b90600052602060002090601f016020900481019282611a555760008555611a9b565b82601f10611a6e57805160ff1916838001178555611a9b565b82800160010185558215611a9b579182015b82811115611a9b578251825591602001919060010190611a80565b50611aa7929150611aab565b5090565b5b80821115611aa75760008155600101611aac565b80356001600160a01b0381168114611ad757600080fd5b919050565b60008060408385031215611aef57600080fd5b611af883611ac0565b946020939093013593505050565b6001600160e01b031981168114611b1c57600080fd5b50565b600060208284031215611b3157600080fd5b8135611b3c81611b06565b9392505050565b600060208284031215611b5557600080fd5b5035919050565b60008060408385031215611b6f57600080fd5b50508035926020909101359150565b60005b83811015611b99578181015183820152602001611b81565b83811115610bf45750506000910152565b60008151808452611bc2816020860160208601611b7e565b601f01601f19169290920160200192915050565b602081526000611b3c6020830184611baa565b600060208284031215611bfb57600080fd5b611b3c82611ac0565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715611c4057611c40611c04565b6040525050565b600067ffffffffffffffff821115611c6157611c61611c04565b5060051b60200190565b600082601f830112611c7c57600080fd5b81356020611c8982611c47565b604051611c968282611c1a565b83815260059390931b8501820192828101915086841115611cb657600080fd5b8286015b84811015611cd15780358352918301918301611cba565b509695505050505050565b600082601f830112611ced57600080fd5b813567ffffffffffffffff811115611d0757611d07611c04565b604051611d1e601f8301601f191660200182611c1a565b818152846020838601011115611d3357600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215611d6857600080fd5b611d7186611ac0565b9450611d7f60208701611ac0565b9350604086013567ffffffffffffffff80821115611d9c57600080fd5b611da889838a01611c6b565b94506060880135915080821115611dbe57600080fd5b611dca89838a01611c6b565b93506080880135915080821115611de057600080fd5b50611ded88828901611cdc565b9150509295509295909350565b60008060408385031215611e0d57600080fd5b823567ffffffffffffffff80821115611e2557600080fd5b818501915085601f830112611e3957600080fd5b81356020611e4682611c47565b604051611e538282611c1a565b83815260059390931b8501820192828101915089841115611e7357600080fd5b948201945b83861015611e9857611e8986611ac0565b82529482019490820190611e78565b96505086013592505080821115611eae57600080fd5b50611ebb85828601611c6b565b9150509250929050565b600081518084526020808501945080840160005b83811015611ef557815187529582019590820190600101611ed9565b509495945050505050565b602081526000611b3c6020830184611ec5565b60008060408385031215611f2657600080fd5b82359150602083013567ffffffffffffffff811115611f4457600080fd5b611ebb85828601611cdc565b600060608284031215611f6257600080fd5b50919050565b60008060808385031215611f7b57600080fd5b82359150611f8c8460208501611f50565b90509250929050565b60008060008060808587031215611fab57600080fd5b611fb485611ac0565b9350602085013567ffffffffffffffff80821115611fd157600080fd5b611fdd88838901611c6b565b94506040870135915080821115611ff357600080fd5b611fff88838901611c6b565b9350606087013591508082111561201557600080fd5b5061202287828801611cdc565b91505092959194509250565b60008060008060c0858703121561204457600080fd5b8435935060208501359250604085013567ffffffffffffffff81111561206957600080fd5b61207587828801611cdc565b9250506120858660608701611f50565b905092959194509250565b600080604083850312156120a357600080fd5b6120ac83611ac0565b9150602083013580151581146120c157600080fd5b809150509250929050565b6000602082840312156120de57600080fd5b813567ffffffffffffffff8111156120f557600080fd5b61210184828501611cdc565b949350505050565b6000806000806080858703121561211f57600080fd5b61212885611ac0565b93506020850135925060408501359150606085013567ffffffffffffffff81111561215257600080fd5b61202287828801611cdc565b6000806040838503121561217157600080fd5b61217a83611ac0565b9150611f8c60208401611ac0565b600080600080600060a086880312156121a057600080fd5b6121a986611ac0565b94506121b760208701611ac0565b93506040860135925060608601359150608086013567ffffffffffffffff8111156121e157600080fd5b611ded88828901611cdc565b600181811c9082168061220157607f821691505b602082108103611f6257634e487b7160e01b600052602260045260246000fd5b60008151612233818560208601611b7e565b9290920192915050565b600080845481600182811c91508083168061225957607f831692505b6020808410820361227857634e487b7160e01b86526022600452602486fd5b81801561228c576001811461229d576122ca565b60ff198616895284890196506122ca565b60008b81526020902060005b868110156122c25781548b8201529085019083016122a9565b505084890196505b5050505050506122da8185612221565b95945050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201612321576123216122f9565b5060010190565b6000813560ff8116811461060957600080fd5b60ff61234683612328565b1681548160ff19821617835561ff0061236160208601612328565b60081b16808361ffff1984161717845562ff000061238160408701612328565b60101b168362ffffff1984161782171784555050505050565b600082198211156123ad576123ad6122f9565b500190565b6040815260006123c56040830185611ec5565b82810360208401526122da8185611ec5565b6000828210156123e9576123e96122f9565b500390565b60006001600160a01b03808816835280871660208401525060a0604083015261241a60a0830186611ec5565b828103606084015261242c8186611ec5565b905082810360808401526124408185611baa565b98975050505050505050565b60006020828403121561245e57600080fd5b8151611b3c81611b06565b600060033d11156124825760046000803e5060005160e01c5b90565b600060443d10156124935790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156124c357505050505090565b82850191508151818111156124db5750505050505090565b843d87010160208285010111156124f55750505050505090565b61250460208286010187611c1a565b509095945050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261254760a0830184611baa565b97965050505050505056fea164736f6c634300080d000a";

type PhiObjectConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PhiObjectConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PhiObject__factory extends ContractFactory {
  constructor(...args: PhiObjectConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PhiObject> {
    return super.deploy(overrides || {}) as Promise<PhiObject>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PhiObject {
    return super.attach(address) as PhiObject;
  }
  override connect(signer: Signer): PhiObject__factory {
    return super.connect(signer) as PhiObject__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PhiObjectInterface {
    return new utils.Interface(_abi) as PhiObjectInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PhiObject {
    return new Contract(address, _abi, signerOrProvider) as PhiObject;
  }
}
